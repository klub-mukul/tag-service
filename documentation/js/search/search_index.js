var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.593,1,2.382]],["body/controllers/AppController.html",[0,2.704,1,4.042,2,2.459,3,0.352,4,0.352,5,0.3,6,3.855,7,0.781,8,2.485,9,5.154,10,1.626,11,0.03,12,0.582,13,4.601,14,2.067,15,0.776,16,0.488,17,1.19,18,3.169,19,3.855,20,0.406,21,0.237,22,3.855,23,2.459,24,2.067,25,4.601,26,0.025,27,0.025]],["title/modules/AppModule.html",[28,1.593,29,1.914]],["body/modules/AppModule.html",[2,2.631,3,0.292,4,0.292,5,0.249,11,0.031,16,0.561,17,0.987,18,3.261,19,3.198,20,0.337,21,0.197,26,0.022,27,0.022,28,2.407,29,3.695,30,1.867,31,2.631,32,3.198,33,3.198,34,3.198,35,3.584,36,3.206,37,2.486,38,2.486,39,3.817,40,2.892,41,3.548,42,3.983,43,3.817,44,2.79,45,2.486,46,4.922,47,2.79,48,3.198,49,2.04,50,3.817,51,3.817,52,2.815,53,3.817,54,2.892,55,3.817,56,3.817,57,4.922,58,4.922,59,3.198,60,3.198,61,3.817,62,3.198,63,3.817,64,1.248,65,3.817,66,3.198]],["title/injectables/AppService.html",[18,1.741,67,1.593]],["body/injectables/AppService.html",[3,0.363,4,0.363,5,0.309,7,0.805,8,2.529,9,5.204,11,0.03,12,0.599,14,2.129,15,0.789,16,0.418,17,1.225,18,3.008,20,0.418,21,0.244,24,2.129,26,0.026,27,0.026,67,2.752,68,3.085,69,3.97,70,4.738,71,4.738,72,4.738]],["title/injectables/ConfigService.html",[52,1.593,67,1.593]],["body/injectables/ConfigService.html",[3,0.187,4,0.187,5,0.16,7,0.416,8,1.625,11,0.031,12,0.695,14,2.386,15,0.866,16,0.469,17,0.633,20,0.32,21,0.187,23,2.541,24,2.632,26,0.017,27,0.017,28,1.197,30,1.197,49,1.308,52,2.997,64,1.658,66,3.031,67,1.769,68,1.594,73,2.051,74,0.539,75,2.838,76,4.754,77,3.618,78,5.072,79,5.072,80,5.072,81,5.072,82,2.448,83,1.934,84,1.934,85,3.618,86,2.448,87,1.094,88,0.732,89,0.552,90,0.796,91,2.793,92,3.618,93,2.448,94,4.754,95,2.448,96,2.448,97,2.448,98,2.448,99,2.838,100,2.448,101,2.448,102,2.448,103,2.448,104,4.754,105,3.031,106,1.438,107,2.051,108,3.146,109,2.448,110,2.645,111,1.789,112,2.645,113,1.941,114,2.448,115,2.051,116,2.448,117,4.303,118,1.789,119,2.448,120,2.448,121,2.448,122,2.936,123,2.448,124,2.448,125,2.448,126,2.448,127,2.448,128,2.645,129,3.618,130,1.789,131,1.769,132,2.448,133,2.448,134,3.096,135,2.448,136,4.25,137,2.448,138,2.448,139,2.448,140,3.618,141,3.618,142,1.012,143,2.448,144,2.448,145,2.448,146,2.448,147,2.125,148,2.448,149,2.448,150,1.013,151,2.448,152,2.448,153,2.448,154,2.448,155,3.618,156,2.448,157,2.051,158,2.448,159,1.789,160,2.448,161,2.448,162,2.448,163,1.789]],["title/classes/CreateTagDto.html",[21,0.168,164,1.741]],["body/classes/CreateTagDto.html",[3,0.185,4,0.185,5,0.158,7,0.411,10,1.933,11,0.031,12,0.692,15,0.909,16,0.417,20,0.214,21,0.185,26,0.016,27,0.016,74,1.236,88,1.227,89,0.661,90,1.236,113,1.933,142,1.572,150,2.326,164,3.068,165,0.577,166,2.025,167,1.084,168,2.265,169,2.965,170,2.265,171,2.676,172,2.676,173,2.123,174,1.767,175,1.341,176,2.334,177,2.334,178,2.747,179,2.99,180,1.42,181,2.417,182,2.025,183,2.106,184,3.003,185,2.311,186,2.334,187,2.334,188,2.334,189,2.334,190,2.334,191,2.417,192,2.417,193,2.334,194,2.417,195,2.782,196,2.334,197,2.417,198,2.334,199,2.417,200,2.334,201,2.417,202,2.025,203,2.334,204,2.417,205,2.311,206,3.286,207,0.924,208,3.077,209,3.579,210,3.286,211,2.825,212,3.003,213,1.086,214,1.574,215,1.767,216,1.767,217,1.767,218,2.62,219,1.767,220,1.767,221,1.767,222,1.767,223,1.767,224,1.767,225,1.767,226,1.767]],["title/classes/CreatedByDto.html",[21,0.168,227,2.382]],["body/classes/CreatedByDto.html",[3,0.328,4,0.328,5,0.279,7,0.728,10,1.514,11,0.03,12,0.542,15,0.743,16,0.508,20,0.378,21,0.273,26,0.024,27,0.024,74,0.943,89,0.578,142,1.481,165,1.023,167,1.602,169,3.377,175,1.264,178,2.379,179,2.59,183,3.111,184,4.437,185,2.811,186,3.448,187,3.448,188,3.448,189,3.448,190,3.448,205,2.59,207,1.638,208,3.448,211,2.83,213,1.925,214,2.79,227,3.871,228,3.59,229,3.59,230,4.285]],["title/classes/CsvFileValidationError.html",[21,0.168,231,2.382]],["body/classes/CsvFileValidationError.html",[3,0.359,4,0.359,5,0.306,11,0.03,12,0.593,15,0.838,16,0.414,17,1.212,20,0.414,21,0.242,26,0.026,27,0.026,64,1.532,87,1.418,88,0.949,89,0.471,90,1.031,165,1.119,231,4.088,232,3.927,233,2.735,234,3.511,235,3.285,236,4.687,237,2.106,238,2.292,239,3.052,240,3.426]],["title/classes/GetTagDto.html",[21,0.168,241,1.914]],["body/classes/GetTagDto.html",[3,0.226,4,0.226,5,0.193,7,0.502,10,1.93,11,0.031,12,0.691,15,0.922,16,0.366,20,0.261,21,0.214,26,0.019,27,0.019,74,1.202,88,1.271,89,0.664,90,1.344,113,1.93,142,1.451,150,2.344,165,0.706,167,1.254,170,2.407,171,2.843,172,2.843,175,1.239,178,2.745,179,2.988,193,2.7,195,3.117,196,2.7,198,2.7,200,2.7,203,2.7,205,2.341,206,3.378,207,1.13,210,3.687,211,3.026,213,1.329,241,3.416,242,2.478,243,3.473,244,2.957,245,2.957,246,2.957,247,2.957,248,2.957]],["title/controllers/HealthController.html",[0,1.593,41,2.122]],["body/controllers/HealthController.html",[0,1.85,2,2.022,3,0.29,4,0.29,5,0.247,7,0.643,8,2.199,10,1.337,11,0.031,12,0.478,14,1.7,16,0.507,17,0.978,20,0.432,21,0.253,23,2.022,24,2.199,26,0.022,27,0.022,41,4.131,47,3.578,64,1.6,74,0.833,75,2.9,83,2.022,84,2.022,89,0.38,113,1.73,131,2.394,207,1.446,249,3.17,250,3.17,251,5.259,252,2.9,253,3.784,254,3.784,255,2.9,256,3.784,257,3.784,258,3.17,259,3.784,260,5.737,261,5.426,262,5.942,263,3.784,264,3.784,265,3.578,266,3.784,267,3.784,268,4.895]],["title/interfaces/IErrorObject.html",[269,2.122,270,2.122]],["body/interfaces/IErrorObject.html",[3,0.454,4,0.226,5,0.192,7,0.501,11,0.031,12,0.373,15,0.874,16,0.26,20,0.26,24,1.858,26,0.019,27,0.019,74,1.245,89,0.548,91,3.043,106,2.43,113,1.461,122,3.169,131,2.766,150,1.22,167,1.251,237,2.707,269,2.693,270,3.924,271,2.947,272,2.155,273,5.115,274,2.947,275,2.947,276,3.465,277,3.465,278,3.465,279,2.469,280,3.023,281,4.003,282,4.003,283,3.493,284,3.373,285,3.465,286,3.023,287,2.469,288,3.493,289,2.469,290,3.023,291,4.34,292,3.465,293,2.469,294,3.023,295,2.469,296,3.023,297,2.469,298,2.469,299,3.493,300,2.469,301,2.469,302,2.469,303,2.469,304,2.155,305,2.469,306,2.43,307,2.469,308,2.469,309,2.469,310,2.469]],["title/classes/Migrations1683734889829.html",[21,0.168,311,1.914]],["body/classes/Migrations1683734889829.html",[3,0.269,4,0.269,5,0.229,7,0.597,8,2.096,11,0.03,12,0.662,14,2.096,15,0.493,16,0.311,20,0.311,21,0.181,26,0.021,27,0.021,75,3.188,87,1.411,88,1.207,89,0.561,90,1.027,91,2.066,99,1.88,142,0.984,165,0.84,167,1.411,168,1.456,170,1.456,185,1.72,252,3.188,255,2.981,284,2.29,311,3.277,312,4.672,313,2.571,314,3.909,315,4.387,316,3.909,317,3.909,318,3.885,319,2.947,320,3.909,321,5.241,322,2.947,323,3.909,324,2.947,325,2.066,326,3.039,327,2.947,328,2.29,329,3.411,330,3.909,331,2.282,332,4.074,333,2.947,334,4.242,335,4.387,336,4.387,337,2.947,338,2.947,339,2.571,340,2.947,341,2.066,342,2.571,343,3.828,344,3.909,345,2.947,346,2.571,347,2.947,348,2.947,349,2.947,350,2.947,351,2.947,352,2.947]],["title/classes/Migrations1683734889829-1.html",[21,0.141,311,1.603,353,1.994]],["body/classes/Migrations1683734889829-1.html",[3,0.269,4,0.269,5,0.229,7,0.597,8,2.096,11,0.03,12,0.662,14,2.096,15,0.493,16,0.311,20,0.311,21,0.181,26,0.021,27,0.021,75,3.188,87,1.411,88,1.207,89,0.561,90,1.027,91,2.066,99,1.88,142,0.984,165,0.84,167,1.411,168,1.456,170,1.456,185,1.72,252,3.188,255,2.981,284,2.29,311,3.277,313,2.571,314,3.909,315,4.387,316,3.909,317,3.909,318,3.885,319,2.947,320,3.909,321,5.241,322,2.947,323,3.909,324,2.947,325,2.066,326,3.039,327,2.947,328,2.29,329,3.411,330,3.909,331,2.282,332,4.074,333,2.947,334,4.242,335,4.387,336,4.387,337,2.947,338,2.947,339,2.571,340,2.947,341,2.066,342,2.571,343,3.828,344,3.909,345,2.947,346,2.571,347,2.947,348,2.947,349,2.947,350,2.947,351,2.947,352,2.947,354,4.672]],["title/classes/NoTagFoundException.html",[21,0.168,355,1.914]],["body/classes/NoTagFoundException.html",[3,0.353,4,0.353,5,0.301,11,0.03,12,0.583,15,0.833,16,0.407,17,1.193,20,0.407,21,0.238,26,0.025,27,0.025,64,1.508,87,1.395,88,0.934,89,0.464,90,1.015,165,1.101,175,1.101,233,2.709,234,3.487,235,3.254,237,2.489,238,2.256,331,2.256,355,3.254,356,3.865,357,4.613,358,4.613,359,3.372,360,3.865]],["title/classes/ResourceValidationException.html",[21,0.168,361,2.122]],["body/classes/ResourceValidationException.html",[3,0.359,4,0.359,5,0.306,11,0.03,12,0.593,15,0.838,16,0.414,17,1.212,20,0.414,21,0.242,26,0.026,27,0.026,64,1.532,87,1.418,88,0.949,89,0.471,90,1.031,165,1.119,233,2.735,234,3.511,235,3.285,237,2.106,238,2.292,239,3.052,240,3.426,361,3.642,362,3.927,363,4.687]],["title/classes/ResponseTagDto.html",[21,0.168,364,1.914]],["body/classes/ResponseTagDto.html",[3,0.149,4,0.149,5,0.127,7,0.33,10,1.906,11,0.031,12,0.697,15,0.906,16,0.373,20,0.172,21,0.157,26,0.014,27,0.014,64,1.221,74,1.214,83,1.623,84,1.623,87,0.588,88,1.185,89,0.659,90,1.344,99,2.448,113,1.949,131,0.951,142,1.543,150,2.364,165,0.464,167,0.918,168,2.1,170,2.1,171,2.48,172,2.48,173,1.897,174,1.421,175,1.482,176,1.977,177,1.977,178,2.725,179,2.966,180,1.142,193,2.75,195,3.303,196,1.977,198,1.977,200,2.75,203,2.75,205,1.485,206,3.512,207,0.743,210,3.592,211,2.882,213,0.873,215,1.421,216,1.421,217,1.421,218,2.219,219,1.421,220,1.421,221,1.421,222,1.421,223,1.421,224,1.421,225,1.421,226,1.421,243,1.629,331,2.48,341,2.98,364,3.441,365,1.629,366,3.348,367,3.036,368,3.036,369,1.944,370,3.036,371,3.036,372,3.036,373,3.036,374,3.036,375,1.944,376,3.036,377,1.944,378,1.944,379,1.944,380,1.944,381,1.944,382,3.036,383,3.036,384,3.036,385,3.036,386,3.036,387,3.036,388,3.036,389,1.944,390,1.266,391,1.944,392,1.944,393,1.944,394,1.944,395,1.944,396,1.944,397,1.944,398,1.944,399,1.944,400,1.944,401,1.944,402,1.944,403,1.944,404,1.944,405,1.944,406,1.944,407,1.944,408,1.944]],["title/modules/SharedModule.html",[28,1.593,54,1.914]],["body/modules/SharedModule.html",[3,0.307,4,0.307,5,0.262,11,0.031,16,0.518,17,1.037,20,0.449,21,0.262,26,0.023,27,0.023,28,2.484,30,1.961,31,2.715,36,3.308,37,2.611,38,2.611,40,3.554,42,3.713,52,3.195,54,3.818,60,3.359,62,3.359,74,0.882,89,0.403,122,2.143,409,3.359,410,3.359,411,3.359,412,2.931,413,5.08,414,5.576,415,3.359,416,5.08,417,5.08,418,3.359,419,4.009,420,4.009]],["title/entities/Tag.html",[147,1.914,175,0.778]],["body/entities/Tag.html",[3,0.166,4,0.166,5,0.141,7,0.367,10,2.116,11,0.031,12,0.757,15,0.893,16,0.353,20,0.191,21,0.17,26,0.015,27,0.015,88,1.127,89,0.661,90,1.318,99,2.135,113,2.116,134,1.409,142,1.589,147,1.271,150,2.424,167,0.997,168,1.991,169,2.826,170,1.991,171,2.352,172,2.352,173,2.008,175,1.454,180,1.271,185,1.612,213,0.972,318,2.602,325,1.271,331,2.352,334,4.151,339,2.41,341,2.826,342,2.41,343,3.266,346,2.41,366,3.516,421,1.812,422,3.995,423,4.81,424,4.81,425,2.602,426,2.163,427,6.134,428,2.163,429,5.567,430,2.163,431,2.163,432,3.297,433,4.81,434,2.163,435,3.995,436,2.163,437,3.297,438,2.163,439,2.163,440,2.163,441,2.163,442,3.995,443,2.163,444,2.163,445,2.163,446,2.163,447,2.163,448,2.163,449,2.163,450,2.163,451,3.297,452,3.297,453,5.773,454,3.297,455,2.163,456,3.297,457,1.812,458,2.163]],["title/classes/TagConditions.html",[21,0.168,173,1.464]],["body/classes/TagConditions.html",[3,0.266,4,0.266,5,0.226,7,0.589,10,1.837,11,0.031,12,0.658,15,0.903,16,0.306,20,0.306,21,0.179,26,0.021,27,0.021,74,1.271,89,0.643,113,1.837,142,1.724,165,0.828,167,1.398,168,2.46,173,2.596,175,1.418,176,3.01,177,3.01,178,2.67,179,2.906,180,2.038,205,2.712,207,1.326,216,4.434,217,4.434,218,3.379,219,2.535,220,2.535,221,2.535,222,2.535,223,2.535,224,2.535,225,4.434,226,3.379,459,2.906,460,5.2,461,5.941,462,3.468,463,3.468,464,3.468]],["title/classes/TagConditionsValidationException.html",[21,0.168,465,2.122]],["body/classes/TagConditionsValidationException.html",[3,0.359,4,0.359,5,0.306,11,0.03,12,0.593,15,0.838,16,0.414,17,1.212,20,0.414,21,0.242,26,0.026,27,0.026,64,1.532,87,1.418,88,0.949,89,0.471,90,1.031,165,1.119,233,2.735,234,3.511,235,3.285,237,2.106,238,2.292,239,3.052,240,3.426,465,3.642,466,3.927,467,4.687]],["title/controllers/TagController.html",[0,1.593,468,2.122]],["body/controllers/TagController.html",[0,1.149,2,0.756,3,0.108,4,0.108,5,0.254,7,0.24,8,1.055,10,1.484,11,0.031,12,0.531,14,1.887,15,0.826,16,0.492,17,0.366,20,0.207,21,0.121,22,1.185,23,0.756,24,2.35,26,0.011,27,0.011,44,1.034,45,0.921,59,1.968,64,0.462,74,1.364,75,2.244,83,0.756,84,0.756,87,1.27,88,0.979,89,0.64,90,0.924,106,0.831,107,1.185,113,1.572,122,1.61,131,2.438,142,0.843,163,1.034,164,2.584,168,0.972,169,2.287,175,1.373,178,1.887,207,0.54,237,1.055,238,0.691,241,3.072,250,1.185,252,2.244,255,2.795,258,1.185,286,1.717,306,1.38,328,3.331,331,2.689,355,2.287,359,1.717,360,1.185,364,1.77,468,3.471,469,1.185,470,3.253,471,3.518,472,3.893,473,3.261,474,3.728,475,3.012,476,1.185,477,1.414,478,4.199,479,1.414,480,3.508,481,3.893,482,3.893,483,1.414,484,2.349,485,5.23,486,5.23,487,5.115,488,1.414,489,1.185,490,2.898,491,1.414,492,3.012,493,2.349,494,1.968,495,3.508,496,1.968,497,2.349,498,4.658,499,4.658,500,1.414,501,4.658,502,4.658,503,3.508,504,4.985,505,1.414,506,1.414,507,1.414,508,2.349,509,1.414,510,1.414,511,1.414,512,1.185,513,1.414,514,1.414,515,1.414,516,1.185,517,2.929,518,1.414,519,3.012,520,1.968,521,1.414,522,1.414,523,1.414,524,1.414,525,1.414,526,3.508,527,2.349,528,1.414,529,2.202,530,1.414,531,1.414,532,1.414,533,1.414,534,2.349,535,3.012,536,1.414,537,1.414,538,3.893,539,2.349,540,2.349,541,3.893,542,1.968,543,1.414,544,4.45,545,3.012,546,3.012,547,3.012,548,3.893,549,4.45,550,3.012,551,2.349,552,1.968,553,2.349,554,1.185,555,1.414,556,1.717,557,1.414,558,1.185,559,1.185,560,1.185,561,1.185,562,2.564,563,1.414,564,2.08,565,1.185,566,1.185,567,1.414,568,1.414,569,1.414,570,4.199,571,5.571,572,3.012,573,1.414,574,1.185,575,1.185,576,1.185,577,1.185,578,1.414,579,1.414,580,3.893,581,3.012,582,1.414,583,1.185,584,1.414,585,1.414,586,1.414,587,1.414,588,1.414,589,1.414,590,1.414,591,1.034,592,1.414,593,1.414,594,1.414,595,1.414,596,1.414,597,1.414,598,1.414,599,1.968,600,1.414,601,1.414,602,1.414,603,1.414,604,1.414,605,1.968,606,1.414,607,1.414,608,1.414,609,1.414,610,1.414,611,1.414,612,1.414,613,1.414,614,1.414,615,1.414,616,1.414,617,1.414]],["title/modules/TagModule.html",[28,1.593,35,1.914]],["body/modules/TagModule.html",[2,2.805,3,0.323,4,0.323,5,0.275,11,0.031,16,0.553,17,1.092,20,0.463,21,0.271,26,0.024,27,0.024,28,2.566,30,2.065,31,2.805,35,3.801,36,3.417,37,2.75,38,2.75,40,3.083,42,3.087,48,3.538,49,2.257,74,0.929,175,1.008,390,2.75,468,3.718,564,3.346,565,3.538,618,3.538,619,3.538,620,4.223,621,4.223,622,3.083,623,3.538,624,4.223]],["title/classes/TagRepository.html",[21,0.168,622,1.914]],["body/classes/TagRepository.html",[3,0.316,4,0.316,5,0.27,11,0.031,12,0.523,16,0.499,20,0.457,21,0.292,23,2.209,26,0.024,27,0.024,49,2.209,64,1.937,74,0.909,83,2.767,84,2.767,87,1.25,88,0.837,89,0.415,90,0.909,131,2.021,165,0.987,175,0.987,233,2.765,265,3.021,325,2.428,390,2.691,622,3.787,625,3.463,626,5.353,627,3.463,628,4.133,629,4.338,630,3.463,631,3.463,632,4.133,633,4.133,634,4.133,635,4.133]],["title/injectables/TagService.html",[67,1.593,564,1.741]],["body/injectables/TagService.html",[3,0.108,4,0.108,5,0.092,7,0.239,8,1.052,11,0.031,12,0.646,14,2.237,15,0.819,16,0.485,17,0.364,20,0.207,21,0.121,23,0.753,24,2.501,26,0.011,27,0.011,45,0.917,49,0.753,64,1.144,67,1.145,68,0.917,74,0.977,75,2.24,83,1.251,84,1.251,87,1.545,88,1.096,89,0.544,90,1.124,99,2.076,113,1.569,122,2.936,131,2.434,142,0.655,147,0.827,150,0.969,163,1.029,164,2.58,168,1.839,169,2.462,170,1.244,171,1.469,172,1.469,173,2.347,175,1.329,238,0.689,241,2.282,252,3.041,255,2.792,265,1.029,306,3.181,326,3.242,328,2.279,331,2.687,332,2.529,341,1.765,353,1.029,355,0.827,359,1.029,364,1.765,366,2.839,390,0.917,425,2.729,457,1.18,465,1.524,470,1.029,471,2.932,473,2.932,474,3.511,476,1.961,489,1.961,494,1.18,496,1.18,512,1.961,516,1.18,517,3.128,520,1.18,558,1.18,559,1.18,560,1.18,561,1.18,564,2.73,566,1.18,575,1.18,576,1.18,577,1.18,583,1.961,591,2.196,599,2.517,605,2.517,622,2.462,623,1.18,627,1.18,629,2.517,630,1.18,631,1.18,636,1.18,637,2.341,638,3.499,639,2.341,640,2.341,641,3.004,642,3.499,643,1.408,644,1.408,645,1.408,646,2.341,647,2.341,648,1.408,649,2.341,650,2.341,651,1.408,652,1.408,653,2.341,654,1.408,655,3.884,656,2.341,657,3.004,658,1.408,659,1.408,660,1.408,661,3.499,662,1.408,663,3.499,664,1.408,665,2.341,666,1.408,667,2.341,668,1.408,669,1.408,670,1.524,671,1.408,672,1.029,673,1.408,674,1.711,675,1.408,676,2.341,677,1.408,678,3.254,679,1.408,680,2.341,681,1.408,682,1.408,683,2.341,684,2.341,685,2.341,686,3.884,687,2.341,688,1.408,689,2.341,690,3.884,691,3.499,692,1.408,693,1.408,694,1.408,695,3.004,696,1.408,697,1.408,698,1.408,699,2.341,700,1.408,701,1.18,702,1.408,703,1.408,704,3.511,705,3.004,706,1.408,707,1.18,708,1.408,709,1.408,710,1.408,711,1.408,712,1.408,713,1.408,714,1.408,715,1.408,716,1.408,717,1.408,718,1.408,719,1.408,720,1.408,721,1.408,722,1.408,723,2.341,724,1.408,725,1.408,726,1.408,727,1.408,728,1.18,729,4.191,730,2.341,731,1.408,732,3.004,733,3.004,734,1.408,735,3.499,736,2.341,737,3.004,738,1.408,739,1.408,740,1.408,741,1.408,742,1.408,743,1.408,744,1.408,745,1.408,746,1.408,747,1.408,748,1.18,749,1.408,750,1.408,751,1.408,752,1.408,753,2.341,754,2.341,755,1.18]],["title/classes/UnmatchingTagDetailsException.html",[21,0.168,670,2.122]],["body/classes/UnmatchingTagDetailsException.html",[3,0.359,4,0.359,5,0.306,11,0.03,12,0.593,15,0.838,16,0.414,17,1.212,20,0.414,21,0.242,26,0.026,27,0.026,64,1.532,87,1.418,88,0.949,89,0.471,90,1.031,165,1.119,233,2.735,234,3.511,235,3.285,237,2.106,238,2.292,239,3.052,670,3.642,756,3.927,757,4.687,758,4.687]],["title/classes/UpdateTagDto.html",[21,0.168,517,1.914]],["body/classes/UpdateTagDto.html",[3,0.187,4,0.187,5,0.16,7,0.416,10,1.941,11,0.031,12,0.695,15,0.91,16,0.469,20,0.216,21,0.187,26,0.017,27,0.017,74,1.209,88,1.23,89,0.662,90,1.241,113,1.941,142,1.578,150,2.335,164,1.308,165,0.584,167,1.094,168,2.274,170,2.274,171,2.686,172,2.686,173,2.136,174,1.789,175,1.346,176,2.356,177,2.356,178,2.754,179,2.94,182,2.051,183,2.125,185,2.325,186,2.356,187,2.356,188,2.356,189,2.356,190,2.356,193,2.356,195,2.802,196,2.356,198,2.356,200,2.356,202,3.031,203,2.356,205,2.325,206,3.303,207,0.936,208,3.096,209,3.605,210,3.303,211,2.838,212,3.031,213,1.1,214,1.594,215,1.789,233,1.197,425,3.303,517,3.383,759,2.051,760,2.448,761,2.448,762,2.448,763,2.448,764,2.448,765,2.448,766,3.031,767,2.448,768,2.448,769,2.051,770,2.051,771,2.448,772,2.448]],["title/classes/UpdatedByDto.html",[21,0.168,490,2.122]],["body/classes/UpdatedByDto.html",[3,0.328,4,0.328,5,0.279,7,0.728,10,1.514,11,0.03,12,0.542,15,0.743,16,0.508,20,0.378,21,0.273,26,0.024,27,0.024,74,0.943,89,0.578,142,1.481,165,1.023,167,1.602,175,1.264,178,2.379,179,2.59,183,3.111,185,2.811,186,3.448,187,3.448,188,3.448,189,3.448,190,3.448,205,2.59,207,1.638,208,3.448,211,2.83,213,1.925,214,2.79,229,3.59,425,3.743,490,3.448,766,4.437,773,3.59,774,4.285]],["title/coverage.html",[775,3.24]],["body/coverage.html",[0,2.167,1,1.882,5,0.168,6,2.157,11,0.031,18,1.376,21,0.321,26,0.017,27,0.017,40,1.512,41,1.676,52,1.259,67,2.167,69,2.157,73,2.157,89,0.259,106,1.512,108,1.882,110,1.882,111,1.882,147,1.512,159,1.882,164,1.376,166,2.157,173,1.157,175,0.615,183,1.512,227,1.882,228,2.157,231,1.882,232,2.157,241,1.512,242,2.157,249,2.157,269,1.676,270,1.676,272,4.264,280,1.882,283,1.882,288,1.882,290,1.882,294,1.882,296,1.882,299,1.882,306,1.512,311,2.205,312,2.157,313,2.744,329,1.882,354,2.157,355,1.512,356,2.157,361,1.676,362,2.157,364,1.512,365,2.157,412,1.882,421,2.157,459,2.157,465,1.676,466,2.157,468,1.676,469,2.157,490,1.676,517,1.512,556,1.882,562,1.882,564,1.376,591,2.744,622,1.512,625,2.157,636,2.157,670,1.676,672,1.882,674,1.882,678,5.464,756,2.157,759,2.157,773,2.157,775,1.882,776,2.574,777,2.574,778,3.754,779,5.833,780,3.145,781,6.56,782,3.145,783,6.435,784,6.302,785,3.145,786,2.157,787,2.157,788,2.157,789,6.267,790,2.574,791,4.08,792,2.157,793,2.157,794,2.157,795,2.157,796,3.145,797,3.145,798,2.157,799,3.754,800,4.08,801,2.157,802,2.157,803,2.157,804,3.754,805,3.754,806,2.574,807,2.574,808,2.574,809,2.574,810,2.574,811,2.574,812,2.157,813,2.574,814,2.574,815,2.574,816,2.574,817,2.157,818,2.157,819,2.157,820,2.157,821,2.157,822,2.157,823,2.157,824,3.239,825,2.157,826,2.157,827,2.574]],["title/dependencies.html",[31,2.092,828,2.285]],["body/dependencies.html",[11,0.031,17,1.007,21,0.257,26,0.023,27,0.023,31,2.081,44,2.846,45,2.535,47,2.846,49,2.081,105,3.262,112,2.846,115,3.262,207,1.488,213,1.749,279,3.262,325,2.929,415,3.262,418,3.262,529,2.846,542,3.262,552,3.262,554,3.262,769,3.262,770,3.262,829,3.893,830,5.5,831,3.893,832,3.893,833,3.893,834,3.893,835,3.893,836,3.893,837,3.893,838,3.893,839,3.893,840,3.893,841,3.893,842,3.893,843,3.893,844,3.893,845,4.986,846,3.893,847,3.893,848,3.893,849,3.893,850,3.893,851,3.893,852,3.893,853,3.262,854,3.893,855,3.262,856,3.893,857,3.893,858,3.893,859,3.893,860,3.893,861,3.893,862,3.893,863,2.846,864,3.893,865,3.893,866,3.893,867,3.893,868,3.893,869,3.893,870,3.893,871,3.893,872,3.893,873,3.893,874,3.893,875,3.893,876,3.893,877,3.893,878,3.893,879,3.893,880,3.893,881,3.893]],["title/miscellaneous/functions.html",[882,1.776,883,3.28]],["body/miscellaneous/functions.html",[7,0.834,11,0.028,26,0.026,27,0.026,87,1.485,88,0.994,89,0.494,90,1.081,794,4.115,795,5.106,824,3.59,825,5.106,882,3.198,883,4.115,884,4.911,885,4.115,886,4.115,887,4.816,888,3.59]],["title/index.html",[7,0.463,889,2.728,890,2.728]],["body/index.html",[4,0.314,11,0.03,26,0.024,27,0.024,74,0.903,118,3,128,3,130,3.768,304,3,626,3.438,775,3,863,4.612,888,3,891,4.104,892,4.104,893,5.155,894,4.104,895,4.104,896,4.104,897,4.104,898,4.104,899,4.104,900,5.636,901,4.104,902,4.104,903,4.104,904,4.104,905,6.216,906,4.104,907,4.104,908,5.155,909,4.104,910,4.104,911,4.104,912,5.155,913,4.104,914,4.104,915,4.104,916,5.155,917,5.155,918,4.104,919,4.104,920,4.104,921,4.104,922,4.104,923,4.104,924,4.104,925,4.104,926,4.104,927,4.104,928,4.104,929,4.104,930,4.104,931,4.104,932,4.104,933,3.438,934,4.104,935,4.104,936,4.104,937,4.104,938,4.104,939,4.104,940,3.438]],["title/modules.html",[30,2.168]],["body/modules.html",[11,0.027,26,0.027,27,0.027,29,2.935,30,2.443,35,2.935,54,2.935,118,4.487,941,6.137,942,6.137,943,6.137]],["title/overview.html",[944,3.713]],["body/overview.html",[2,2.366,11,0.029,18,3.116,26,0.025,27,0.025,29,3.721,30,2.164,31,2.887,32,3.708,33,3.708,34,3.708,35,3.657,36,3.518,37,2.882,38,2.882,52,3.136,54,3.657,68,2.882,134,2.882,165,1.057,269,2.882,353,3.949,409,3.708,410,3.708,411,3.708,564,3.116,618,3.708,619,3.708,944,3.708,945,5.83,946,4.426]],["title/properties.html",[167,1.184,828,2.285]],["body/properties.html",[11,0.03,26,0.027,27,0.027,74,1.115,167,1.533,853,4.246,933,4.246,940,4.246,947,5.068,948,5.068]],["title/miscellaneous/variables.html",[882,1.776,949,3.28]],["body/miscellaneous/variables.html",[3,0.271,5,0.093,7,0.243,11,0.031,15,0.838,24,1.898,26,0.011,27,0.011,29,0.841,40,1.785,52,0.7,88,0.793,89,0.574,91,0.841,106,2.077,108,2.221,110,2.221,111,1.046,112,2.584,122,2.806,128,2.221,130,1.734,134,1.979,136,2.546,142,1.096,150,1.749,157,1.199,159,2.221,170,1.938,171,2.289,172,2.289,175,0.342,180,0.841,237,1.066,251,1.199,252,2.094,255,0.765,270,0.932,272,1.046,273,2.546,276,1.199,277,1.199,278,1.199,280,2.221,281,1.988,282,1.988,283,2.584,284,4.042,285,1.988,286,2.221,287,1.199,288,2.584,289,1.199,290,2.221,291,2.546,292,1.988,293,1.199,294,2.221,295,1.199,296,2.221,297,1.199,298,1.199,299,2.584,300,1.199,301,1.199,302,1.199,303,1.988,304,1.734,305,1.199,306,2.853,307,1.199,308,1.199,309,1.199,310,1.199,318,4.015,326,1.545,332,3.639,361,0.932,412,1.046,470,1.734,529,1.046,556,1.734,562,1.734,574,1.199,672,1.734,674,1.734,701,1.199,704,1.199,707,3.283,728,1.988,748,1.199,755,2.546,780,1.199,782,3.283,785,3.283,786,1.199,787,1.988,788,1.988,791,1.199,792,2.961,793,3.922,796,1.199,797,3.283,798,2.546,800,1.199,801,1.988,802,1.988,803,1.988,812,1.199,817,1.199,818,1.199,819,1.199,820,1.199,821,1.988,822,1.988,823,1.988,824,1.046,826,1.988,855,1.199,863,1.046,882,0.932,885,1.988,886,1.199,887,2.961,888,2.865,949,1.199,950,3.535,951,1.431,952,1.431,953,1.431,954,1.431,955,3.535,956,4.682,957,2.372,958,2.372,959,1.431,960,1.431,961,1.431,962,1.431,963,1.431,964,1.431,965,1.431,966,1.431,967,1.431,968,2.372,969,3.039,970,3.039,971,3.039,972,3.039,973,3.039,974,3.039,975,3.039,976,3.039,977,3.039,978,3.039,979,1.431,980,3.039,981,4.225,982,1.431,983,3.039,984,3.039,985,3.039,986,3.039,987,1.431,988,3.039,989,3.039,990,3.039,991,1.431,992,2.372,993,1.431,994,1.431,995,1.431,996,1.431,997,1.431,998,1.431,999,1.431,1000,1.431,1001,1.431,1002,2.372,1003,2.372,1004,2.372,1005,2.372,1006,3.039,1007,1.431,1008,1.431,1009,1.431,1010,1.431,1011,1.431,1012,2.372,1013,1.431,1014,1.431,1015,1.431,1016,1.431,1017,2.372,1018,3.535,1019,3.535,1020,3.535,1021,3.535,1022,3.535,1023,1.431,1024,1.431,1025,2.372,1026,1.431,1027,1.431,1028,1.431,1029,1.431,1030,1.431,1031,1.431,1032,2.372,1033,3.535,1034,1.431,1035,3.535,1036,3.535,1037,1.431,1038,2.372,1039,1.431,1040,1.431,1041,3.535,1042,3.535,1043,2.372,1044,1.431,1045,1.431,1046,1.431,1047,1.431,1048,1.431,1049,1.431,1050,1.431,1051,1.431,1052,5.006,1053,1.431,1054,1.431,1055,1.431,1056,1.431,1057,1.431,1058,1.431,1059,1.431,1060,1.431,1061,1.431,1062,1.431]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":678,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":853,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.1.13",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["0.3.15",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":789,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":778,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":353,"title":{"classes/Migrations1683734889829-1.html":{}},"body":{"injectables/TagService.html":{},"overview.html":{}}}],["1.1.0",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":784,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":809,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":783,"title":{},"body":{"coverage.html":{}}}],["10bank",{"_index":382,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["15",{"_index":946,"title":{},"body":{"overview.html":{}}}],["16.0.3",{"_index":850,"title":{},"body":{"dependencies.html":{}}}],["1735212bb75b",{"_index":388,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["2",{"_index":755,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["2.0.22",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":799,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":498,"title":{},"body":{"controllers/TagController.html":{}}}],["201",{"_index":480,"title":{},"body":{"controllers/TagController.html":{}}}],["204",{"_index":501,"title":{},"body":{"controllers/TagController.html":{}}}],["2f0d5b770405",{"_index":374,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["3",{"_index":945,"title":{},"body":{"overview.html":{}}}],["3.8.2",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":790,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":816,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":484,"title":{},"body":{"controllers/TagController.html":{}}}],["404",{"_index":504,"title":{},"body":{"controllers/TagController.html":{}}}],["44a6",{"_index":188,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["459e",{"_index":372,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["476d1c9484e9",{"_index":190,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["4b109a5a",{"_index":384,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["4f75",{"_index":386,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["5",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.3.10",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["5432",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["584c",{"_index":371,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["6.3.0",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":814,"title":{},"body":{"coverage.html":{}}}],["6ebb0c45",{"_index":186,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["7.0.3",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":852,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":612,"title":{},"body":{"controllers/TagController.html":{}}}],["8.10.0",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["8/12",{"_index":815,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["87ca",{"_index":373,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["8eaa",{"_index":385,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["9.0.1",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["9.6.6",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["91ae",{"_index":387,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["9fd9",{"_index":189,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["__dirname",{"_index":66,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{}}}],["accessors",{"_index":77,"title":{},"body":{"injectables/ConfigService.html":{}}}],["admin",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":923,"title":{},"body":{"index.html":{}}}],["amazon",{"_index":218,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["any).context",{"_index":141,"title":{},"body":{"injectables/ConfigService.html":{}}}],["any).hot",{"_index":138,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibadrequestresponse",{"_index":544,"title":{},"body":{"controllers/TagController.html":{}}}],["apicreatedresponse",{"_index":545,"title":{},"body":{"controllers/TagController.html":{}}}],["apinocontentresponse",{"_index":546,"title":{},"body":{"controllers/TagController.html":{}}}],["apinotfoundresponse",{"_index":547,"title":{},"body":{"controllers/TagController.html":{}}}],["apiokresponse",{"_index":548,"title":{},"body":{"controllers/TagController.html":{}}}],["apioperation",{"_index":549,"title":{},"body":{"controllers/TagController.html":{}}}],["apiparam",{"_index":550,"title":{},"body":{"controllers/TagController.html":{}}}],["apiproperty",{"_index":205,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["apiproperty({description",{"_index":460,"title":{},"body":{"classes/TagConditions.html":{}}}],["apipropertyoptional",{"_index":206,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["apiquery",{"_index":551,"title":{},"body":{"controllers/TagController.html":{}}}],["apitags",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{},"controllers/TagController.html":{}}}],["apitags('health",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('tags",{"_index":567,"title":{},"body":{"controllers/TagController.html":{}}}],["app",{"_index":888,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apple",{"_index":222,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["application/json",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":899,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archive",{"_index":494,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["array",{"_index":176,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{}}}],["async",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["audit_sqs_url",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0_audience",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0_domain",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0_rule_key",{"_index":1060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":933,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":161,"title":{},"body":{"injectables/ConfigService.html":{}}}],["await",{"_index":326,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":121,"title":{},"body":{"injectables/ConfigService.html":{}}}],["aws_region",{"_index":1061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["axios",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":924,"title":{},"body":{"index.html":{}}}],["bad",{"_index":485,"title":{},"body":{"controllers/TagController.html":{}}}],["badrequestexception",{"_index":487,"title":{},"body":{"controllers/TagController.html":{}}}],["badrequestexception})@patch(':id",{"_index":523,"title":{},"body":{"controllers/TagController.html":{}}}],["badrequestexception})@useinterceptors(undefined",{"_index":532,"title":{},"body":{"controllers/TagController.html":{}}}],["bank",{"_index":196,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["body",{"_index":536,"title":{},"body":{"controllers/TagController.html":{}}}],["body('createdby",{"_index":604,"title":{},"body":{"controllers/TagController.html":{}}}],["body(new",{"_index":572,"title":{},"body":{"controllers/TagController.html":{}}}],["boolean",{"_index":99,"title":{},"body":{"injectables/ConfigService.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{}}}],["bootstrap",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":943,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":941,"title":{},"body":{"modules.html":{}}}],["building",{"_index":894,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":534,"title":{},"body":{"controllers/TagController.html":{}}}],["callback",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cash",{"_index":223,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["category",{"_index":203,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["central",{"_index":220,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["character",{"_index":335,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["class",{"_index":21,"title":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"classes/TagRepository.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":165,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"classes/TagRepository.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"overview.html":{}}}],["cleanenv(process.env",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":409,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":410,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":411,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tagmodule",{"_index":618,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["cluster_tagmodule_providers",{"_index":619,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["coding",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["col",{"_index":753,"title":{},"body":{"injectables/TagService.html":{}}}],["column",{"_index":453,"title":{},"body":{"entities/Tag.html":{}}}],["column({default",{"_index":439,"title":{},"body":{"entities/Tag.html":{}}}],["column({nullable",{"_index":442,"title":{},"body":{"entities/Tag.html":{}}}],["column({type",{"_index":433,"title":{},"body":{"entities/Tag.html":{}}}],["common/dto/updatedby.dto",{"_index":555,"title":{},"body":{"controllers/TagController.html":{}}}],["compression",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":225,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["conditions",{"_index":168,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{}}}],["conditions'})@apiokresponse({status",{"_index":521,"title":{},"body":{"controllers/TagController.html":{}}}],["conditions.'})@apiokresponse({status",{"_index":509,"title":{},"body":{"controllers/TagController.html":{}}}],["config",{"_index":159,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.development",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/logger",{"_index":107,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/TagController.html":{}}}],["config/rdbms",{"_index":109,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config[env",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":52,"title":{"injectables/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.typeormconfig",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connecting",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('__dirname",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log('entered",{"_index":590,"title":{},"body":{"controllers/TagController.html":{}}}],["console.log('res.length==0",{"_index":716,"title":{},"body":{"injectables/TagService.html":{}}}],["console.log(createslug(firsttagdto",{"_index":745,"title":{},"body":{"injectables/TagService.html":{}}}],["console.log(createslug(secondtagdto",{"_index":746,"title":{},"body":{"injectables/TagService.html":{}}}],["console.log(getdto.resource",{"_index":709,"title":{},"body":{"injectables/TagService.html":{}}}],["console.log(res",{"_index":703,"title":{},"body":{"injectables/TagService.html":{}}}],["const",{"_index":122,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/IErrorObject.html":{},"modules/SharedModule.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":349,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["constructor",{"_index":64,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"classes/CsvFileValidationError.html":{},"controllers/HealthController.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{}}}],["constructor(message",{"_index":235,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/UnmatchingTagDetailsException.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TagController.html":{}}}],["constructor(tag",{"_index":367,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["constructor(tagrepository",{"_index":627,"title":{},"body":{"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["contains",{"_index":226,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagController.html":{},"coverage.html":{}}}],["controller('health",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('tags",{"_index":568,"title":{},"body":{"controllers/TagController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["cors",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":775,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":328,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["create(createtagdto",{"_index":476,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createconditions",{"_index":689,"title":{},"body":{"injectables/TagService.html":{}}}],["createcorefieldsstring",{"_index":672,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createcorefieldsstring(firsttagdto",{"_index":743,"title":{},"body":{"injectables/TagService.html":{}}}],["createcorefieldsstring(secondtagdto",{"_index":744,"title":{},"body":{"injectables/TagService.html":{}}}],["created",{"_index":482,"title":{},"body":{"controllers/TagController.html":{}}}],["created_at",{"_index":342,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"entities/Tag.html":{}}}],["created_by",{"_index":345,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["createdat",{"_index":422,"title":{},"body":{"entities/Tag.html":{}}}],["createdatecolumn",{"_index":454,"title":{},"body":{"entities/Tag.html":{}}}],["createdatecolumn({type",{"_index":430,"title":{},"body":{"entities/Tag.html":{}}}],["createdby",{"_index":169,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"entities/Tag.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createdbydto",{"_index":227,"title":{"classes/CreatedByDto.html":{}},"body":{"classes/CreatedByDto.html":{},"coverage.html":{}}}],["createdta",{"_index":432,"title":{},"body":{"entities/Tag.html":{}}}],["createisstatic",{"_index":686,"title":{},"body":{"injectables/TagService.html":{}}}],["createlogger",{"_index":276,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":83,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/ResponseTagDto.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["createslug",{"_index":674,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtag.dto",{"_index":771,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["createtagdto",{"_index":164,"title":{"classes/CreateTagDto.html":{}},"body":{"classes/CreateTagDto.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["createtagdto.conditions",{"_index":687,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto.conditions.length",{"_index":688,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto.createdby",{"_index":685,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto.name",{"_index":692,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto.resource",{"_index":577,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createtagdto.resourceid",{"_index":575,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createtagdto.resourcetype",{"_index":576,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createtagdto.type",{"_index":693,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto})@apibadrequestresponse({status",{"_index":483,"title":{},"body":{"controllers/TagController.html":{}}}],["creating",{"_index":684,"title":{},"body":{"injectables/TagService.html":{}}}],["creator",{"_index":184,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{}}}],["cross",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":529,"title":{},"body":{"controllers/TagController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["csvfilefilter",{"_index":556,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["csvfilepath",{"_index":606,"title":{},"body":{"controllers/TagController.html":{}}}],["csvfilevalidationerror",{"_index":231,"title":{"classes/CsvFileValidationError.html":{}},"body":{"classes/CsvFileValidationError.html":{},"coverage.html":{}}}],["csvfilevalidationerror('only",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":728,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":707,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["database:${configuration.database",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource(rdbmsconfig",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":429,"title":{},"body":{"entities/Tag.html":{}}}],["dbms",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":305,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["default",{"_index":318,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"entities/Tag.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["definitions",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete",{"_index":471,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["delete(':id",{"_index":596,"title":{},"body":{"controllers/TagController.html":{}}}],["delete(':id')@httpcode(httpstatus.ok)@apiparam({name",{"_index":491,"title":{},"body":{"controllers/TagController.html":{}}}],["delete(`${endpoint}/${tenantcode",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete(id",{"_index":489,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["deleted_at",{"_index":348,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["deletedat",{"_index":423,"title":{},"body":{"entities/Tag.html":{}}}],["deletedatecolumn",{"_index":435,"title":{},"body":{"entities/Tag.html":{}}}],["deletetenantbytenantcode",{"_index":801,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["delimiter",{"_index":614,"title":{},"body":{"controllers/TagController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deposit",{"_index":224,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["description",{"_index":74,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"index.html":{},"properties.html":{}}}],["dest",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["destination",{"_index":602,"title":{},"body":{"controllers/TagController.html":{}}}],["dev",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":128,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devformat",{"_index":299,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["diskstorage",{"_index":553,"title":{},"body":{"controllers/TagController.html":{}}}],["dist/migrations/*{.ts,.js",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/modules/**/*.entity{.ts,.js",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":776,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":105,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":114,"title":{},"body":{"injectables/ConfigService.html":{}}}],["down",{"_index":316,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["down(queryrunner",{"_index":320,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["dto",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.name",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.resource",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.resourceid",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.resourcetype",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.type",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/createtag.dto",{"_index":558,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["dto/gettag.dto",{"_index":559,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["dto/responsetag.dto",{"_index":560,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["dto/tagconditions.dto",{"_index":457,"title":{},"body":{"entities/Tag.html":{},"injectables/TagService.html":{}}}],["dto/updatetag.dto",{"_index":561,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["dto/validations/resourcevalidation.validation",{"_index":563,"title":{},"body":{"controllers/TagController.html":{}}}],["e2e",{"_index":913,"title":{},"body":{"index.html":{}}}],["e8a5f497",{"_index":370,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["efficient",{"_index":895,"title":{},"body":{"index.html":{}}}],["encoding",{"_index":610,"title":{},"body":{"controllers/TagController.html":{}}}],["end",{"_index":268,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoint",{"_index":797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":134,"title":{},"body":{"injectables/ConfigService.html":{},"entities/Tag.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":147,"title":{"entities/Tag.html":{}},"body":{"injectables/ConfigService.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["entity('tag",{"_index":458,"title":{},"body":{"entities/Tag.html":{}}}],["entity\\.ts",{"_index":143,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entitycontext",{"_index":139,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entitycontext(id",{"_index":146,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entitycontext.keys().map((id",{"_index":144,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entitymodule",{"_index":145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["env",{"_index":112,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["env.ts",{"_index":826,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envalid",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["environment",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envname",{"_index":123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error",{"_index":286,"title":{},"body":{"interfaces/IErrorObject.html":{},"controllers/TagController.html":{},"miscellaneous/variables.html":{}}}],["errors.log",{"_index":310,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":179,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["exceptions/notagfoundexception.exception",{"_index":566,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["exceptions/tagconditionsvalidationexception.exception",{"_index":669,"title":{},"body":{"injectables/TagService.html":{}}}],["exceptions/unmatchingtagdetailsvalidationexception.exception",{"_index":671,"title":{},"body":{"injectables/TagService.html":{}}}],["existing",{"_index":520,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["exitonerror",{"_index":302,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["exports",{"_index":413,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":526,"title":{},"body":{"controllers/TagController.html":{}}}],["expressadapter",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":233,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/TagRepository.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{}}}],["extra",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f709",{"_index":187,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["false",{"_index":150,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"interfaces/IErrorObject.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":216,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["fields",{"_index":649,"title":{},"body":{"injectables/TagService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file'})@apicreatedresponse({status",{"_index":530,"title":{},"body":{"controllers/TagController.html":{}}}],["file.filename",{"_index":607,"title":{},"body":{"controllers/TagController.html":{}}}],["file.originalname.match(/\\.(csv",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filecontent",{"_index":608,"title":{},"body":{"controllers/TagController.html":{}}}],["filefilter",{"_index":603,"title":{},"body":{"controllers/TagController.html":{}}}],["fileinterceptor",{"_index":543,"title":{},"body":{"controllers/TagController.html":{}}}],["fileinterceptor('file",{"_index":600,"title":{},"body":{"controllers/TagController.html":{}}}],["filename",{"_index":309,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filters",{"_index":708,"title":{},"body":{"injectables/TagService.html":{}}}],["find",{"_index":701,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["findbyfields",{"_index":637,"title":{},"body":{"injectables/TagService.html":{}}}],["findbyfields(fields",{"_index":647,"title":{},"body":{"injectables/TagService.html":{}}}],["firstcondition",{"_index":663,"title":{},"body":{"injectables/TagService.html":{}}}],["firstcondition.length",{"_index":677,"title":{},"body":{"injectables/TagService.html":{}}}],["firstcondition[0].keywords",{"_index":680,"title":{},"body":{"injectables/TagService.html":{}}}],["firsttagdto",{"_index":659,"title":{},"body":{"injectables/TagService.html":{}}}],["fmt",{"_index":296,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":277,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["format.combine(format.colorize",{"_index":300,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["format.combine(format.json",{"_index":289,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["format.printf(fmt",{"_index":301,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["formaterror",{"_index":294,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formaterror(info",{"_index":297,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["formatmessage",{"_index":290,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formatmessage(info",{"_index":298,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":359,"title":{},"body":{"classes/NoTagFoundException.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["founded",{"_index":502,"title":{},"body":{"controllers/TagController.html":{}}}],["framework",{"_index":893,"title":{},"body":{"index.html":{}}}],["fs",{"_index":542,"title":{},"body":{"controllers/TagController.html":{},"dependencies.html":{}}}],["fs.readfilesync(csvfilepath",{"_index":609,"title":{},"body":{"controllers/TagController.html":{}}}],["function",{"_index":591,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["functions",{"_index":883,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator.ts",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":579,"title":{},"body":{"controllers/TagController.html":{}}}],["get(':id')@httpcode(httpstatus.ok)@apiparam({name",{"_index":513,"title":{},"body":{"controllers/TagController.html":{}}}],["get()@healthcheck",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@httpcode(httpstatus.ok)@apiquery({name",{"_index":507,"title":{},"body":{"controllers/TagController.html":{}}}],["get(`/${endpoint",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(key",{"_index":85,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getall",{"_index":472,"title":{},"body":{"controllers/TagController.html":{}}}],["getall(gettagdto",{"_index":506,"title":{},"body":{"controllers/TagController.html":{}}}],["getalltags",{"_index":638,"title":{},"body":{"injectables/TagService.html":{}}}],["getalltags(getdto",{"_index":650,"title":{},"body":{"injectables/TagService.html":{}}}],["getbyid",{"_index":473,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["getbyid(id",{"_index":512,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["getdto",{"_index":583,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["getdto.name",{"_index":714,"title":{},"body":{"injectables/TagService.html":{}}}],["getdto.resource",{"_index":710,"title":{},"body":{"injectables/TagService.html":{}}}],["getdto.resourceid",{"_index":711,"title":{},"body":{"injectables/TagService.html":{}}}],["getdto.resourcetype",{"_index":712,"title":{},"body":{"injectables/TagService.html":{}}}],["getdto.type",{"_index":713,"title":{},"body":{"injectables/TagService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getisdevenv",{"_index":97,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getistestenv",{"_index":100,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getnodeenv",{"_index":95,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getnumber",{"_index":76,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getnumber(key",{"_index":92,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getrdbmsconfig",{"_index":792,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getserverhealth",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettagdto",{"_index":241,"title":{"classes/GetTagDto.html":{}},"body":{"classes/GetTagDto.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["gettagdto.resource",{"_index":587,"title":{},"body":{"controllers/TagController.html":{}}}],["gettagdto.resourceid",{"_index":585,"title":{},"body":{"controllers/TagController.html":{}}}],["gettagdto.resourcetype",{"_index":586,"title":{},"body":{"controllers/TagController.html":{}}}],["gettagdto})@apinotfoundresponse({status",{"_index":510,"title":{},"body":{"controllers/TagController.html":{}}}],["getting",{"_index":889,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":102,"title":{},"body":{"injectables/ConfigService.html":{}}}],["global",{"_index":416,"title":{},"body":{"modules/SharedModule.html":{}}}],["grid",{"_index":667,"title":{},"body":{"injectables/TagService.html":{}}}],["grid.length",{"_index":752,"title":{},"body":{"injectables/TagService.html":{}}}],["grid[0].length",{"_index":750,"title":{},"body":{"injectables/TagService.html":{}}}],["grow",{"_index":920,"title":{},"body":{"index.html":{}}}],["gst",{"_index":200,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["hard",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["health",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["healthcheck",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":41,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":71,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":930,"title":{},"body":{"index.html":{}}}],["host",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":537,"title":{},"body":{"controllers/TagController.html":{}}}],["httpcode(httpstatus.created",{"_index":569,"title":{},"body":{"controllers/TagController.html":{}}}],["httpcode(httpstatus.ok",{"_index":580,"title":{},"body":{"controllers/TagController.html":{}}}],["httpcode(httpstatus.ok)@apioperation({summary",{"_index":518,"title":{},"body":{"controllers/TagController.html":{}}}],["httpexception",{"_index":234,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/UnmatchingTagDetailsException.html":{}}}],["httpmodule",{"_index":414,"title":{},"body":{"modules/SharedModule.html":{}}}],["https://nestjs.com",{"_index":937,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":238,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{}}}],["httpstatus.bad_request",{"_index":240,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{}}}],["httpstatus.no_content",{"_index":360,"title":{},"body":{"classes/NoTagFoundException.html":{},"controllers/TagController.html":{}}}],["httpstatus.not_found",{"_index":758,"title":{},"body":{"classes/UnmatchingTagDetailsException.html":{}}}],["id",{"_index":331,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["id.'})@apiokresponse({status",{"_index":497,"title":{},"body":{"controllers/TagController.html":{}}}],["identifier",{"_index":183,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{}}}],["ierrorobject",{"_index":270,"title":{"interfaces/IErrorObject.html":{}},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":314,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{}}}],["inconsistent",{"_index":748,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":274,"title":{},"body":{"interfaces/IErrorObject.html":{}}}],["inestapplication",{"_index":887,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"miscellaneous/variables.html":{}}}],["info.level",{"_index":292,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["info.message",{"_index":293,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["info.message}\\n\\n${info.stack}\\n",{"_index":295,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["injectable",{"_index":67,"title":{"injectables/AppService.html":{},"injectables/ConfigService.html":{},"injectables/TagService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ConfigService.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["injectables",{"_index":68,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConfigService.html":{},"injectables/TagService.html":{},"overview.html":{}}}],["injectrepository",{"_index":630,"title":{},"body":{"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["injectrepository(tag",{"_index":631,"title":{},"body":{"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["install",{"_index":855,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["installation",{"_index":903,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":904,"title":{},"body":{"index.html":{}}}],["instance",{"_index":84,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/ResponseTagDto.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["instanceof",{"_index":285,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":269,"title":{"interfaces/IErrorObject.html":{}},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":271,"title":{},"body":{"interfaces/IErrorObject.html":{}}}],["internal",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internal_api_key",{"_index":1062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internal_api_security",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["internal_auth0_api_security",{"_index":785,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_static",{"_index":340,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["isarray",{"_index":177,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{}}}],["isdefined",{"_index":208,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["isdefined()@isstring()@apiproperty({description",{"_index":229,"title":{},"body":{"classes/CreatedByDto.html":{},"classes/UpdatedByDto.html":{}}}],["isdefined()@isuuid()@apiproperty({description",{"_index":182,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isdevenv",{"_index":79,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isnotempty",{"_index":209,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isobject",{"_index":452,"title":{},"body":{"entities/Tag.html":{}}}],["isobject()@column({type",{"_index":426,"title":{},"body":{"entities/Tag.html":{}}}],["isoptional",{"_index":210,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isoptional()@apipropertyoptional({description",{"_index":174,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isstatic",{"_index":366,"title":{},"body":{"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{}}}],["isstaticvalidation",{"_index":639,"title":{},"body":{"injectables/TagService.html":{}}}],["isstaticvalidation(isstatic",{"_index":653,"title":{},"body":{"injectables/TagService.html":{}}}],["isstring",{"_index":211,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["isstring()@isdefined()@isnotempty()@apiproperty({description",{"_index":202,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isstring()@isnotempty()@isdefined()@apiproperty({description",{"_index":192,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["isstring()@isoptional()@apiproperty({description",{"_index":243,"title":{},"body":{"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{}}}],["isstring()@isoptional()@apipropertyoptional({description",{"_index":195,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["istestenv",{"_index":80,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isuuid",{"_index":212,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["join",{"_index":926,"title":{},"body":{"index.html":{}}}],["json.stringify",{"_index":160,"title":{},"body":{"injectables/ConfigService.html":{}}}],["jsonb",{"_index":339,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"entities/Tag.html":{}}}],["jwtmodule",{"_index":417,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtmodule.registerasync",{"_index":420,"title":{},"body":{"modules/SharedModule.html":{}}}],["kamil",{"_index":934,"title":{},"body":{"index.html":{}}}],["key",{"_index":91,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"miscellaneous/variables.html":{}}}],["keywords",{"_index":217,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["klub_test_db",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":281,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":273,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":940,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":917,"title":{},"body":{"index.html":{}}}],["list",{"_index":508,"title":{},"body":{"controllers/TagController.html":{}}}],["localhost",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":106,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/IErrorObject.html":{},"controllers/TagController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(error",{"_index":616,"title":{},"body":{"controllers/TagController.html":{}}}],["logger.info",{"_index":157,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["logger.info('post",{"_index":573,"title":{},"body":{"controllers/TagController.html":{}}}],["logger.info(`getting",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lts.1",{"_index":860,"title":{},"body":{"dependencies.html":{}}}],["main",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchcorefields",{"_index":640,"title":{},"body":{"injectables/TagService.html":{}}}],["matchcorefields(firsttagdto",{"_index":656,"title":{},"body":{"injectables/TagService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memberof",{"_index":113,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{}}}],["mergeconditions",{"_index":641,"title":{},"body":{"injectables/TagService.html":{}}}],["mergeconditions(firstcondition",{"_index":660,"title":{},"body":{"injectables/TagService.html":{}}}],["message",{"_index":237,"title":{},"body":{"classes/CsvFileValidationError.html":{},"interfaces/IErrorObject.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/UnmatchingTagDetailsException.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["migration",{"_index":155,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrationcontext",{"_index":149,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrationcontext(id",{"_index":154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrationcontext.keys().map((id",{"_index":152,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrationinterface",{"_index":315,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["migrationmodule",{"_index":153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrations",{"_index":136,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["migrations.ts",{"_index":313,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"coverage.html":{}}}],["migrations.ts:12",{"_index":322,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["migrations.ts:4",{"_index":319,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["migrations.ts:6",{"_index":324,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["migrations/*{.ts,.js",{"_index":137,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrations1683734889829",{"_index":311,"title":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"coverage.html":{}}}],["migrationsdir",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":882,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misuse",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":916,"title":{},"body":{"index.html":{}}}],["mode",{"_index":908,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/**/*.entity{.ts,.js",{"_index":135,"title":{},"body":{"injectables/ConfigService.html":{}}}],["modules/health/health.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/tags/tag.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":929,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["multer",{"_index":554,"title":{},"body":{"controllers/TagController.html":{},"dependencies.html":{}}}],["multermodule",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["multiline",{"_index":119,"title":{},"body":{"injectables/ConfigService.html":{}}}],["myśliwiec",{"_index":935,"title":{},"body":{"index.html":{}}}],["n",{"_index":117,"title":{},"body":{"injectables/ConfigService.html":{}}}],["name",{"_index":88,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["naming",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["namingstrategy",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":900,"title":{},"body":{"index.html":{}}}],["nestfactory.create",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":939,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":415,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CsvFileValidationError.html":{},"controllers/HealthController.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"modules/SharedModule.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":418,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":769,"title":{},"body":{"classes/UpdateTagDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/TagController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":207,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["new",{"_index":306,"title":{},"body":{"interfaces/IErrorObject.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.js",{"_index":892,"title":{},"body":{"index.html":{}}}],["nodeenv",{"_index":78,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nodemon",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["notagfoundexception",{"_index":355,"title":{"classes/NoTagFoundException.html":{}},"body":{"classes/NoTagFoundException.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["notagfoundexception(id",{"_index":705,"title":{},"body":{"injectables/TagService.html":{}}}],["notagfoundexception})@apibadrequestresponse({status",{"_index":503,"title":{},"body":{"controllers/TagController.html":{}}}],["notfoundexception",{"_index":668,"title":{},"body":{"injectables/TagService.html":{}}}],["notfoundexception('no",{"_index":717,"title":{},"body":{"injectables/TagService.html":{}}}],["now",{"_index":344,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["npm",{"_index":863,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":332,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":427,"title":{},"body":{"entities/Tag.html":{}}}],["number",{"_index":94,"title":{},"body":{"injectables/ConfigService.html":{}}}],["number(this.get(key",{"_index":133,"title":{},"body":{"injectables/ConfigService.html":{}}}],["numberofcols",{"_index":749,"title":{},"body":{"injectables/TagService.html":{}}}],["numberofrows",{"_index":751,"title":{},"body":{"injectables/TagService.html":{}}}],["object",{"_index":599,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["object.keys(process.env",{"_index":124,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.values(entitymodule",{"_index":148,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.values(migrationmodule",{"_index":156,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object})@apibadrequestresponse({status",{"_index":531,"title":{},"body":{"controllers/TagController.html":{}}}],["one",{"_index":461,"title":{},"body":{"classes/TagConditions.html":{}}}],["open",{"_index":918,"title":{},"body":{"index.html":{}}}],["optional",{"_index":90,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["overview",{"_index":944,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":828,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["papaparse",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":131,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/ResponseTagDto.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["param('id",{"_index":581,"title":{},"body":{"controllers/TagController.html":{}}}],["parameters",{"_index":87,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CsvFileValidationError.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":552,"title":{},"body":{"controllers/TagController.html":{},"dependencies.html":{}}}],["parse(filecontent",{"_index":613,"title":{},"body":{"controllers/TagController.html":{}}}],["parseuuidpipe",{"_index":538,"title":{},"body":{"controllers/TagController.html":{}}}],["partialtype",{"_index":768,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["partialtype(createtagdto",{"_index":772,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["passed",{"_index":722,"title":{},"body":{"injectables/TagService.html":{}}}],["password",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":519,"title":{},"body":{"controllers/TagController.html":{}}}],["patch(':id",{"_index":589,"title":{},"body":{"controllers/TagController.html":{}}}],["path",{"_index":115,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{}}}],["pg",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["pk_8e4052373c579afc1471f526760",{"_index":350,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["please",{"_index":927,"title":{},"body":{"index.html":{}}}],["pool",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portal",{"_index":493,"title":{},"body":{"controllers/TagController.html":{}}}],["post",{"_index":478,"title":{},"body":{"controllers/TagController.html":{}}}],["post('bulk",{"_index":527,"title":{},"body":{"controllers/TagController.html":{}}}],["post()@httpcode(httpstatus.created)@apioperation({summary",{"_index":477,"title":{},"body":{"controllers/TagController.html":{}}}],["post(`${endpoint",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_db",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_host",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_password",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_port",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_user",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresconnectionoptions",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posttag",{"_index":802,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{},"controllers/TagController.html":{}}}],["prevent",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":351,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["primarygeneratedcolumn",{"_index":455,"title":{},"body":{"entities/Tag.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":437,"title":{},"body":{"entities/Tag.html":{}}}],["private",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["process",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":303,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_db",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_host",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_password",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_port",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_user",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env[envname",{"_index":125,"title":{},"body":{"injectables/ConfigService.html":{}}}],["process.env[envname].replace(/\\\\n/g",{"_index":126,"title":{},"body":{"injectables/ConfigService.html":{}}}],["process.env[key",{"_index":132,"title":{},"body":{"injectables/ConfigService.html":{}}}],["prodformat",{"_index":288,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":304,"title":{},"body":{"interfaces/IErrorObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":891,"title":{},"body":{"index.html":{}}}],["project",{"_index":919,"title":{},"body":{"index.html":{}}}],["promise",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":167,"title":{"properties.html":{}},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"properties.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":75,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["put(`${endpoint}/${tenantcode",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puttenant",{"_index":803,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":163,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["query(new",{"_index":584,"title":{},"body":{"controllers/TagController.html":{}}}],["queryrunner",{"_index":321,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["queryrunner.query",{"_index":327,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["queryrunner.query(`drop",{"_index":352,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["r",{"_index":719,"title":{},"body":{"injectables/TagService.html":{}}}],["rdbms",{"_index":158,"title":{},"body":{"injectables/ConfigService.html":{}}}],["rdbms.ts",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rdbmsconfig",{"_index":108,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":928,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["record",{"_index":291,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["relationloadstrategy",{"_index":162,"title":{},"body":{"injectables/ConfigService.html":{}}}],["replace",{"_index":116,"title":{},"body":{"injectables/ConfigService.html":{}}}],["replaceerror",{"_index":280,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["replaceerror(value",{"_index":287,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["replacer",{"_index":283,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":626,"title":{},"body":{"classes/TagRepository.html":{},"index.html":{}}}],["req",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":486,"title":{},"body":{"controllers/TagController.html":{}}}],["request(app.gethttpserver",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":140,"title":{},"body":{"injectables/ConfigService.html":{}}}],["required",{"_index":178,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["res",{"_index":690,"title":{},"body":{"injectables/TagService.html":{}}}],["res.conditions",{"_index":695,"title":{},"body":{"injectables/TagService.html":{}}}],["res.foreach(function",{"_index":718,"title":{},"body":{"injectables/TagService.html":{}}}],["res.isstatic",{"_index":698,"title":{},"body":{"injectables/TagService.html":{}}}],["res.length",{"_index":715,"title":{},"body":{"injectables/TagService.html":{}}}],["res.updatedby",{"_index":697,"title":{},"body":{"injectables/TagService.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["resource",{"_index":170,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/variables.html":{}}}],["resource_id",{"_index":337,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["resource_type",{"_index":338,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["resourceid",{"_index":171,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/variables.html":{}}}],["resourcetype",{"_index":172,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/variables.html":{}}}],["resourcevalidation",{"_index":562,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resourcevalidationexception",{"_index":361,"title":{"classes/ResourceValidationException.html":{}},"body":{"classes/ResourceValidationException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response",{"_index":605,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["response.push(new",{"_index":720,"title":{},"body":{"injectables/TagService.html":{}}}],["response.status(httpstatus.ok",{"_index":727,"title":{},"body":{"injectables/TagService.html":{}}}],["responsetagdto",{"_index":364,"title":{"classes/ResponseTagDto.html":{}},"body":{"classes/ResponseTagDto.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["responsetagdto(await",{"_index":699,"title":{},"body":{"injectables/TagService.html":{}}}],["responsetagdto(r",{"_index":721,"title":{},"body":{"injectables/TagService.html":{}}}],["responsetagdto(res",{"_index":706,"title":{},"body":{"injectables/TagService.html":{}}}],["responsetagdto})@apinocontentresponse({status",{"_index":522,"title":{},"body":{"controllers/TagController.html":{}}}],["responsetagdto})@apinotfoundresponse({status",{"_index":514,"title":{},"body":{"controllers/TagController.html":{}}}],["result",{"_index":615,"title":{},"body":{"controllers/TagController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["revenue",{"_index":193,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["row",{"_index":754,"title":{},"body":{"injectables/TagService.html":{}}}],["run",{"_index":905,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":896,"title":{},"body":{"index.html":{}}}],["schema",{"_index":793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema:${configuration.schema",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secondcondition",{"_index":661,"title":{},"body":{"injectables/TagService.html":{}}}],["secondcondition.length",{"_index":679,"title":{},"body":{"injectables/TagService.html":{}}}],["secondcondition[0].keywords",{"_index":682,"title":{},"body":{"injectables/TagService.html":{}}}],["secondtagdto",{"_index":657,"title":{},"body":{"injectables/TagService.html":{}}}],["security",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["send(data",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":897,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":419,"title":{},"body":{"modules/SharedModule.html":{}}}],["set",{"_index":681,"title":{},"body":{"injectables/TagService.html":{}}}],["set('accept",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupswagger",{"_index":825,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":886,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/services/config.service",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/shared.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":54,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":898,"title":{},"body":{"index.html":{}}}],["single",{"_index":495,"title":{},"body":{"controllers/TagController.html":{}}}],["slug",{"_index":341,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{}}}],["snakenamingstrategy",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"index.html":{}}}],["sponsors",{"_index":922,"title":{},"body":{"index.html":{}}}],["src/.../cli",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../createcorefieldsstring.ts",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../createslug.ts",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../csvhelpers.ts",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../health.controller.requests.ts",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.ts",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":884,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rdbms.ts",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resourcevalidation.validation.ts",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.ts",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tag.controller.request.ts",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validate",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/1683734889829",{"_index":312,"title":{},"body":{"classes/Migrations1683734889829.html":{},"coverage.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":69,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":70,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/constants/strings/index.ts",{"_index":780,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dto/createdby.dto.ts",{"_index":228,"title":{},"body":{"classes/CreatedByDto.html":{},"coverage.html":{}}}],["src/common/dto/createdby.dto.ts:14",{"_index":230,"title":{},"body":{"classes/CreatedByDto.html":{}}}],["src/common/dto/updatedby.dto.ts",{"_index":773,"title":{},"body":{"classes/UpdatedByDto.html":{},"coverage.html":{}}}],["src/common/dto/updatedby.dto.ts:14",{"_index":774,"title":{},"body":{"classes/UpdatedByDto.html":{}}}],["src/config/cli",{"_index":786,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/logger.ts",{"_index":272,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/logger.ts:24",{"_index":275,"title":{},"body":{"interfaces/IErrorObject.html":{}}}],["src/config/rdbms.ts",{"_index":791,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exceptions/csvfilevalidationerror.ts",{"_index":232,"title":{},"body":{"classes/CsvFileValidationError.html":{},"coverage.html":{}}}],["src/exceptions/csvfilevalidationerror.ts:3",{"_index":236,"title":{},"body":{"classes/CsvFileValidationError.html":{}}}],["src/exceptions/notagfoundexception.exception.ts",{"_index":356,"title":{},"body":{"classes/NoTagFoundException.html":{},"coverage.html":{}}}],["src/exceptions/notagfoundexception.exception.ts:3",{"_index":357,"title":{},"body":{"classes/NoTagFoundException.html":{}}}],["src/exceptions/resourcevalidationexception.exception.ts",{"_index":362,"title":{},"body":{"classes/ResourceValidationException.html":{},"coverage.html":{}}}],["src/exceptions/resourcevalidationexception.exception.ts:3",{"_index":363,"title":{},"body":{"classes/ResourceValidationException.html":{}}}],["src/exceptions/tagconditionsvalidationexception.exception.ts",{"_index":466,"title":{},"body":{"classes/TagConditionsValidationException.html":{},"coverage.html":{}}}],["src/exceptions/tagconditionsvalidationexception.exception.ts:3",{"_index":467,"title":{},"body":{"classes/TagConditionsValidationException.html":{}}}],["src/exceptions/unmatchingtagdetailsvalidationexception.exception.ts",{"_index":756,"title":{},"body":{"classes/UnmatchingTagDetailsException.html":{},"coverage.html":{}}}],["src/exceptions/unmatchingtagdetailsvalidationexception.exception.ts:3",{"_index":757,"title":{},"body":{"classes/UnmatchingTagDetailsException.html":{}}}],["src/main.ts",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/migrations/1683734889829",{"_index":354,"title":{},"body":{"classes/Migrations1683734889829-1.html":{},"coverage.html":{}}}],["src/modules/**/*.entity{.ts,.js",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/modules/health/__tests__/health.controller.requests.ts",{"_index":796,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/health/health.controller.ts",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:39",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/tags/dto/__tests__/tag.controller.request.ts",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/tags/dto/createtag.dto.ts",{"_index":166,"title":{},"body":{"classes/CreateTagDto.html":{},"coverage.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:114",{"_index":204,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:129",{"_index":191,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:27",{"_index":194,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:42",{"_index":197,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:57",{"_index":199,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:72",{"_index":201,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:98",{"_index":181,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts",{"_index":242,"title":{},"body":{"classes/GetTagDto.html":{},"coverage.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:18",{"_index":244,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:33",{"_index":245,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:48",{"_index":246,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:63",{"_index":247,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:78",{"_index":248,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts",{"_index":365,"title":{},"body":{"classes/ResponseTagDto.html":{},"coverage.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:121",{"_index":369,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:136",{"_index":377,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:152",{"_index":368,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:20",{"_index":375,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:35",{"_index":378,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:50",{"_index":389,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:65",{"_index":379,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:80",{"_index":380,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:95",{"_index":381,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/tagconditions.dto.ts",{"_index":459,"title":{},"body":{"classes/TagConditions.html":{},"coverage.html":{}}}],["src/modules/tags/dto/tagconditions.dto.ts:15",{"_index":463,"title":{},"body":{"classes/TagConditions.html":{}}}],["src/modules/tags/dto/tagconditions.dto.ts:28",{"_index":462,"title":{},"body":{"classes/TagConditions.html":{}}}],["src/modules/tags/dto/tagconditions.dto.ts:47",{"_index":464,"title":{},"body":{"classes/TagConditions.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts",{"_index":759,"title":{},"body":{"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:105",{"_index":764,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:119",{"_index":760,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:29",{"_index":761,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:45",{"_index":765,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:60",{"_index":767,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:75",{"_index":762,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:90",{"_index":763,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/validations/resourcevalidation.validation.ts",{"_index":812,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/tags/tag.controller.ts",{"_index":469,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{}}}],["src/modules/tags/tag.controller.ts:121",{"_index":515,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:155",{"_index":511,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:193",{"_index":524,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:233",{"_index":505,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:270",{"_index":533,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:82",{"_index":488,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.entity.ts",{"_index":421,"title":{},"body":{"entities/Tag.html":{},"coverage.html":{}}}],["src/modules/tags/tag.entity.ts:101",{"_index":434,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:109",{"_index":449,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:117",{"_index":450,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:125",{"_index":436,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:20",{"_index":438,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:28",{"_index":441,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:36",{"_index":447,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:44",{"_index":443,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:52",{"_index":444,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:60",{"_index":445,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:69",{"_index":428,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:77",{"_index":440,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:85",{"_index":446,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:93",{"_index":431,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.module.ts",{"_index":620,"title":{},"body":{"modules/TagModule.html":{}}}],["src/modules/tags/tag.respository.ts",{"_index":625,"title":{},"body":{"classes/TagRepository.html":{},"coverage.html":{}}}],["src/modules/tags/tag.respository.ts:11",{"_index":628,"title":{},"body":{"classes/TagRepository.html":{}}}],["src/modules/tags/tag.service.ts",{"_index":636,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{}}}],["src/modules/tags/tag.service.ts:115",{"_index":652,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:133",{"_index":651,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:164",{"_index":645,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:184",{"_index":664,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:218",{"_index":658,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:231",{"_index":654,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:24",{"_index":643,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:247",{"_index":666,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:36",{"_index":662,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:55",{"_index":648,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:68",{"_index":644,"title":{},"body":{"injectables/TagService.html":{}}}],["src/shared/services/config.service.ts",{"_index":73,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/shared/services/config.service.ts:15",{"_index":82,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:40",{"_index":96,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:50",{"_index":98,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:60",{"_index":101,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:70",{"_index":86,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:80",{"_index":93,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:90",{"_index":103,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/shared.module.ts",{"_index":412,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/uploads",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/TagController.html":{}}}],["src/utils/createcorefieldsstring.ts",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/createslug.ts",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/csvhelpers.ts",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/swagger",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/swagger.ts",{"_index":824,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/utils/validate",{"_index":111,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":282,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":906,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":909,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":910,"title":{},"body":{"index.html":{}}}],["started",{"_index":890,"title":{"index.html":{}},"body":{}}],["starter",{"_index":902,"title":{},"body":{"index.html":{}}}],["statements",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":376,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["status",{"_index":571,"title":{},"body":{"controllers/TagController.html":{}}}],["stay",{"_index":931,"title":{},"body":{"index.html":{}}}],["storage",{"_index":601,"title":{},"body":{"controllers/TagController.html":{}}}],["str",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategies",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["strict",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":120,"title":{},"body":{"injectables/ConfigService.html":{}}}],["string})@apinocontentresponse({status",{"_index":500,"title":{},"body":{"controllers/TagController.html":{}}}],["successful",{"_index":499,"title":{},"body":{"controllers/TagController.html":{}}}],["successfully",{"_index":481,"title":{},"body":{"controllers/TagController.html":{}}}],["summary",{"_index":570,"title":{},"body":{"controllers/TagController.html":{}}}],["super",{"_index":632,"title":{},"body":{"classes/TagRepository.html":{}}}],["super('no",{"_index":358,"title":{},"body":{"classes/NoTagFoundException.html":{}}}],["super(message",{"_index":239,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/UnmatchingTagDetailsException.html":{}}}],["support",{"_index":118,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"modules.html":{}}}],["svc/tags",{"_index":574,"title":{},"body":{"controllers/TagController.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":942,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t000",{"_index":383,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["t001",{"_index":198,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["table",{"_index":329,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":827,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":175,"title":{"entities/Tag.html":{}},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/NoTagFoundException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag\".\"tag",{"_index":330,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["tag.'})@apicreatedresponse({status",{"_index":479,"title":{},"body":{"controllers/TagController.html":{}}}],["tag.conditions",{"_index":404,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.controller",{"_index":621,"title":{},"body":{"modules/TagModule.html":{}}}],["tag.entity",{"_index":390,"title":{},"body":{"classes/ResponseTagDto.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["tag.id",{"_index":392,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.isstatic",{"_index":406,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.name",{"_index":394,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.resource",{"_index":398,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.resourceid",{"_index":400,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.resourcetype",{"_index":402,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.respository",{"_index":623,"title":{},"body":{"modules/TagModule.html":{},"injectables/TagService.html":{}}}],["tag.service",{"_index":565,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{}}}],["tag.slug",{"_index":408,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.type",{"_index":396,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tagconditions",{"_index":173,"title":{"classes/TagConditions.html":{}},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["tagconditions.dto",{"_index":215,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["tagconditionsvalidationexception",{"_index":465,"title":{"classes/TagConditionsValidationException.html":{}},"body":{"classes/TagConditionsValidationException.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["tagcontroller",{"_index":468,"title":{"controllers/TagController.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"coverage.html":{}}}],["tagmodule",{"_index":35,"title":{"modules/TagModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["tagrepository",{"_index":622,"title":{"classes/TagRepository.html":{}},"body":{"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["tagrepository.manager",{"_index":634,"title":{},"body":{"classes/TagRepository.html":{}}}],["tagrepository.queryrunner",{"_index":635,"title":{},"body":{"classes/TagRepository.html":{}}}],["tagrepository.target",{"_index":633,"title":{},"body":{"classes/TagRepository.html":{}}}],["tags",{"_index":470,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["tagservice",{"_index":564,"title":{"injectables/TagService.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"coverage.html":{},"overview.html":{}}}],["tenantcode",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminusmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":130,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":915,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":914,"title":{},"body":{"index.html":{}}}],["tests",{"_index":912,"title":{},"body":{"index.html":{}}}],["text",{"_index":334,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"entities/Tag.html":{}}}],["thanks",{"_index":921,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.conditions",{"_index":403,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.get('node_env",{"_index":127,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.healthcheck.check",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.id",{"_index":391,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.isstatic",{"_index":405,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.matchcorefields(todotag",{"_index":734,"title":{},"body":{"injectables/TagService.html":{}}}],["this.mergeconditions",{"_index":738,"title":{},"body":{"injectables/TagService.html":{}}}],["this.mergeconditions(createconditions",{"_index":696,"title":{},"body":{"injectables/TagService.html":{}}}],["this.name",{"_index":393,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.nodeenv",{"_index":129,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.resource",{"_index":397,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.resourceid",{"_index":399,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.resourcetype",{"_index":401,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.slug",{"_index":407,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.tagrepository.find",{"_index":683,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.findone",{"_index":691,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.save",{"_index":694,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.save(res",{"_index":700,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.save(todo",{"_index":725,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.save(todotag",{"_index":742,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.softdelete(id",{"_index":726,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagservice.create(createtagdto",{"_index":578,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.delete(id",{"_index":597,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.getalltags(gettagdto",{"_index":588,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.getbyid(id",{"_index":582,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.update(id",{"_index":595,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.uploadtags(result",{"_index":617,"title":{},"body":{"controllers/TagController.html":{}}}],["this.type",{"_index":395,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.typeormhealthindicator.pingcheck('postgres",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":704,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":343,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"entities/Tag.html":{}}}],["todo",{"_index":723,"title":{},"body":{"injectables/TagService.html":{}}}],["todo.updatedby",{"_index":724,"title":{},"body":{"injectables/TagService.html":{}}}],["todoconditions",{"_index":736,"title":{},"body":{"injectables/TagService.html":{}}}],["todoisstatic",{"_index":735,"title":{},"body":{"injectables/TagService.html":{}}}],["todotag",{"_index":733,"title":{},"body":{"injectables/TagService.html":{}}}],["todotag.conditions",{"_index":737,"title":{},"body":{"injectables/TagService.html":{}}}],["todotag.isstatic",{"_index":739,"title":{},"body":{"injectables/TagService.html":{}}}],["todotag.updatedby",{"_index":740,"title":{},"body":{"injectables/TagService.html":{}}}],["touch",{"_index":932,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":278,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["transports.console",{"_index":307,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":142,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"miscellaneous/variables.html":{}}}],["true})@apioperation({summary",{"_index":492,"title":{},"body":{"controllers/TagController.html":{}}}],["try",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ts",{"_index":151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["twitter",{"_index":938,"title":{},"body":{"index.html":{}}}],["type",{"_index":89,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":325,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"entities/Tag.html":{},"classes/TagRepository.html":{},"dependencies.html":{}}}],["typeorm/driver/mongodb/bson.typings",{"_index":214,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["typeormconfig",{"_index":81,"title":{},"body":{"injectables/ConfigService.html":{}}}],["typeormhealthindicator",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/TagModule.html":{}}}],["typeormmodule.forfeature([tag",{"_index":624,"title":{},"body":{"modules/TagModule.html":{}}}],["typeormmodule.forrootasync",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":104,"title":{},"body":{"injectables/ConfigService.html":{}}}],["types",{"_index":770,"title":{},"body":{"classes/UpdateTagDto.html":{},"dependencies.html":{}}}],["types/node",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":901,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":180,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":911,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":646,"title":{},"body":{"injectables/TagService.html":{}}}],["unlicensed",{"_index":948,"title":{},"body":{"properties.html":{}}}],["unmatching",{"_index":747,"title":{},"body":{"injectables/TagService.html":{}}}],["unmatchingtagdetailsexception",{"_index":670,"title":{"classes/UnmatchingTagDetailsException.html":{}},"body":{"injectables/TagService.html":{},"classes/UnmatchingTagDetailsException.html":{},"coverage.html":{}}}],["up",{"_index":317,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["up(queryrunner",{"_index":323,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["update",{"_index":474,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["update(id",{"_index":516,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["updateby",{"_index":451,"title":{},"body":{"entities/Tag.html":{}}}],["updateconditions",{"_index":732,"title":{},"body":{"injectables/TagService.html":{}}}],["updated_at",{"_index":346,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"entities/Tag.html":{}}}],["updated_by",{"_index":347,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["updatedat",{"_index":424,"title":{},"body":{"entities/Tag.html":{}}}],["updatedatecolumn",{"_index":456,"title":{},"body":{"entities/Tag.html":{}}}],["updatedatecolumn({type",{"_index":448,"title":{},"body":{"entities/Tag.html":{}}}],["updatedby",{"_index":425,"title":{},"body":{"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["updatedbydto",{"_index":490,"title":{"classes/UpdatedByDto.html":{}},"body":{"controllers/TagController.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{}}}],["updatedbydto.updatedby",{"_index":598,"title":{},"body":{"controllers/TagController.html":{}}}],["updateisstatic",{"_index":729,"title":{},"body":{"injectables/TagService.html":{}}}],["updatetagdto",{"_index":517,"title":{"classes/UpdateTagDto.html":{}},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["updatetagdto.conditions",{"_index":730,"title":{},"body":{"injectables/TagService.html":{}}}],["updatetagdto.conditions.length",{"_index":731,"title":{},"body":{"injectables/TagService.html":{}}}],["updatetagdto.resource",{"_index":594,"title":{},"body":{"controllers/TagController.html":{}}}],["updatetagdto.resourceid",{"_index":592,"title":{},"body":{"controllers/TagController.html":{}}}],["updatetagdto.resourcetype",{"_index":593,"title":{},"body":{"controllers/TagController.html":{}}}],["updatetagdto.updatedby",{"_index":741,"title":{},"body":{"injectables/TagService.html":{}}}],["updator",{"_index":766,"title":{},"body":{"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["upload",{"_index":535,"title":{},"body":{"controllers/TagController.html":{}}}],["upload')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":528,"title":{},"body":{"controllers/TagController.html":{}}}],["uploadedfile",{"_index":539,"title":{},"body":{"controllers/TagController.html":{}}}],["uploadfile",{"_index":475,"title":{},"body":{"controllers/TagController.html":{}}}],["uploadfile(file",{"_index":525,"title":{},"body":{"controllers/TagController.html":{}}}],["uploads",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadtags",{"_index":642,"title":{},"body":{"injectables/TagService.html":{}}}],["uploadtags(grid",{"_index":665,"title":{},"body":{"injectables/TagService.html":{}}}],["url",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["use",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["usefactory",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["useinterceptors",{"_index":540,"title":{},"body":{"controllers/TagController.html":{}}}],["user",{"_index":496,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["username",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":676,"title":{},"body":{"injectables/TagService.html":{}}}],["userservice",{"_index":629,"title":{},"body":{"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["using",{"_index":702,"title":{},"body":{"injectables/TagService.html":{}}}],["utf",{"_index":611,"title":{},"body":{"controllers/TagController.html":{}}}],["utils/createcorefieldsstring",{"_index":673,"title":{},"body":{"injectables/TagService.html":{}}}],["utils/createslug",{"_index":675,"title":{},"body":{"injectables/TagService.html":{}}}],["utils/csvhelpers",{"_index":557,"title":{},"body":{"controllers/TagController.html":{}}}],["uuid",{"_index":185,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"entities/Tag.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["uuid_generate_v4",{"_index":333,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["uuidv4",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validateenv",{"_index":110,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":541,"title":{},"body":{"controllers/TagController.html":{}}}],["validator",{"_index":213,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"dependencies.html":{}}}],["value",{"_index":284,"title":{},"body":{"interfaces/IErrorObject.html":{},"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["variable",{"_index":781,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":949,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":336,"title":{},"body":{"classes/Migrations1683734889829.html":{},"classes/Migrations1683734889829-1.html":{}}}],["vendor",{"_index":219,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["version",{"_index":947,"title":{},"body":{"properties.html":{}}}],["void",{"_index":655,"title":{},"body":{"injectables/TagService.html":{}}}],["warn",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":907,"title":{},"body":{"index.html":{}}}],["website",{"_index":936,"title":{},"body":{"index.html":{}}}],["wholesale",{"_index":221,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["winston",{"_index":279,"title":{},"body":{"interfaces/IErrorObject.html":{},"dependencies.html":{}}}],["winston.transports.file",{"_index":308,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["world",{"_index":72,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":925,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTagModule\n\nTagModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TagModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppService } from './app.service';\nimport { HealthController } from './modules/health/health.controller';\nimport { TagModule } from './modules/tags/tag.module';\nimport { ConfigService } from './shared/services/config.service';\nimport { SharedModule } from './shared/shared.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [\n        SharedModule,\n        MulterModule.register({\n          dest: 'src/uploads',\n        }),\n      ],\n      useFactory: (configService: ConfigService) => configService.typeOrmConfig,\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    TagModule,\n    MulterModule.register({\n      dest: './uploads',\n    }),\n  ],\n  controllers: [HealthController],\n  providers: [AppService],\n})\nexport class AppModule {\n  constructor() {\n    console.log('__dirname' + __dirname);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConfigService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodeEnv\n                                \n                                \n                                    isDevEnv\n                                \n                                \n                                    isTestEnv\n                                \n                                \n                                    typeOrmConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/config.service.ts:15\n                            \n                        \n\n                \n                    \n                            constructor\nCreates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:70\n                \n            \n\n\n            \n                \n                    get\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumber(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:80\n                \n            \n\n\n            \n                \n                    getNumber\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodeEnv\n                    \n                \n\n                \n                    \n                        getnodeEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/config.service.ts:40\n                                \n                            \n                    \n                        \n                                nodeEnv\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDevEnv\n                    \n                \n\n                \n                    \n                        getisDevEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/config.service.ts:50\n                                \n                            \n                    \n                        \n                                isDevEnv\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTestEnv\n                    \n                \n\n                \n                    \n                        getisTestEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/config.service.ts:60\n                                \n                            \n                    \n                        \n                                isTestEnv\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        typeOrmConfig\n                    \n                \n\n                \n                    \n                        gettypeOrmConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/config.service.ts:90\n                                \n                            \n                    \n                        \n                                typeOrmConfig\n\n\n                                \n                                \n                                \n                                    Returns :     TypeOrmModuleOptions\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport type { TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport * as dotenv from 'dotenv';\nimport { logger } from '../../config/logger';\n\nimport rdbmsConfig from '../../config/rdbms';\n// import { validateEnv } from 'src/utils/validate-env';\n\n/**\n * ConfigService\n * @export\n * @class ConfigService\n */\n@Injectable()\nexport class ConfigService {\n  /**\n   * constructor\n   * Creates an instance of ConfigService.\n   * @memberof ConfigService\n   */\n  constructor() {\n    dotenv.config({\n      path: '.env',\n    });\n\n    // validateEnv();\n\n    // Replace \\\\n with \\n to support multiline strings in AWS\n    for (const envName of Object.keys(process.env)) {\n      process.env[envName] = process.env[envName].replace(/\\\\n/g, '\\n');\n    }\n  }\n\n  /**\n   * nodeEnv\n   * @readonly\n   * @type {string}\n   * @memberof ConfigService\n   */\n  get nodeEnv(): string {\n    return this.get('NODE_ENV') || 'development';\n  }\n\n  /**\n   * isDevEnv\n   * @readonly\n   * @type {boolean}\n   * @memberof ConfigService\n   */\n  get isDevEnv(): boolean {\n    return this.nodeEnv === 'development';\n  }\n\n  /**\n   * isTestEnv\n   * @readonly\n   * @type {boolean}\n   * @memberof ConfigService\n   */\n  get isTestEnv(): boolean {\n    return this.nodeEnv === 'test';\n  }\n\n  /**\n   * get\n   * @param {string} key\n   * @return {*}  {string}\n   * @memberof ConfigService\n   */\n  public get(key: string): string {\n    return process.env[key];\n  }\n\n  /**\n   * getNumber\n   * @param {string} key\n   * @return {*}  {number}\n   * @memberof ConfigService\n   */\n  public getNumber(key: string): number {\n    return Number(this.get(key));\n  }\n\n  /**\n   * typeOrmConfig\n   * @readonly\n   * @type {TypeOrmModuleOptions}\n   * @memberof ConfigService\n   */\n  get typeOrmConfig(): TypeOrmModuleOptions {\n    let entities = [__dirname + './../../modules/**/*.entity{.ts,.js}'];\n    let migrations = [__dirname + './../../migrations/*{.ts,.js}'];\n\n    if ((module as any).hot) {\n      const entityContext = (require as any).context(\n        './../../modules',\n        true,\n        /\\.entity\\.ts$/,\n      );\n      entities = entityContext.keys().map((id: any) => {\n        const entityModule = entityContext(id);\n        const [entity] = Object.values(entityModule);\n\n        return entity;\n      });\n      const migrationContext = (require as any).context(\n        './../../migrations',\n        false,\n        /\\.ts$/,\n      );\n      migrations = migrationContext.keys().map((id: any) => {\n        const migrationModule = migrationContext(id);\n        const [migration] = Object.values(migrationModule);\n\n        return migration;\n      });\n    }\n\n    logger.info(\n      `RDBMS config ${JSON.stringify({\n        ...rdbmsConfig,\n        entities,\n        migrations,\n      })}`,\n    );\n\n    return {\n      ...rdbmsConfig,\n      entities,\n      migrations,\n      autoLoadEntities: true,\n      relationLoadStrategy: 'query',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTagDto.html":{"url":"classes/CreateTagDto.html","title":"class - CreateTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/createTag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conditions\n                            \n                            \n                                createdBy\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagConditions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiPropertyOptional({description: 'tag conditions', type: Array, isArray: true, required: false, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:98\n                        \n                    \n\n            \n                \n                    conditions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsUUID()@ApiProperty({description: 'identifier of tag creator', type: UUID, required: true, example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:129\n                        \n                    \n\n            \n                \n                    createdBy\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsDefined()@ApiProperty({description: 'name of tag', type: String, required: true, example: 'revenue'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:27\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resource', type: String, required: false, example: 'bank'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:42\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceId', type: String, required: false, example: 'T001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:57\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceType', type: String, required: false, example: 'GST'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:72\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@IsNotEmpty()@ApiProperty({description: 'type of tag', type: String, required: true, example: 'category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:114\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsDefined,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUUID,\n} from 'class-validator';\nimport { UUID } from 'typeorm/driver/mongodb/bson.typings';\nimport { TagConditions } from './tagConditions.dto';\n\nexport class CreateTagDto {\n  /**\n   * name\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsDefined()\n  @ApiProperty({\n    description: 'name of tag',\n    type: String,\n    required: true,\n    example: 'revenue',\n  })\n  name: string;\n\n  /**\n   * resource\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resource',\n    type: String,\n    required: false,\n    example: 'bank',\n  })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceId',\n    type: String,\n    required: false,\n    example: 'T001',\n  })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceType',\n    type: String,\n    required: false,\n    example: 'GST',\n  })\n  resourceType?: string;\n\n  /**\n   * conditions\n   * @type {TagConditions[]}\n   * @memberof CreateTagDto\n   */\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'tag conditions',\n    type: Array,\n    isArray: true,\n    required: false,\n    example: [\n      {\n        field: 'description',\n        keywords: [\n          'Amazon Vendor Central',\n          'Amazon Wholesale',\n          'Apple',\n          'Cash Deposit',\n        ],\n        condition: 'contains',\n      },\n    ],\n  })\n  conditions?: TagConditions[];\n\n  /**\n   * type\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsDefined()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'type of tag',\n    type: String,\n    required: true,\n    example: 'category',\n  })\n  type: string;\n\n  /**\n   * createdBy\n   * @type {UUID}\n   * @memberof CreateTagDto\n   */\n  @IsDefined()\n  @IsUUID()\n  @ApiProperty({\n    description: 'identifier of tag creator',\n    type: UUID,\n    required: true,\n    example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9',\n  })\n  createdBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatedByDto.html":{"url":"classes/CreatedByDto.html","title":"class - CreatedByDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatedByDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/createdBy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@ApiProperty({description: 'identifier of tag creator', type: UUID, required: true, example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/createdBy.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsString } from 'class-validator';\nimport { UUID } from 'typeorm/driver/mongodb/bson.typings';\n\nexport class CreatedByDto {\n  @IsDefined()\n  @IsString()\n  @ApiProperty({\n    description: 'identifier of tag creator',\n    type: UUID,\n    required: true,\n    example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9',\n  })\n  createdBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsvFileValidationError.html":{"url":"classes/CsvFileValidationError.html","title":"class - CsvFileValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsvFileValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/csvFileValidationError.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/csvFileValidationError.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class CsvFileValidationError extends HttpException {\n  constructor(message: string) {\n    super(message, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTagDto.html":{"url":"classes/GetTagDto.html","title":"class - GetTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/getTag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'name of tag', type: String, required: true, example: 'revenue'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:18\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resource', type: String, required: false, example: 'bank'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:33\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceId', type: String, required: false, example: 'T001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:48\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceType', type: String, required: false, example: 'GST'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:63\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'type of tag', type: String, required: true, example: 'category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:78\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class GetTagDto {\n  /**\n   * name\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiProperty({\n    description: 'name of tag',\n    type: String,\n    required: true,\n    example: 'revenue',\n  })\n  name?: string;\n\n  /**\n   * resource\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resource',\n    type: String,\n    required: false,\n    example: 'bank',\n  })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceId',\n    type: String,\n    required: false,\n    example: 'T001',\n  })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceType',\n    type: String,\n    required: false,\n    example: 'GST',\n  })\n  resourceType?: string;\n\n  /**\n   * type\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiProperty({\n    description: 'type of tag',\n    type: String,\n    required: true,\n    example: 'category',\n  })\n  type?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n            \n                Description\n            \n            \n                HealthController\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                health\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        health\n                        \n                    \n                \n            \n            \n                \n                    \n                    health()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:39\n                \n            \n\n\n            \n                \n                    health\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        'use strict';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport type { HealthCheckResult } from '@nestjs/terminus';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n/**\n * HealthController\n * @export\n * @class HealthController\n */\n@Controller('health')\n@ApiTags('Health')\nexport class HealthController {\n  /**\n   * constructor\n   * Creates an instance of HealthController.\n   * @param {HealthCheckService} healthCheck\n   * @param {TypeOrmHealthIndicator} typeOrmHealthIndicator\n   * @memberof HealthController\n   */\n  constructor(\n    private readonly healthCheck: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n  ) {}\n\n  /**\n   * health\n   * @return {Promise}\n   * @memberof HealthController\n   */\n  @Get()\n  @HealthCheck()\n  public async health(): Promise {\n    return this.healthCheck.check([\n      () => this.typeOrmHealthIndicator.pingCheck('postgres'),\n    ]);\n  } // End of health\n} // End of HealthController\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorObject.html":{"url":"interfaces/IErrorObject.html","title":"interface - IErrorObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/logger.ts\n        \n\n\n            \n                Description\n            \n            \n                IErrorObject\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/config/logger.ts:24\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    level\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    message\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createLogger, format, transports } from 'winston';\n\n/**\n * IErrorObject\n * @interface IErrorObject\n */\ninterface IErrorObject {\n  /**\n   * level\n   * @type {string}\n   * @memberof IErrorObject\n   */\n  level: string;\n\n  /**\n   * message\n   * @type {string}\n   * @memberof IErrorObject\n   */\n  message: string;\n\n  [key: string]: any;\n}\n\n/**\n * replaceError\n * @description\n * @param {*} { label, level, message, stack }\n */\nconst replaceError = ({ label, level, message, stack }: any) => ({\n  label,\n  level,\n  message,\n  stack,\n});\n\n/**\n * replacer\n * @description\n * @param {string} key\n * @param {*} value\n */\nconst replacer = (key: string, value: any) =>\n  value instanceof Error ? replaceError(value) : value;\n\n/**\n * prodFormat\n * @return {*}\n */\nconst prodFormat = () => format.combine(format.json({ replacer }));\n\n/**\n * formatMessage\n * @description\n * @param {Record} info\n */\nconst formatMessage = (info: Record) =>\n  `${info.level} ${info.message}`;\n\n/**\n * formatError\n * @description\n * @param {Record} info\n */\nconst formatError = (info: Record) =>\n  `${info.level} ${info.message}\\n\\n${info.stack}\\n`;\n\n/**\n * fmt\n * @description\n * @param {IErrorObject} info\n */\nconst fmt = (info: IErrorObject) =>\n  info instanceof Error ? formatError(info) : formatMessage(info);\n\n/**\n * devFormat\n * @return {*}\n */\nconst devFormat = () => format.combine(format.colorize(), format.printf(fmt));\n\n/**\n * logger\n *  @type {*}\n */\nexport const logger = createLogger({\n  exitOnError: false,\n  format: process.env.NODE_ENV === 'production' ? prodFormat() : devFormat(),\n  level: 'debug',\n  transports: [\n    new transports.Console(),\n    // new winston.transports.File({ filename: \"errors.log\" }),\n  ],\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migrations1683734889829.html":{"url":"classes/Migrations1683734889829.html","title":"class - Migrations1683734889829","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migrations1683734889829\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/1683734889829-migrations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Migrations1683734889829'\n                    \n                \n                    \n                        \n                                Defined in src/1683734889829-migrations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/1683734889829-migrations.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/1683734889829-migrations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Migrations1683734889829 implements MigrationInterface {\n  name = 'Migrations1683734889829';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"tag\".\"tag\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" text NOT NULL, \"type\" text NOT NULL, \"resource\" character varying, \"resource_id\" character varying, \"resource_type\" character varying, \"conditions\" jsonb DEFAULT '[]', \"is_static\" boolean NOT NULL DEFAULT true, \"slug\" text NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"created_by\" text NOT NULL, \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_by\" text NOT NULL, \"deleted_at\" TIMESTAMP, CONSTRAINT \"PK_8e4052373c579afc1471f526760\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"tag\".\"tag\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migrations1683734889829-1.html":{"url":"classes/Migrations1683734889829-1.html","title":"class - Migrations1683734889829-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migrations1683734889829\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1683734889829-migrations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Migrations1683734889829'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1683734889829-migrations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1683734889829-migrations.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1683734889829-migrations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Migrations1683734889829 implements MigrationInterface {\n  name = 'Migrations1683734889829';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"tag\".\"tag\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" text NOT NULL, \"type\" text NOT NULL, \"resource\" character varying, \"resource_id\" character varying, \"resource_type\" character varying, \"conditions\" jsonb DEFAULT '[]', \"is_static\" boolean NOT NULL DEFAULT true, \"slug\" text NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"created_by\" text NOT NULL, \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_by\" text NOT NULL, \"deleted_at\" TIMESTAMP, CONSTRAINT \"PK_8e4052373c579afc1471f526760\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"tag\".\"tag\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoTagFoundException.html":{"url":"classes/NoTagFoundException.html","title":"class - NoTagFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoTagFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/noTagFoundException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/noTagFoundException.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class NoTagFoundException extends HttpException {\n  constructor(message: string) {\n    super('No Tag Found with id: ' + message, HttpStatus.NO_CONTENT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceValidationException.html":{"url":"classes/ResourceValidationException.html","title":"class - ResourceValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/resourceValidationException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/resourceValidationException.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class ResourceValidationException extends HttpException {\n  constructor(message: string) {\n    super(message, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseTagDto.html":{"url":"classes/ResponseTagDto.html","title":"class - ResponseTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/responseTag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conditions\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isStatic\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                    Optional\n                                slug\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: Tag)\n                    \n                \n                        \n                            \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:152\n                            \n                        \n\n                \n                    \n                            constructor\nCreates an instance of ResponseTagDto.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        Tag\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagConditions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiPropertyOptional({description: 'tag conditions', type: Array, isArray: true, required: false, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:121\n                        \n                    \n\n            \n                \n                    conditions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'id of tag', type: String, required: true, example: 'e8a5f497-584c-459e-87ca-2f0d5b770405'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:20\n                        \n                    \n\n            \n                \n                    id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isStatic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'is tag static or not', type: Boolean, required: false, example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:136\n                        \n                    \n\n            \n                \n                    isStatic\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of tag', type: String, required: true, example: 'revenue'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:35\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resource', type: String, required: false, example: 'bank'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:65\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceId', type: String, required: false, example: 'T001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:80\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceType of tag', type: String, required: false, example: 'GST'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:95\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'slug of tag', type: String, required: false, example: 'revenue-category-10Bank-GST-T000-4b109a5a-8eaa-4f75-91ae-1735212bb75b'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:152\n                        \n                    \n\n            \n                \n                    slug\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'type of tag', type: String, required: true, example: 'category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:50\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\nimport { Tag } from './../tag.entity';\nimport { TagConditions } from './tagConditions.dto';\n\nexport class ResponseTagDto {\n  /**\n   * id\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiProperty({\n    description: 'id of tag',\n    type: String,\n    required: true,\n    example: 'e8a5f497-584c-459e-87ca-2f0d5b770405',\n  })\n  id?: string;\n\n  /**\n   * name\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of tag',\n    type: String,\n    required: true,\n    example: 'revenue',\n  })\n  name?: string;\n\n  /**\n   * type\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'type of tag',\n    type: String,\n    required: true,\n    example: 'category',\n  })\n  type?: string;\n\n  /**\n   * resource\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resource',\n    type: String,\n    required: false,\n    example: 'bank',\n  })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceId',\n    type: String,\n    required: false,\n    example: 'T001',\n  })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceType of tag',\n    type: String,\n    required: false,\n    example: 'GST',\n  })\n  resourceType?: string;\n\n  /**\n   * conditions\n   * @type {TagConditions[]}\n   * @memberof ResponseTagDto\n   */\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'tag conditions',\n    type: Array,\n    isArray: true,\n    required: false,\n    example: [\n      {\n        field: 'description',\n        keywords: [\n          'Amazon Vendor Central',\n          'Amazon Wholesale',\n          'Apple',\n          'Cash Deposit',\n        ],\n        condition: 'contains',\n      },\n    ],\n  })\n  conditions?: TagConditions[];\n\n  /**\n   * isStatic\n   * @type {Boolean}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'is tag static or not',\n    type: Boolean,\n    required: false,\n    example: true,\n  })\n  isStatic?: boolean;\n\n  /**\n   * slug\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'slug of tag',\n    type: String,\n    required: false,\n    example:\n      'revenue-category-10Bank-GST-T000-4b109a5a-8eaa-4f75-91ae-1735212bb75b',\n  })\n  slug?: string;\n\n  /**\n   * constructor\n   * Creates an instance of ResponseTagDto.\n   * @param {Tag} tag\n   * @type {Tag}\n   * @memberof ResponseTagDto\n   */\n  constructor(tag: Tag) {\n    this.id = tag.id;\n    this.name = tag.name;\n    this.type = tag.type;\n    this.resource = tag.resource;\n    this.resourceId = tag.resourceId;\n    this.resourceType = tag.resourceType;\n    this.conditions = tag.conditions;\n    this.isStatic = tag.isStatic;\n    this.slug = tag.slug;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nSharedModule\n\nSharedModule\n\nConfigService  -->\n\nSharedModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            SharedModule\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Global, Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigService } from './services/config.service';\n\n/**\n * providers\n * @type {*}\n */\nconst providers = [ConfigService];\n\n/**\n * SharedModule\n * @export\n * @class SharedModule\n */\n@Global()\n@Module({\n  providers,\n  imports: [\n    HttpModule,\n    JwtModule.registerAsync({\n      imports: [SharedModule],\n      useFactory: () => ({}),\n      inject: [ConfigService],\n    }),\n  ],\n  exports: [...providers, HttpModule, JwtModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Tag.html":{"url":"entities/Tag.html","title":"entity - Tag","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/tag.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conditions\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isStatic\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                slug\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagConditions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Column({type: 'jsonb', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:69\n                        \n                    \n\n            \n                \n                    conditions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:93\n                        \n                    \n\n            \n                \n                    createdTa\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:101\n                        \n                    \n\n            \n                \n                    createdBy\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:125\n                        \n                    \n\n            \n                \n                    deletedAt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:20\n                        \n                    \n\n            \n                \n                    id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStatic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:77\n                        \n                    \n\n            \n                \n                    isStatic\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:28\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:44\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:52\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:60\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:85\n                        \n                    \n\n            \n                \n                    slug\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:36\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', name: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:109\n                        \n                    \n\n            \n                \n                    updatedAt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:117\n                        \n                    \n\n            \n                \n                    updateBy\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { IsObject } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { TagConditions } from './dto/tagConditions.dto';\n\n@Entity('tag')\nexport class Tag {\n  /**\n   * id\n   * @type {string}\n   * @memberof Tag\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * name\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  name: string;\n\n  /**\n   * type\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  type: string;\n\n  /**\n   *resource\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ nullable: true })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ nullable: true })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ nullable: true })\n  resourceType?: string;\n\n  /**\n   * conditions\n   * @type {TagConditions[]}\n   * @memberof Tag\n   */\n  @IsObject()\n  @Column({ type: 'jsonb', nullable: true, default: [] })\n  conditions?: TagConditions[];\n\n  /**\n   * isStatic\n   * @type {Boolean}\n   * @memberof Tag\n   */\n  @Column({ default: true, nullable: false })\n  isStatic: boolean;\n\n  /**\n   * slug\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  slug: string;\n\n  /**\n   * createdTa\n   * @type {Date}\n   * @memberof Tag\n   */\n  @CreateDateColumn({ type: 'timestamp', name: 'created_at' })\n  createdAt?: Date;\n\n  /**\n   * createdBy\n   * @type {UUID}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  createdBy: string;\n\n  /**\n   * updatedAt\n   * @type {Date}\n   * @memberof Tag\n   */\n  @UpdateDateColumn({ type: 'timestamp', name: 'updated_at' })\n  updatedAt?: Date;\n\n  /**\n   * updateBy\n   * @type {UUID}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  updatedBy: string;\n\n  /**\n   * deletedAt\n   * @type {Date}\n   * @memberof tag\n   */\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagConditions.html":{"url":"classes/TagConditions.html","title":"class - TagConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/tagConditions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                field\n                            \n                            \n                                keywords\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'condition of one of conditions of a tag', type: String, required: true, example: 'contains'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/tagConditions.dto.ts:28\n                        \n                    \n\n            \n                \n                    condition\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'field of one of conditions of a tag', type: String, required: true, example: 'description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/tagConditions.dto.ts:15\n                        \n                    \n\n            \n                \n                    field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'keywords of one of conditions of a tag', type: Array, isArray: true, required: true, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/tagConditions.dto.ts:47\n                        \n                    \n\n            \n                \n                    keywords\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TagConditions {\n  /**\n   * field\n   * @type {string}\n   * @memberof TagConditions\n   */\n  @ApiProperty({\n    description: 'field of one of conditions of a tag',\n    type: String,\n    required: true,\n    example: 'description',\n  })\n  field: string;\n\n  /**\n   * condition\n   * @type {string}\n   * @memberof TagConditions\n   */\n  @ApiProperty({\n    description: 'condition of one of conditions of a tag',\n    type: String,\n    required: true,\n    example: 'contains',\n  })\n  condition: string;\n\n  /**\n   * keywords\n   * @type {string[]}\n   * @memberof TagConditions\n   */\n  @ApiProperty({\n    description: 'keywords of one of conditions of a tag',\n    type: Array,\n    isArray: true,\n    required: true,\n    example: [\n      'Amazon Vendor Central',\n      'Amazon Wholesale',\n      'Apple',\n      'Cash Deposit',\n    ],\n  })\n  keywords: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagConditionsValidationException.html":{"url":"classes/TagConditionsValidationException.html","title":"class - TagConditionsValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagConditionsValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/tagConditionsValidationException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/tagConditionsValidationException.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class TagConditionsValidationException extends HttpException {\n  constructor(message: string) {\n    super(message, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagController.html":{"url":"controllers/TagController.html","title":"controller - TagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/tag.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n            \n                Description\n            \n            \n                TagController\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTagDto: CreateTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.CREATED)@ApiOperation({summary: 'Post: Create a new tag.'})@ApiCreatedResponse({status: 201, description: 'Tag has been successfully created. ', type: CreateTagDto})@ApiBadRequestResponse({status: 400, description: 'Tag has not been created. Bad request.', type: BadRequestException})\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:82\n                \n            \n\n\n            \n                \n                    create\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTagDto\n                                    \n                                                CreateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, updatedByDto: UpdatedByDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.OK)@ApiParam({name: 'id', type: String, required: true})@ApiOperation({summary: 'Portal: Archive a single user by its ID.'})@ApiOkResponse({status: 200, description: 'Successful', type: String})@ApiNoContentResponse({status: 204, description: 'No tag founded.', type: NoTagFoundException})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:233\n                \n            \n\n\n            \n                \n                    delete\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedByDto\n                                    \n                                                UpdatedByDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(getTagDto: GetTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(HttpStatus.OK)@ApiQuery({name: 'getTagDto', type: GetTagDto, required: true})@ApiOperation({summary: 'Get: Get a list of all tags with conditions.'})@ApiOkResponse({status: 200, description: 'Successful', type: GetTagDto})@ApiNotFoundResponse({status: 204, description: 'No tag founded.', type: NoTagFoundException})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:155\n                \n            \n\n\n            \n                \n                    getAll\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getTagDto\n                                    \n                                                GetTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@HttpCode(HttpStatus.OK)@ApiParam({name: 'id', type: String, required: true})@ApiOperation({summary: 'Get: Get a single tag by its ID.'})@ApiOkResponse({status: 200, description: 'Found tag successfully.', type: ResponseTagDto})@ApiNotFoundResponse({status: 204, description: 'No tag founded.', type: NoTagFoundException})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:121\n                \n            \n\n\n            \n                \n                    getById\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTagDto: UpdateTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Patch: Update existing tag with conditions'})@ApiOkResponse({status: 200, description: 'Successful', type: ResponseTagDto})@ApiNoContentResponse({status: 204, description: 'No tag founded.', type: NoTagFoundException})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:193\n                \n            \n\n\n            \n                \n                    update\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTagDto\n                                    \n                                                UpdateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: Express.Multer.File, createdBy: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('bulk-upload')@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Post: Create tags from a csv file'})@ApiCreatedResponse({status: 201, description: 'Successful', type: Object})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:270\n                \n            \n\n\n            \n                \n                    create bulk-upload\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createdBy\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { message: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseInterceptors,\n  ValidationPipe,\n} from '@nestjs/common';\nimport * as fs from 'fs';\n\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { parse } from 'csv-parse';\nimport { diskStorage } from 'multer';\nimport { UpdatedByDto } from '../../common/dto/updatedBy.dto';\nimport { logger } from '../../config/logger';\nimport { csvFileFilter } from '../../utils/csvHelpers';\nimport { CreateTagDto } from './dto/createTag.dto';\nimport { GetTagDto } from './dto/getTag.dto';\nimport { ResponseTagDto } from './dto/responseTag.dto';\nimport { UpdateTagDto } from './dto/updateTag.dto';\nimport resourceValidation from './dto/validations/resourceValidation.validation';\nimport { TagService } from './tag.service';\nimport { NoTagFoundException } from './../../exceptions/noTagFoundException.exception';\n\n/**\n * TagController\n * @export\n * @class TagController\n */\n@ApiTags('Tags')\n@Controller('tags')\nexport class TagController {\n  /**\n   * constructor\n   * Creates an instance of TagController.\n   * @param {TagService} tagService\n   * @memberof TagController\n   */\n  constructor(private readonly tagService: TagService) {}\n\n  /**\n   * create\n   * @param {CreateTagDto} createTagDto\n   * @return {Promise}\n   * @memberof TagController\n   */\n  @Post()\n  @HttpCode(HttpStatus.CREATED)\n  @ApiOperation({\n    summary: 'Post: Create a new tag.',\n  })\n  @ApiCreatedResponse({\n    status: 201,\n    description: 'Tag has been successfully created. ',\n    type: CreateTagDto,\n  })\n  @ApiBadRequestResponse({\n    status: 400,\n    description: 'Tag has not been created. Bad request.',\n    type: BadRequestException,\n  })\n  public async create(\n    @Body(new ValidationPipe()) createTagDto: CreateTagDto,\n  ): Promise {\n    logger.info('Post: tags-svc/tags');\n    resourceValidation(\n      createTagDto.resourceId,\n      createTagDto.resourceType,\n      createTagDto.resource,\n    );\n    return this.tagService.create(createTagDto);\n  }\n\n  /**\n   *getById\n   * @param {string} id\n   * @return {Promise}\n   * @memberof TagController\n   */\n  @Get(':id')\n  @HttpCode(HttpStatus.OK)\n  @ApiParam({ name: 'id', type: String, required: true })\n  @ApiOperation({\n    summary: 'Get: Get a single tag by its ID.',\n  })\n  @ApiOkResponse({\n    status: 200,\n    description: 'Found tag successfully.',\n    type: ResponseTagDto,\n  })\n  @ApiNotFoundResponse({\n    status: 204,\n    description: 'No tag founded.',\n    type: NoTagFoundException,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  getById(\n    @Param('id', ParseUUIDPipe)\n    id: string,\n  ): Promise {\n    return this.tagService.getById(id);\n  }\n\n  /**\n   * getAll\n   * @param  {GetTagDto} getDto\n   * @return {Promise}\n   * @memberof TagController\n   */\n  @Get()\n  @HttpCode(HttpStatus.OK)\n  @ApiQuery({ name: 'getTagDto', type: GetTagDto, required: true })\n  @ApiOperation({\n    summary: 'Get: Get a list of all tags with conditions.',\n  })\n  @ApiOkResponse({\n    status: 200,\n    description: 'Successful',\n    type: GetTagDto,\n  })\n  @ApiNotFoundResponse({\n    status: 204,\n    description: 'No tag founded.',\n    type: NoTagFoundException,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  public async getAll(\n    @Query(new ValidationPipe()) getTagDto: GetTagDto,\n  ): Promise {\n    resourceValidation(\n      getTagDto.resourceId,\n      getTagDto.resourceType,\n      getTagDto.resource,\n    );\n    return this.tagService.getAllTags(getTagDto);\n  }\n\n  /**\n   * update\n   * @param {string} id\n   * @param {UpdateTagDto} updateTagDto\n   * @return {Promise}\n   * @memberof TagController\n   */\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Patch: Update existing tag with conditions',\n  })\n  @ApiOkResponse({\n    status: 200,\n    description: 'Successful',\n    type: ResponseTagDto,\n  })\n  @ApiNoContentResponse({\n    status: 204,\n    description: 'No tag founded.',\n    type: NoTagFoundException,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  @Patch(':id')\n  update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body(new ValidationPipe()) updateTagDto: UpdateTagDto,\n  ): Promise {\n    console.log('Entered into controller function');\n    resourceValidation(\n      updateTagDto.resourceId,\n      updateTagDto.resourceType,\n      updateTagDto.resource,\n    );\n    return this.tagService.update(id, updateTagDto);\n  }\n\n  /**\n   * delete\n   * @param {string} id\n   * @return {HttpStatus.NO_CONTENT}\n   * @memberof TagController\n   */\n  @Delete(':id')\n  @HttpCode(HttpStatus.OK)\n  @ApiParam({ name: 'id', type: String, required: true })\n  @ApiOperation({\n    summary: 'Portal: Archive a single user by its ID.',\n  })\n  @ApiOkResponse({\n    status: 200,\n    description: 'Successful',\n    type: String,\n  })\n  @ApiNoContentResponse({\n    status: 204,\n    description: 'No tag founded.',\n    type: NoTagFoundException,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  delete(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body(new ValidationPipe()) updatedByDto: UpdatedByDto,\n  ) {\n    return this.tagService.delete(id, updatedByDto.updatedBy);\n  }\n\n  /**\n   * create bulk-upload\n   * @param {Express.Multer.File} file\n   * @param {string} createdBy\n   * @return {Object}\n   * @memberof TagController\n   */\n  @Post('bulk-upload')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Post: Create tags from a csv file',\n  })\n  @ApiCreatedResponse({\n    status: 201,\n    description: 'Successful',\n    type: Object,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: './src/uploads',\n      }),\n      fileFilter: csvFileFilter,\n    }),\n  )\n  uploadFile(\n    @UploadedFile() file: Express.Multer.File,\n    @Body('createdBy', ParseUUIDPipe) createdBy: string,\n  ) {\n    const response = {\n      message: 'Tags created successfully!',\n    };\n    const csvFilePath = 'src/uploads/' + file.filename;\n    const fileContent = fs.readFileSync(csvFilePath, { encoding: 'utf-8' });\n\n    parse(fileContent, { delimiter: ',' }, (error, result) => {\n      if (error) {\n        logger.error(error);\n      }\n      this.tagService.uploadTags(result, createdBy);\n    });\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagModule.html":{"url":"modules/TagModule.html","title":"module - TagModule","body":"\n                   \n\n\n\n\n    Modules\n    TagModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TagModule\n\n\n\ncluster_TagModule_providers\n\n\n\n\nTagService\n\nTagService\n\n\n\nTagModule\n\nTagModule\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/tags/tag.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            TagModule\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TagService } from './tag.service';\nimport { TagController } from './tag.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Tag } from './tag.entity';\nimport { TagRepository } from './tag.respository';\n\n/**\n * TagModule\n * @export\n * @class TagModule\n */\n@Module({\n  controllers: [TagController],\n  providers: [TagService, TagRepository],\n  imports: [TypeOrmModule.forFeature([Tag])],\n})\nexport class TagModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagRepository.html":{"url":"classes/TagRepository.html","title":"class - TagRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/tag.respository.ts\n        \n\n\n            \n                Description\n            \n            \n                TagRepository\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/tags/tag.respository.ts:11\n                            \n                        \n\n                \n                    \n                            constructor\nCreates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Tag } from './tag.entity';\n\n/**\n * TagRepository\n * @export\n * @class TagRepository\n * @extends {Repository}\n */\nexport class TagRepository extends Repository {\n  /**\n   * constructor\n   * Creates an instance of UserService.\n   * @class TagRepository\n   * @param {Repository} tagRepository\n   */\n  constructor(\n    @InjectRepository(Tag) private readonly tagRepository: Repository,\n  ) {\n    super(\n      tagRepository.target,\n      tagRepository.manager,\n      tagRepository.queryRunner,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagService.html":{"url":"injectables/TagService.html","title":"injectable - TagService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TagService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/tag.service.ts\n        \n\n\n            \n                Description\n            \n            \n                TagService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findByFields\n                            \n                            \n                                    Async\n                                getAllTags\n                            \n                            \n                                    Public\n                                    Async\n                                getById\n                            \n                            \n                                isStaticValidation\n                            \n                            \n                                matchCoreFields\n                            \n                            \n                                mergeConditions\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                uploadTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: TagRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/tags/tag.service.ts:24\n                            \n                        \n\n                \n                    \n                            constructor\nCreates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        TagRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTagDto: CreateTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:68\n                \n            \n\n\n            \n                \n                    create\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTagDto\n                                    \n                                                CreateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, updatedBy: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:164\n                \n            \n\n\n            \n                \n                    delete\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedBy\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        {Object}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByFields\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByFields(fields: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTags\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTags(getDto: GetTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:133\n                \n            \n\n\n            \n                \n                    getAllTags\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getDto\n                                    \n                                                GetTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:115\n                \n            \n\n\n            \n                \n                    getById\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStaticValidation\n                        \n                    \n                \n            \n            \n                \nisStaticValidation(isStatic: boolean, conditions: TagConditions[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isStatic\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                TagConditions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchCoreFields\n                        \n                    \n                \n            \n            \n                \nmatchCoreFields(firstTagDto: Tag, secondTagDto: UpdateTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstTagDto\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secondTagDto\n                                    \n                                                UpdateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeConditions\n                        \n                    \n                \n            \n            \n                \nmergeConditions(firstCondition: TagConditions[], secondCondition: TagConditions[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstCondition\n                                    \n                                                TagConditions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secondCondition\n                                    \n                                                TagConditions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateTagDto: UpdateTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:184\n                \n            \n\n\n            \n                \n                    update\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTagDto\n                                    \n                                                UpdateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadTags\n                        \n                    \n                \n            \n            \n                \nuploadTags(grid: any[][], createdBy: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:247\n                \n            \n\n\n            \n                \n                    uploadTags\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                            any[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createdBy\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { response } from 'express';\nimport { NoTagFoundException } from '../../exceptions/noTagFoundException.exception';\nimport { TagConditionsValidationException } from '../../exceptions/tagConditionsValidationException.exception';\nimport { UnmatchingTagDetailsException } from '../../exceptions/unmatchingTagDetailsValidationException.exception';\nimport { CreateTagDto } from './dto/createTag.dto';\nimport { GetTagDto } from './dto/getTag.dto';\nimport { Tag } from './tag.entity';\n\nimport createCoreFieldsString from '../../utils/createCoreFieldsString';\nimport createSlug from '../../utils/createSlug';\nimport { ResponseTagDto } from './dto/responseTag.dto';\nimport { TagConditions } from './dto/tagConditions.dto';\nimport { UpdateTagDto } from './dto/updateTag.dto';\nimport { TagRepository } from './tag.respository';\n\n/**\n * TagService\n * @export\n * @class TagService\n */\n@Injectable()\nexport class TagService {\n  /**\n   * constructor\n   * Creates an instance of UserService.\n   * @param {UserRepository} userRepository\n   * @memberof UserService\n   */\n  constructor(\n    @InjectRepository(Tag)\n    private readonly tagRepository: TagRepository,\n  ) {}\n\n  mergeConditions(\n    firstCondition: TagConditions[],\n    secondCondition: TagConditions[],\n  ) {\n    if (firstCondition.length == 0) {\n      return secondCondition;\n    } else if (secondCondition.length == 0) {\n      return firstCondition;\n    }\n\n    firstCondition[0].keywords = [\n      ...new Set([\n        ...firstCondition[0].keywords,\n        ...secondCondition[0].keywords,\n      ]),\n    ];\n    return firstCondition;\n  }\n\n  async findByFields(fields: any) {\n    return await this.tagRepository.find({\n      where: { ...fields },\n    });\n  }\n\n  /**\n   * create\n   * @description Function for creating a new tag.\n   * @param {CreateTagDto} createTagDto\n   * @return {Promise}\n   * @memberof TagService\n   */\n  public async create(createTagDto: CreateTagDto): Promise {\n    const slug: string = createSlug({ ...createTagDto });\n    const createdBy = createTagDto.createdBy;\n    const createIsStatic: boolean =\n      createTagDto.conditions == null || createTagDto.conditions.length == 0;\n    const createConditions: TagConditions[] =\n      createIsStatic == true ? [] : createTagDto.conditions;\n\n    const res = await this.tagRepository.findOne({\n      where: {\n        name: createTagDto.name,\n        resource: createTagDto.resource,\n        resourceId: createTagDto.resourceId,\n        resourceType: createTagDto.resourceType,\n        type: createTagDto.type,\n      },\n    });\n\n    if (res == null) {\n      return new ResponseTagDto(\n        await this.tagRepository.save({\n          ...createTagDto,\n          updatedBy: createdBy,\n          slug: slug,\n          isStatic: createIsStatic,\n          conditions: createConditions,\n        }),\n      );\n    }\n\n    if (createIsStatic == false) {\n      res.conditions = this.mergeConditions(createConditions, res.conditions);\n    } else {\n      res.conditions = [];\n    }\n    res.updatedBy = createTagDto.createdBy;\n    res.isStatic = createIsStatic;\n    return new ResponseTagDto(await this.tagRepository.save(res));\n  }\n\n  /**\n   * getById\n   * @description Find an tag using its ID\n   * @param {string} id\n   * @return {Promise}\n   * @memberof TagService\n   */\n  public async getById(id: string): Promise {\n    const res: Tag = await this.tagRepository.findOne({\n      where: { id: id },\n    });\n    console.log(res);\n    if (res == null) {\n      throw new NoTagFoundException(id);\n    }\n    return new ResponseTagDto(res);\n  }\n\n  /**\n   * getAllTags\n   * @description Get all tags from database with query filters\n   * @param {GetTagDto} getDto\n   * @return {Promise}\n   * @memberof TagService\n   */\n  async getAllTags(getDto: GetTagDto): Promise {\n    console.log(getDto.resource);\n    const res: Tag[] = await this.tagRepository.find({\n      where: {\n        resource: getDto.resource,\n        resourceId: getDto.resourceId,\n        resourceType: getDto.resourceType,\n        type: getDto.type,\n        name: getDto.name,\n      },\n    });\n\n    if (res.length == 0) {\n      console.log('res.length==0');\n      throw new NotFoundException('No Tag found');\n    }\n    const response: ResponseTagDto[] = [];\n    res.forEach(function (r) {\n      response.push(new ResponseTagDto(r));\n    });\n    return response;\n  }\n\n  /**\n   * delete\n   * @description This function archive a tag with the passed tag id\n   * @param {string} id\n   * @param {string} updatedBy\n   * @return {Object}  {Object}\n   * @memberof TagService\n   */\n  async delete(id: string, updatedBy: string) {\n    const todo: Tag = await this.tagRepository.findOne({ where: { id: id } });\n    if (todo) {\n      todo.updatedBy = updatedBy;\n      await this.tagRepository.save(todo);\n    } else {\n      throw new NoTagFoundException(id);\n    }\n    await this.tagRepository.softDelete(id);\n    return response.status(HttpStatus.OK);\n  }\n\n  /**\n   * update\n   * @description Update an user entity with new data.\n   * @param {string} id\n   * @param {UpdateTagDto} updateTagDto\n   * @return {Promise}\n   * @memberof TagService\n   */\n  async update(\n    id: string,\n    updateTagDto: UpdateTagDto,\n  ): Promise {\n    const updateIsStatic: boolean =\n      updateTagDto.conditions == null || updateTagDto.conditions.length == 0;\n    const updateConditions: TagConditions[] =\n      updateIsStatic == true ? [] : updateTagDto.conditions;\n\n    const todoTag: Tag = await this.tagRepository.findOne({\n      where: { id: id },\n    });\n    if (!todoTag) {\n      throw new NoTagFoundException(id);\n    }\n    this.matchCoreFields(todoTag, updateTagDto);\n\n    const { isStatic: todoIsStatic, conditions: todoConditions } = todoTag;\n\n    if (todoIsStatic && !updateIsStatic) {\n      todoTag.conditions = updateConditions;\n    } else if (!todoIsStatic && updateIsStatic) {\n      todoTag.conditions = [];\n    } else if (!todoIsStatic && !updateIsStatic) {\n      todoTag.conditions = await this.mergeConditions(\n        todoConditions,\n        updateConditions,\n      );\n    }\n\n    todoTag.isStatic = updateIsStatic;\n    todoTag.updatedBy = updateTagDto.updatedBy;\n    return new ResponseTagDto(await this.tagRepository.save(todoTag));\n  }\n  matchCoreFields(firstTagDto: Tag, secondTagDto: UpdateTagDto) {\n    if (\n      createCoreFieldsString(firstTagDto) !=\n      createCoreFieldsString(secondTagDto)\n    ) {\n      console.log(createSlug(firstTagDto));\n      console.log(createSlug(secondTagDto));\n      throw new UnmatchingTagDetailsException(\n        'resourceId, resourceType, resource, name or type of tag are unmatching with existing tag',\n      );\n    }\n  }\n\n  isStaticValidation(isStatic: boolean, conditions: TagConditions[]) {\n    if (conditions == null && isStatic == false) {\n      throw new TagConditionsValidationException(\n        'isStatic and conditions are inconsistent',\n      );\n    }\n  }\n\n  /**\n   * uploadTags\n   * @description Function for creating a new tag.\n   * @param {any[][]} grid\n   * @param {string} createdBy\n   * @return {void}\n   * @memberof TagService\n   */\n  uploadTags(grid: any[][], createdBy: string): void {\n    const numberOfCols = grid[0].length;\n    const numberOfRows = grid.length;\n\n    for (let col = 1; col ();\n\n      for (let row = 2; row \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnmatchingTagDetailsException.html":{"url":"classes/UnmatchingTagDetailsException.html","title":"class - UnmatchingTagDetailsException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnmatchingTagDetailsException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/unmatchingTagDetailsValidationException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/unmatchingTagDetailsValidationException.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnmatchingTagDetailsException extends HttpException {\n  constructor(message: string) {\n    super(message, HttpStatus.NOT_FOUND);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTagDto.html":{"url":"classes/UpdateTagDto.html","title":"class - UpdateTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/updateTag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conditions\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                type\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagConditions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiPropertyOptional({description: 'tag conditions', type: Array, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:119\n                        \n                    \n\n            \n                \n                    conditions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@IsNotEmpty()@ApiProperty({description: 'name of tag', type: String, required: true, example: 'revenue'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:29\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resource', type: String, required: false, example: 'bank'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:75\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceId', type: String, required: false, example: 'T001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:90\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceType', type: String, required: false, example: 'GST'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:105\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@IsNotEmpty()@ApiProperty({description: 'type of tag', type: String, required: true, example: 'category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:45\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsUUID()@ApiProperty({description: 'identifier of tag updator', type: UUID, required: true, example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:60\n                        \n                    \n\n            \n                \n                    updatedBy\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport {\n  IsDefined,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUUID,\n} from 'class-validator';\nimport { CreateTagDto } from './createTag.dto';\nimport { TagConditions } from './tagConditions.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { UUID } from 'typeorm/driver/mongodb/bson.typings';\n\nexport class UpdateTagDto extends PartialType(CreateTagDto) {\n  /**\n   * name\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsDefined()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'name of tag',\n    type: String,\n    required: true,\n    example: 'revenue',\n  })\n  name: string;\n\n  /**\n   * type\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsDefined()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'type of tag',\n    type: String,\n    required: true,\n    example: 'category',\n  })\n  type: string;\n\n  /**\n   * updatedBy\n   * @type {UUID}\n   * @memberof UpdateTagDto\n   */\n  @IsDefined()\n  @IsUUID()\n  @ApiProperty({\n    description: 'identifier of tag updator',\n    type: UUID,\n    required: true,\n    example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9',\n  })\n  updatedBy: string;\n\n  /**\n   * resource\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resource',\n    type: String,\n    required: false,\n    example: 'bank',\n  })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceId',\n    type: String,\n    required: false,\n    example: 'T001',\n  })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceType',\n    type: String,\n    required: false,\n    example: 'GST',\n  })\n  resourceType?: string;\n\n  /**\n   * conditions\n   * @type {TagConditions[]}\n   * @memberof UpdateTagDto\n   */\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'tag conditions',\n    type: Array,\n    isArray: true,\n    required: false,\n  })\n  conditions?: TagConditions[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedByDto.html":{"url":"classes/UpdatedByDto.html","title":"class - UpdatedByDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedByDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/updatedBy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@ApiProperty({description: 'identifier of tag updator', type: UUID, required: true, example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/updatedBy.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsString } from 'class-validator';\nimport { UUID } from 'typeorm/driver/mongodb/bson.typings';\n\nexport class UpdatedByDto {\n  @IsDefined()\n  @IsString()\n  @ApiProperty({\n    description: 'identifier of tag updator',\n    type: UUID,\n    required: true,\n    example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9',\n  })\n  updatedBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/1683734889829-migrations.ts\n            \n            class\n            Migrations1683734889829\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/constants/strings/index.ts\n            \n            variable\n            INTERNAL_API_SECURITY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/strings/index.ts\n            \n            variable\n            INTERNAL_AUTH0_API_SECURITY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/dto/createdBy.dto.ts\n            \n            class\n            CreatedByDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/dto/updatedBy.dto.ts\n            \n            class\n            UpdatedByDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/cli-rdbms.ts\n            \n            variable\n            dataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            interface\n            IErrorObject\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            devFormat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            fmt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            formatError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            formatMessage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            logger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            prodFormat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            replaceError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            replacer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/rdbms.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/rdbms.ts\n            \n            variable\n            getRDBMSConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/rdbms.ts\n            \n            variable\n            rdbmsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/rdbms.ts\n            \n            variable\n            SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/csvFileValidationError.ts\n            \n            class\n            CsvFileValidationError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/noTagFoundException.exception.ts\n            \n            class\n            NoTagFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/resourceValidationException.exception.ts\n            \n            class\n            ResourceValidationException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/tagConditionsValidationException.exception.ts\n            \n            class\n            TagConditionsValidationException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/unmatchingTagDetailsValidationException.exception.ts\n            \n            class\n            UnmatchingTagDetailsException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1683734889829-migrations.ts\n            \n            class\n            Migrations1683734889829\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/health/__tests__/health.controller.requests.ts\n            \n            variable\n            endpoint\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/health/__tests__/health.controller.requests.ts\n            \n            variable\n            getServerHealth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/__tests__/tag.controller.request.ts\n            \n            variable\n            deleteTenantByTenantCode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/__tests__/tag.controller.request.ts\n            \n            variable\n            endpoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/__tests__/tag.controller.request.ts\n            \n            variable\n            postTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/__tests__/tag.controller.request.ts\n            \n            variable\n            putTenant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/createTag.dto.ts\n            \n            class\n            CreateTagDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/getTag.dto.ts\n            \n            class\n            GetTagDto\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/responseTag.dto.ts\n            \n            class\n            ResponseTagDto\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/tagConditions.dto.ts\n            \n            class\n            TagConditions\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/updateTag.dto.ts\n            \n            class\n            UpdateTagDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/validations/resourceValidation.validation.ts\n            \n            variable\n            resourceValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/tag.controller.ts\n            \n            controller\n            TagController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/modules/tags/tag.entity.ts\n            \n            entity\n            Tag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/tag.respository.ts\n            \n            class\n            TagRepository\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/modules/tags/tag.service.ts\n            \n            injectable\n            TagService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/shared/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shared/shared.module.ts\n            \n            variable\n            providers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/createCoreFieldsString.ts\n            \n            variable\n            createCoreFieldsString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/createSlug.ts\n            \n            variable\n            createSlug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/csvHelpers.ts\n            \n            variable\n            csvFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger-doc-generator.ts\n            \n            variable\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            function\n            setupSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            variable\n            INTERNAL_API_SECURITY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            variable\n            INTERNAL_AUTH0_API_SECURITY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/validate-env.ts\n            \n            variable\n            validateEnv\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/common : ^9.4.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.4.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.4.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/terminus : ^9.2.2\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            axios : ^1.4.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cross-env : ^7.0.3\n        \n            cross-var : ^1.1.0\n        \n            csv-parse : ^5.3.10\n        \n            dotenv : ^16.0.3\n        \n            envalid : ^7.3.1\n        \n            fs : ^0.0.1-security\n        \n            install : ^0.13.0\n        \n            morgan : ^1.10.0\n        \n            multer : ^1.4.5-lts.1\n        \n            nodemon : ^2.0.22\n        \n            npm : ^9.6.6\n        \n            papaparse : ^5.4.1\n        \n            path : ^0.12.7\n        \n            pg : ^8.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.15\n        \n            typeorm-naming-strategies : ^4.1.0\n        \n            url : ^0.11.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    setupSwagger\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TagModule\n\n\n\ncluster_TagModule_providers\n\n\n\n\nTagModule\n\nTagModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nSharedModule\n\nSharedModule\n\nConfigService  -->\n\nSharedModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\nTagService\n\nTagService\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../rdbms.ts)\n                        \n                        \n                            createCoreFieldsString   (src/.../createCoreFieldsString.ts)\n                        \n                        \n                            createSlug   (src/.../createSlug.ts)\n                        \n                        \n                            csvFileFilter   (src/.../csvHelpers.ts)\n                        \n                        \n                            dataSource   (src/.../cli-rdbms.ts)\n                        \n                        \n                            deleteTenantByTenantCode   (src/.../tag.controller.request.ts)\n                        \n                        \n                            devFormat   (src/.../logger.ts)\n                        \n                        \n                            endpoint   (src/.../health.controller.requests.ts)\n                        \n                        \n                            endpoint   (src/.../tag.controller.request.ts)\n                        \n                        \n                            fmt   (src/.../logger.ts)\n                        \n                        \n                            formatError   (src/.../logger.ts)\n                        \n                        \n                            formatMessage   (src/.../logger.ts)\n                        \n                        \n                            getRDBMSConfig   (src/.../rdbms.ts)\n                        \n                        \n                            getServerHealth   (src/.../health.controller.requests.ts)\n                        \n                        \n                            INTERNAL_API_SECURITY   (src/.../swagger.ts)\n                        \n                        \n                            INTERNAL_API_SECURITY   (src/.../index.ts)\n                        \n                        \n                            INTERNAL_AUTH0_API_SECURITY   (src/.../swagger.ts)\n                        \n                        \n                            INTERNAL_AUTH0_API_SECURITY   (src/.../index.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            main   (src/.../swagger-doc-generator.ts)\n                        \n                        \n                            postTag   (src/.../tag.controller.request.ts)\n                        \n                        \n                            prodFormat   (src/.../logger.ts)\n                        \n                        \n                            providers   (src/.../shared.module.ts)\n                        \n                        \n                            putTenant   (src/.../tag.controller.request.ts)\n                        \n                        \n                            rdbmsConfig   (src/.../rdbms.ts)\n                        \n                        \n                            replaceError   (src/.../logger.ts)\n                        \n                        \n                            replacer   (src/.../logger.ts)\n                        \n                        \n                            resourceValidation   (src/.../resourceValidation.validation.ts)\n                        \n                        \n                            SCHEMA   (src/.../rdbms.ts)\n                        \n                        \n                            validateEnv   (src/.../validate-env.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/rdbms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  test: {\n    // hard-coding test database as klub_test_db to prevent misuse\n    database: 'tags',\n    entities: ['dist/modules/**/*.entity{.ts,.js}'],\n    extra: {\n      max: 5,\n      min: 2,\n      cli: {\n        migrationsDir: 'src/migrations',\n      },\n    }, // connection pool\n    host: 'localhost',\n    password: '',\n    port: 5432,\n    synchronize: false,\n    logging: false,\n    type: 'postgres',\n    username: 'admin',\n    namingStrategy: new SnakeNamingStrategy(),\n    migrations: ['dist/migrations/*{.ts,.js}'],\n    schema: SCHEMA,\n    migrationsRun: true,\n  },\n  development: {\n    database: process.env.POSTGRES_DB,\n    entities: ['src/modules/**/*.entity{.ts,.js}'],\n    extra: {\n      max: 5,\n      min: 2,\n      cli: {\n        migrationsDir: 'src/migrations',\n      },\n\n      //Cannot find name 'process'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.\n    }, // connection pool\n    host: process.env.POSTGRES_HOST,\n    password: process.env.POSTGRES_PASSWORD,\n    port: +process.env.POSTGRES_PORT!,\n    synchronize: false,\n    logging: true,\n    type: 'postgres',\n    username: process.env.POSTGRES_USER,\n    namingStrategy: new SnakeNamingStrategy(),\n    migrations: ['dist/migrations/*{.ts,.js}'],\n    schema: SCHEMA,\n  },\n  production: {\n    database: process.env.POSTGRES_DB,\n    entities: ['dist/modules/**/*.entity{.ts,.js}'],\n    extra: {\n      max: 5,\n      min: 2,\n      cli: {\n        migrationsDir: 'src/migrations',\n      },\n    }, // connection pool\n    host: process.env.POSTGRES_HOST,\n    password: process.env.POSTGRES_PASSWORD,\n    port: +process.env.POSTGRES_PORT!,\n    synchronize: false,\n    logging: true,\n    type: 'postgres',\n    username: process.env.POSTGRES_USER,\n    namingStrategy: new SnakeNamingStrategy(),\n    migrations: ['dist/migrations/*{.ts,.js}'],\n    schema: SCHEMA,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRDBMSConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: string | undefined): PostgresConnectionOptions => {\n  if (!env) {\n    // Setting default database to development\n    env = 'development';\n    logger.info(`Getting dbms config for ${env} environment`);\n\n    return config.development;\n  } else {\n    const configuration: PostgresConnectionOptions = config[env];\n    logger.info(\n      `Connecting to database:${configuration.database} ********* schema:${configuration.schema}`,\n    );\n\n    return configuration;\n  }\n}\n                    \n                \n\n            \n                \n                    getRDBMSConfig\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rdbmsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostgresConnectionOptions\n\n                    \n                \n                \n                    \n                        Default value : getRDBMSConfig(\n  process.env.NODE_ENV,\n)\n                    \n                \n\n            \n                \n                    rdbmsConfig\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tag'\n                    \n                \n\n\n        \n    \n\n    src/utils/createCoreFieldsString.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCoreFieldsString\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (dto: any) => {\n  const name: string = dto.name != null ? dto.name + '-' : '';\n  const type: string = dto.type != null ? dto.type + '-' : '';\n  const resourceId: string = dto.resourceId != null ? dto.resourceId + '-' : '';\n  const resourceType: string =\n    dto.resourceType != null ? dto.resourceType + '-' : '';\n  const resource: string = dto.resource != null ? dto.resource : '';\n  return name + type + resource + resourceType + resourceId;\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/createSlug.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createSlug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (dto: any) => {\n  const name: string = dto.name != null ? dto.name + '-' : '';\n  const type: string = dto.type != null ? dto.type + '-' : '';\n  const resourceId: string = dto.resourceId != null ? dto.resourceId + '-' : '';\n  const resourceType: string =\n    dto.resourceType != null ? dto.resourceType + '-' : '';\n  const resource: string = dto.resource != null ? dto.resource + '-' : '';\n  return name + type + resource + resourceType + resourceId + uuidv4();\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/csvHelpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        csvFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  if (!file.originalname.match(/\\.(csv)$/)) {\n    return callback(\n      new CsvFileValidationError('Only CSV files are allowed.'),\n      false,\n    );\n  }\n  callback(null, true);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/cli-rdbms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(rdbmsConfig)\n                    \n                \n\n\n        \n    \n\n    src/modules/tags/dto/__tests__/tag.controller.request.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deleteTenantByTenantCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  tenantCode: string,\n  app: INestApplication,\n) =>\n  request(app.getHttpServer())\n    .delete(`${endpoint}/${tenantCode}`)\n    .set('Accept', 'application/json')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/tags-svc/tags'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postTag\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (data: any, app: INestApplication) =>\n  request(app.getHttpServer())\n    .post(`${endpoint}`)\n    .send(data)\n    .set('Accept', 'application/json')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putTenant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  tenantCode: string,\n  data: any,\n  app: INestApplication,\n) =>\n  request(app.getHttpServer())\n    .put(`${endpoint}/${tenantCode}`)\n    .send(data)\n    .set('Accept', 'application/json')\n                    \n                \n\n\n        \n    \n\n    src/config/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        devFormat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => format.combine(format.colorize(), format.printf(fmt))\n                    \n                \n\n            \n                \n                    devFormat\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fmt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (info: IErrorObject) =>\n  info instanceof Error ? formatError(info) : formatMessage(info)\n                    \n                \n\n            \n                \n                    fmt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (info: Record) =>\n  `${info.level} ${info.message}\\n\\n${info.stack}\\n`\n                    \n                \n\n            \n                \n                    formatError\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (info: Record) =>\n  `${info.level} ${info.message}`\n                    \n                \n\n            \n                \n                    formatMessage\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLogger({\n  exitOnError: false,\n  format: process.env.NODE_ENV === 'production' ? prodFormat() : devFormat(),\n  level: 'debug',\n  transports: [\n    new transports.Console(),\n    // new winston.transports.File({ filename: \"errors.log\" }),\n  ],\n})\n                    \n                \n\n            \n                \n                    logger\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prodFormat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => format.combine(format.json({ replacer }))\n                    \n                \n\n            \n                \n                    prodFormat\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({ label, level, message, stack }: any) => ({\n  label,\n  level,\n  message,\n  stack,\n})\n                    \n                \n\n            \n                \n                    replaceError\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replacer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (key: string, value: any) =>\n  value instanceof Error ? replaceError(value) : value\n                    \n                \n\n            \n                \n                    replacer\n\n                \n            \n\n        \n    \n\n    src/modules/health/__tests__/health.controller.requests.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'health'\n                    \n                \n\n            \n                \n                    endpoint\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServerHealth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  app: INestApplication,\n): Promise =>\n  request(app.getHttpServer())\n    .get(`/${endpoint}`)\n    .set('Accept', 'application/json')\n                    \n                \n\n            \n                \n                    getServerHealth\n\n                \n            \n\n        \n    \n\n    src/utils/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INTERNAL_API_SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal API'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INTERNAL_AUTH0_API_SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal Auth0 API'\n                    \n                \n\n\n        \n    \n\n    src/common/constants/strings/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INTERNAL_API_SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal API'\n                    \n                \n\n            \n                \n                    INTERNAL_API_SECURITY\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INTERNAL_AUTH0_API_SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal Auth0 API'\n                    \n                \n\n            \n                \n                    INTERNAL_AUTH0_API_SECURITY\n\n                \n            \n\n        \n    \n\n    src/utils/swagger-doc-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(\n    AppModule,\n    new ExpressAdapter(),\n    {\n      cors: true,\n      logger: ['error', 'warn', 'log'],\n    },\n  );\n  setupSwagger(app);\n  await app.close();\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ConfigService]\n                    \n                \n\n            \n                \n                    providers\n\n                \n            \n\n        \n    \n\n    src/modules/tags/dto/validations/resourceValidation.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resourceValidation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  resourceId: string,\n  resourceType: string,\n  resource: string,\n) => {\n  if (\n    (resourceId == null && resourceType == null && resource == null) ||\n    (resourceId != null && resourceType != null && resource != null)\n  ) {\n    return;\n  }\n\n  throw new ResourceValidationException(\n    'resourceId, resourceType, resource are inconsistent',\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/validate-env.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  cleanEnv(process.env, {\n    PORT: port(),\n    // AUTH0_DOMAIN: str(),\n    // AUTH0_AUDIENCE: str(),\n    POSTGRES_DB: str(),\n    POSTGRES_HOST: str(),\n    POSTGRES_PASSWORD: str(),\n    POSTGRES_PORT: port(),\n    POSTGRES_USER: str(),\n    // AUDIT_SQS_URL: str(),\n    // AUTH0_RULE_KEY: str(),\n    // AWS_REGION: str(),\n    // INTERNAL_API_KEY: str(),\n  });\n}\n                    \n                \n\n            \n                \n                    validateEnv\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
