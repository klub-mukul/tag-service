var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.556,1,2.341]],["body/controllers/AppController.html",[0,2.655,1,3.993,2,2.419,3,0.364,4,0.364,5,0.31,6,3.815,7,0.813,8,2.655,9,5.098,10,1.585,11,0.031,12,0.603,13,4.562,14,2.209,15,0.805,16,0.505,17,1.148,18,3.116,19,3.815,20,0.421,21,0.218,22,3.815,23,2.419,24,2.026,25,4.562,26,0.026,27,0.026]],["title/modules/AppModule.html",[28,1.556,29,1.876]],["body/modules/AppModule.html",[2,2.614,3,0.307,4,0.307,5,0.262,11,0.032,16,0.582,17,0.968,18,3.219,19,3.217,20,0.355,21,0.183,26,0.023,27,0.023,28,2.388,29,3.649,30,1.863,31,2.614,32,3.217,33,3.217,34,3.217,35,3.544,36,3.195,37,2.492,38,2.492,39,3.846,40,2.878,41,3.526,42,3.965,43,3.846,44,2.802,45,2.492,46,4.931,47,2.802,48,3.217,49,2.039,50,3.846,51,3.846,52,2.78,53,3.846,54,2.878,55,3.846,56,3.846,57,4.931,58,4.931,59,3.217,60,3.217,61,3.846,62,3.217,63,3.846]],["title/injectables/AppService.html",[18,1.704,64,1.556]],["body/injectables/AppService.html",[3,0.375,4,0.375,5,0.319,7,0.837,8,2.702,9,5.148,11,0.031,12,0.621,14,2.275,15,0.819,16,0.433,17,1.182,18,2.957,20,0.433,21,0.224,24,2.087,26,0.026,27,0.026,64,2.702,65,3.044,66,3.928,67,4.697,68,4.697,69,4.697]],["title/injectables/ConfigService.html",[52,1.556,64,1.556]],["body/injectables/ConfigService.html",[3,0.194,4,0.194,5,0.165,7,0.433,8,1.74,11,0.032,12,0.721,14,2.551,15,0.899,16,0.485,17,0.612,20,0.331,21,0.171,23,2.501,24,2.58,26,0.017,27,0.017,28,1.178,30,1.178,49,1.29,52,2.942,64,1.74,65,1.577,70,2.035,71,0.518,72,3.074,73,4.717,74,3.593,75,5.032,76,5.032,77,5.032,78,5.032,79,1.748,80,2.433,81,1.905,82,1.905,83,3.593,84,2.433,85,1.152,86,0.765,87,0.572,88,0.832,89,3.057,90,3.593,91,2.433,92,4.717,93,2.433,94,2.433,95,2.433,96,2.433,97,3.074,98,2.433,99,2.433,100,2.433,101,2.433,102,4.717,103,3.005,104,1.42,105,2.035,106,3.112,107,2.433,108,2.617,109,1.772,110,2.617,111,1.892,112,2.433,113,2.035,114,2.433,115,4.272,116,1.772,117,2.433,118,2.433,119,2.433,120,2.888,121,2.433,122,2.433,123,2.433,124,2.433,125,2.433,126,2.617,127,3.593,128,1.772,129,1.74,130,2.433,131,2.433,132,3.057,133,3.593,134,2.433,135,4.209,136,2.433,137,2.433,138,2.433,139,3.593,140,3.593,141,1.063,142,2.433,143,2.433,144,2.433,145,2.433,146,2.097,147,2.433,148,2.433,149,0.994,150,2.433,151,2.433,152,2.433,153,2.433,154,3.593,155,2.433,156,2.035,157,2.433,158,1.772,159,2.433,160,2.433,161,2.433,162,1.772]],["title/classes/CreateTagDto.html",[21,0.153,163,1.704]],["body/classes/CreateTagDto.html",[3,0.192,4,0.192,5,0.163,7,0.428,10,1.885,11,0.032,12,0.718,15,0.943,16,0.432,20,0.221,21,0.17,26,0.017,27,0.017,71,1.186,86,1.278,87,0.685,88,1.291,111,1.885,141,1.649,149,2.277,163,3.017,164,0.605,165,2.009,166,1.141,167,2.41,168,2.922,169,2.41,170,2.628,171,2.628,172,2.083,173,1.75,174,1.291,175,2.307,176,2.307,177,2.693,178,2.936,179,1.402,180,2.403,181,2.009,182,2.078,183,2.977,184,2.486,185,2.307,186,2.307,187,2.307,188,2.307,189,2.307,190,2.403,191,2.403,192,2.307,193,2.403,194,2.748,195,2.307,196,2.403,197,2.307,198,2.403,199,2.307,200,2.403,201,2.009,202,2.307,203,2.403,204,2.271,205,3.244,206,0.905,207,3.038,208,3.546,209,3.244,210,2.78,211,2.977,212,1.067,213,1.557,214,1.75,215,1.75,216,1.75,217,2.593,218,1.75,219,1.75,220,1.75,221,1.75,222,1.75,223,1.75,224,1.75,225,1.75]],["title/classes/CreatedByDto.html",[21,0.153,226,2.341]],["body/classes/CreatedByDto.html",[3,0.339,4,0.339,5,0.289,7,0.757,10,1.476,11,0.031,12,0.562,15,0.771,16,0.525,20,0.392,21,0.25,26,0.025,27,0.025,71,0.904,87,0.598,141,1.554,164,1.07,166,1.683,168,3.325,174,1.216,177,2.332,178,2.543,182,3.065,183,4.391,184,3.02,185,3.402,186,3.402,187,3.402,188,3.402,189,3.402,204,2.543,206,1.6,207,3.402,210,2.783,212,1.888,213,2.754,226,3.825,227,3.555,228,3.555,229,4.25]],["title/classes/CsvFileValidationError.html",[21,0.153,230,2.341]],["body/classes/CsvFileValidationError.html",[3,0.371,4,0.371,5,0.316,11,0.031,12,0.615,15,0.87,16,0.428,17,1.17,20,0.428,21,0.222,26,0.026,27,0.026,79,1.614,85,1.49,86,0.989,87,0.488,88,1.077,164,1.17,230,4.038,231,3.887,232,2.684,233,3.457,234,3.235,235,4.647,236,2.064,237,2.251,238,3.011,239,3.011]],["title/classes/GetTagDto.html",[21,0.153,240,1.876]],["body/classes/GetTagDto.html",[3,0.235,4,0.235,5,0.2,7,0.523,10,1.882,11,0.032,12,0.717,15,0.957,16,0.379,20,0.271,21,0.196,26,0.02,27,0.02,71,1.153,86,1.325,87,0.687,88,1.403,111,1.882,141,1.523,149,2.294,164,0.739,166,1.319,169,2.561,170,2.792,171,2.792,174,1.192,177,2.69,178,2.933,192,2.666,194,3.077,195,2.666,197,2.666,199,2.666,202,2.666,204,2.3,205,3.334,206,1.106,209,3.638,210,2.977,212,1.305,240,3.365,241,2.457,242,3.441,243,2.938,244,2.938,245,2.938,246,2.938,247,2.938]],["title/controllers/HealthController.html",[0,1.556,41,2.082]],["body/controllers/HealthController.html",[0,1.819,2,1.991,3,0.3,4,0.3,5,0.255,7,0.669,8,2.351,10,1.304,11,0.032,12,0.497,14,1.819,16,0.524,17,0.945,20,0.448,21,0.232,23,1.991,24,2.157,26,0.023,27,0.023,41,4.074,47,3.537,71,0.799,72,3.14,79,1.686,81,1.991,82,1.991,87,0.394,111,1.686,129,2.351,206,1.414,248,3.141,249,3.141,250,5.203,251,3.14,252,3.755,253,3.755,254,3.14,255,3.755,256,3.755,257,3.141,258,3.755,259,5.688,260,5.38,261,5.89,262,3.755,263,3.755,264,3.537,265,3.755,266,3.755,267,4.855]],["title/interfaces/IErrorObject.html",[268,2.082,269,2.082]],["body/interfaces/IErrorObject.html",[3,0.469,4,0.234,5,0.199,7,0.522,11,0.032,12,0.387,15,0.907,16,0.27,20,0.27,24,1.824,26,0.019,27,0.019,71,1.194,87,0.568,89,3.33,104,2.396,111,1.426,120,3.116,129,2.716,149,1.196,166,1.316,236,2.653,268,2.66,269,3.871,270,2.928,271,2.133,272,5.061,273,2.928,274,2.928,275,3.433,276,3.433,277,3.433,278,2.449,279,2.991,280,3.965,281,3.965,282,3.454,283,3.743,284,3.433,285,2.991,286,2.449,287,3.454,288,2.449,289,2.991,290,4.297,291,3.433,292,2.449,293,2.991,294,2.449,295,2.991,296,2.449,297,2.449,298,3.454,299,2.449,300,2.449,301,2.449,302,2.449,303,2.133,304,2.449,305,2.396,306,2.449,307,2.449,308,2.449,309,2.449]],["title/classes/Migrations1683551307003.html",[21,0.153,310,2.341]],["body/classes/Migrations1683551307003.html",[3,0.279,4,0.279,5,0.237,7,0.622,8,2.242,11,0.031,12,0.687,14,2.242,15,0.513,16,0.322,20,0.322,21,0.167,26,0.022,27,0.022,72,3.452,85,1.484,86,1.258,87,0.581,88,1.072,89,2.263,97,2.038,141,1.033,164,0.879,166,1.484,167,1.551,169,1.551,184,1.851,251,3.452,254,3.228,283,2.544,310,4.029,311,4.625,312,2.92,313,4.629,314,5.193,315,4.629,316,4.629,317,4.308,318,3.492,319,4.629,320,6.2,321,3.492,322,4.629,323,3.492,324,2.263,325,3.372,326,3.492,327,2.544,328,3.871,329,4.629,330,2.454,331,4.517,332,3.492,333,4.812,334,5.193,335,5.193,336,3.492,337,3.492,338,2.92,339,3.492,340,2.263,341,2.92,342,4.343,343,4.629,344,3.492,345,2.92,346,3.492,347,3.492,348,3.492,349,3.492,350,3.492,351,3.492]],["title/classes/NoTagFoundException.html",[21,0.153,352,1.876]],["body/classes/NoTagFoundException.html",[3,0.365,4,0.365,5,0.311,11,0.031,12,0.605,15,0.864,16,0.422,17,1.151,20,0.422,21,0.218,26,0.026,27,0.026,79,1.589,85,1.467,86,0.973,87,0.48,88,1.06,164,1.151,174,1.06,232,2.659,233,3.434,234,3.205,236,2.439,237,2.215,330,2.425,352,3.205,353,3.825,354,4.574,355,4.574,356,3.332,357,3.825]],["title/classes/ResourceValidationException.html",[21,0.153,358,2.082]],["body/classes/ResourceValidationException.html",[3,0.371,4,0.371,5,0.316,11,0.031,12,0.615,15,0.87,16,0.428,17,1.17,20,0.428,21,0.222,26,0.026,27,0.026,79,1.614,85,1.49,86,0.989,87,0.488,88,1.077,164,1.17,232,2.684,233,3.457,234,3.235,236,2.064,237,2.251,238,3.011,239,3.011,358,3.592,359,3.887,360,4.647]],["title/classes/ResponseTagDto.html",[21,0.153,361,1.876]],["body/classes/ResponseTagDto.html",[3,0.154,4,0.154,5,0.131,7,0.344,10,1.858,11,0.032,12,0.724,15,0.94,16,0.386,20,0.178,21,0.144,26,0.014,27,0.014,71,1.164,79,1.289,81,1.599,82,1.599,85,0.62,86,1.236,87,0.682,88,1.402,97,2.653,111,1.9,129,0.936,141,1.619,149,2.313,164,0.487,166,0.967,167,2.235,169,2.235,170,2.437,171,2.437,172,1.862,173,1.408,174,1.425,175,1.955,176,1.955,177,2.671,178,2.912,179,1.128,192,2.716,194,3.261,195,1.955,197,1.955,199,2.716,202,2.716,204,1.461,205,3.466,206,0.728,209,3.545,210,2.836,212,0.859,214,1.408,215,1.408,216,1.408,217,2.198,218,1.408,219,1.408,220,1.408,221,1.408,222,1.408,223,1.408,224,1.408,225,1.408,242,1.617,330,2.668,340,3.261,361,3.39,362,1.617,363,3.312,364,3.017,365,3.017,366,1.933,367,3.017,368,3.017,369,3.017,370,3.017,371,3.017,372,1.933,373,3.017,374,1.933,375,1.933,376,1.933,377,1.933,378,1.933,379,3.017,380,3.017,381,3.017,382,3.017,383,3.017,384,3.017,385,3.017,386,1.933,387,1.253,388,1.933,389,1.933,390,1.933,391,1.933,392,1.933,393,1.933,394,1.933,395,1.933,396,1.933,397,1.933,398,1.933,399,1.933,400,1.933,401,1.933,402,1.933,403,1.933,404,1.933,405,1.933]],["title/modules/SharedModule.html",[28,1.556,54,1.876]],["body/modules/SharedModule.html",[3,0.318,4,0.318,5,0.27,11,0.032,16,0.536,17,1.001,20,0.464,21,0.24,26,0.024,27,0.024,28,2.44,30,1.927,31,2.671,36,3.264,37,2.578,38,2.578,40,3.5,42,3.67,52,3.136,54,3.759,60,3.327,62,3.327,71,0.847,87,0.418,120,2.109,406,3.327,407,3.327,408,3.327,409,2.898,410,5.038,411,5.528,412,3.327,413,5.038,414,5.038,415,3.327,416,3.978,417,3.978]],["title/entities/Tag.html",[146,1.876,174,0.744]],["body/entities/Tag.html",[3,0.172,4,0.172,5,0.146,7,0.383,10,2.062,11,0.032,12,0.785,15,0.927,16,0.366,20,0.198,21,0.156,26,0.016,27,0.016,86,1.175,87,0.684,88,1.375,97,2.315,111,2.062,132,1.393,141,1.667,146,1.255,149,2.372,166,1.05,167,2.12,168,2.786,169,2.12,170,2.312,171,2.312,172,1.97,174,1.399,179,1.255,184,1.736,212,0.955,317,2.89,324,1.393,330,2.53,333,4.709,338,2.739,340,3.093,341,2.739,342,3.709,345,2.739,363,3.477,418,1.799,419,3.967,420,4.773,421,4.773,422,2.57,423,2.151,424,6.082,425,2.151,426,5.521,427,2.151,428,2.151,429,3.275,430,4.773,431,2.151,432,3.967,433,2.151,434,3.275,435,2.151,436,2.151,437,2.151,438,2.151,439,3.967,440,2.151,441,2.151,442,2.151,443,2.151,444,2.151,445,2.151,446,2.151,447,2.151,448,3.275,449,3.275,450,5.725,451,3.275,452,2.151,453,3.275,454,1.799,455,2.151]],["title/classes/TagConditions.html",[21,0.153,172,1.427]],["body/classes/TagConditions.html",[3,0.275,4,0.275,5,0.234,7,0.613,10,1.791,11,0.032,12,0.682,15,0.937,16,0.317,20,0.317,21,0.164,26,0.022,27,0.022,71,1.219,87,0.666,111,1.791,141,1.807,164,0.867,166,1.471,167,2.616,172,2.544,174,1.365,175,2.972,176,2.972,177,2.616,178,2.853,179,2.01,204,2.663,206,1.296,215,4.38,216,4.38,217,3.341,218,2.508,219,2.508,220,2.508,221,2.508,222,2.508,223,2.508,224,4.38,225,3.341,456,2.88,457,5.157,458,5.89,459,3.443,460,3.443,461,3.443]],["title/classes/TagConditionsValidationException.html",[21,0.153,462,2.082]],["body/classes/TagConditionsValidationException.html",[3,0.371,4,0.371,5,0.316,11,0.031,12,0.615,15,0.87,16,0.428,17,1.17,20,0.428,21,0.222,26,0.026,27,0.026,79,1.614,85,1.49,86,0.989,87,0.488,88,1.077,164,1.17,232,2.684,233,3.457,234,3.235,236,2.064,237,2.251,238,3.011,239,3.011,462,3.592,463,3.887,464,4.647]],["title/controllers/TagController.html",[0,1.556,465,2.082]],["body/controllers/TagController.html",[0,1.131,2,0.746,3,0.112,4,0.112,5,0.263,7,0.251,8,1.131,10,1.448,11,0.032,12,0.552,14,2.019,15,0.857,16,0.509,17,0.354,20,0.215,21,0.111,22,1.177,23,0.746,24,2.305,26,0.011,27,0.011,44,1.025,45,0.912,59,1.953,71,1.307,72,2.434,79,0.489,81,0.746,82,0.746,85,1.337,86,1.021,87,0.662,88,0.966,104,0.821,105,1.177,111,1.534,120,1.587,129,2.396,141,0.886,162,1.025,163,2.543,167,1.037,168,2.256,174,1.321,177,1.852,206,0.53,236,1.037,237,0.681,240,3.028,249,1.177,251,2.434,254,3.028,257,1.177,285,1.701,305,1.363,327,3.698,330,2.892,352,2.256,356,1.701,357,1.177,361,1.747,465,3.426,466,1.177,467,3.218,468,3.487,469,3.866,470,3.233,471,3.694,472,2.994,473,1.177,474,1.407,475,4.169,476,1.407,477,4.623,478,3.866,479,3.866,480,1.407,481,2.335,482,5.188,483,5.188,484,5.076,485,1.407,486,1.177,487,2.862,488,1.407,489,2.994,490,2.335,491,1.953,492,3.485,493,1.953,494,2.335,495,4.947,496,4.623,497,1.407,498,4.623,499,3.485,500,4.947,501,1.407,502,1.407,503,1.407,504,2.335,505,1.407,506,1.407,507,1.407,508,1.177,509,1.407,510,1.407,511,1.407,512,1.177,513,2.887,514,1.407,515,2.994,516,1.953,517,1.407,518,1.407,519,1.407,520,1.407,521,1.407,522,3.485,523,2.335,524,1.407,525,2.181,526,1.407,527,2.335,528,1.407,529,1.407,530,1.407,531,2.335,532,2.994,533,1.407,534,1.407,535,3.866,536,2.335,537,2.335,538,3.866,539,1.953,540,1.407,541,4.417,542,2.994,543,2.994,544,2.994,545,3.866,546,4.417,547,2.994,548,2.335,549,1.953,550,2.335,551,1.177,552,1.407,553,1.701,554,1.407,555,1.177,556,1.177,557,1.177,558,1.177,559,2.539,560,1.407,561,2.049,562,1.177,563,1.407,564,1.407,565,1.407,566,4.169,567,4.169,568,5.526,569,2.994,570,1.407,571,1.177,572,1.177,573,1.177,574,1.177,575,1.407,576,1.407,577,2.994,578,1.407,579,1.177,580,1.407,581,1.407,582,1.407,583,1.407,584,1.407,585,1.407,586,1.407,587,1.025,588,1.407,589,1.407,590,1.407,591,1.407,592,1.407,593,1.407,594,1.407,595,1.953,596,1.407,597,1.407,598,1.407,599,1.407,600,1.407,601,1.953,602,1.407,603,1.407,604,1.407,605,1.407,606,1.407,607,1.407,608,1.407,609,1.407,610,1.407,611,1.407,612,1.407,613,1.407]],["title/modules/TagModule.html",[28,1.556,35,1.876]],["body/modules/TagModule.html",[2,2.759,3,0.334,4,0.334,5,0.285,11,0.032,16,0.572,17,1.054,20,0.48,21,0.248,26,0.025,27,0.025,28,2.52,30,2.029,31,2.759,35,3.742,36,3.372,37,2.714,38,2.714,40,3.037,42,3.052,48,3.503,49,2.221,71,0.891,174,0.97,387,2.714,465,3.668,561,3.29,562,3.503,614,3.503,615,3.503,616,4.189,617,4.189,618,3.037,619,3.503,620,4.189]],["title/classes/TagRepository.html",[21,0.153,618,1.876]],["body/classes/TagRepository.html",[3,0.327,4,0.327,5,0.279,11,0.032,12,0.542,16,0.517,20,0.473,21,0.267,23,2.174,26,0.024,27,0.024,49,2.174,71,0.873,79,2.041,81,2.722,82,2.722,85,1.315,86,0.873,87,0.43,88,0.95,129,1.986,164,1.032,174,0.95,232,2.715,264,2.987,324,2.657,387,2.657,618,3.728,621,3.429,622,5.296,623,3.429,624,4.1,625,4.294,626,3.429,627,3.429,628,4.1,629,4.1,630,4.1,631,4.1]],["title/injectables/TagService.html",[64,1.556,561,1.704]],["body/injectables/TagService.html",[3,0.112,4,0.112,5,0.095,7,0.25,8,1.127,11,0.032,12,0.671,14,2.392,15,0.85,16,0.502,17,0.353,20,0.215,21,0.111,23,0.743,24,2.452,26,0.011,27,0.011,45,0.908,49,0.743,64,1.127,65,0.908,71,0.938,72,2.429,79,1.207,81,1.234,82,1.234,85,1.625,86,1.143,87,0.564,88,1.174,97,2.251,111,1.532,120,2.889,129,2.392,141,0.689,146,0.818,149,0.951,162,1.021,163,2.54,167,1.959,168,2.429,169,1.326,170,1.446,171,1.446,172,2.302,174,1.279,237,0.679,240,2.251,251,3.294,254,3.025,264,1.021,305,3.134,325,3.598,327,2.533,330,2.889,331,2.81,340,1.934,352,0.818,356,1.021,361,1.742,363,2.81,387,0.908,422,2.696,454,1.172,462,1.508,467,1.021,468,2.907,470,2.907,471,3.48,473,1.946,486,1.946,491,1.172,493,1.172,508,1.946,512,1.172,513,3.083,516,1.172,555,1.172,556,1.172,557,1.172,558,1.172,561,2.687,572,1.172,573,1.172,574,1.172,579,1.946,587,2.175,595,2.497,601,2.497,618,2.429,619,1.172,623,1.172,625,2.497,626,1.172,627,1.172,632,1.172,633,2.327,634,3.476,635,2.327,636,2.327,637,2.985,638,3.476,639,1.401,640,1.401,641,1.401,642,2.327,643,2.327,644,1.401,645,2.327,646,2.327,647,1.401,648,1.401,649,2.327,650,1.401,651,3.857,652,2.327,653,2.985,654,1.401,655,1.401,656,1.401,657,3.476,658,1.401,659,3.476,660,1.401,661,2.327,662,1.401,663,2.327,664,1.401,665,1.401,666,1.401,667,1.508,668,1.401,669,1.021,670,1.401,671,1.696,672,1.401,673,2.327,674,1.401,675,3.226,676,1.401,677,2.327,678,1.401,679,1.401,680,2.327,681,2.327,682,2.327,683,3.857,684,2.327,685,1.401,686,2.327,687,3.857,688,3.476,689,1.401,690,1.401,691,1.401,692,2.985,693,1.401,694,1.401,695,1.401,696,2.327,697,1.401,698,1.172,699,1.401,700,1.401,701,3.48,702,2.985,703,1.401,704,1.172,705,1.401,706,1.401,707,1.401,708,1.401,709,1.401,710,1.401,711,1.401,712,1.401,713,1.401,714,1.401,715,1.401,716,1.401,717,1.401,718,1.401,719,1.401,720,2.327,721,1.401,722,1.401,723,1.401,724,1.401,725,1.172,726,4.161,727,2.327,728,1.401,729,2.985,730,2.985,731,1.401,732,3.476,733,2.327,734,2.985,735,1.401,736,1.401,737,1.401,738,1.401,739,1.401,740,1.401,741,1.401,742,1.401,743,1.401,744,1.401,745,1.172,746,1.401,747,1.401,748,1.401,749,1.401,750,2.327,751,1.172,752,2.327,753,1.172]],["title/classes/UnmatchingTagDetailsValidationException.html",[21,0.153,667,2.082]],["body/classes/UnmatchingTagDetailsValidationException.html",[3,0.371,4,0.371,5,0.316,11,0.031,12,0.615,15,0.87,16,0.428,17,1.17,20,0.428,21,0.222,26,0.026,27,0.026,79,1.614,85,1.49,86,0.989,87,0.488,88,1.077,164,1.17,232,2.684,233,3.457,234,3.235,236,2.064,237,2.251,238,3.011,239,3.011,667,3.592,754,3.887,755,4.647]],["title/classes/UpdateTagDto.html",[21,0.153,513,1.876]],["body/classes/UpdateTagDto.html",[3,0.194,4,0.194,5,0.165,7,0.433,10,1.892,11,0.032,12,0.721,15,0.945,16,0.485,20,0.224,21,0.171,26,0.017,27,0.017,71,1.159,86,1.282,87,0.685,88,1.296,111,1.892,141,1.655,149,2.285,163,1.29,164,0.612,166,1.152,167,2.42,169,2.42,170,2.638,171,2.638,172,2.095,173,1.772,174,1.296,175,2.328,176,2.328,177,2.699,178,2.887,181,2.035,182,2.097,184,2.501,185,2.328,186,2.328,187,2.328,188,2.328,189,2.328,192,2.328,194,2.768,195,2.328,197,2.328,199,2.328,201,3.005,202,2.328,204,2.285,205,3.261,206,0.916,207,3.057,208,3.572,209,3.261,210,2.792,211,3.005,212,1.081,213,1.577,214,1.772,232,1.178,422,3.261,513,3.333,756,2.035,757,2.433,758,2.433,759,2.433,760,2.433,761,2.433,762,2.433,763,3.005,764,2.433,765,2.433,766,2.035,767,2.035,768,2.433,769,2.433]],["title/classes/UpdatedByDto.html",[21,0.153,487,2.082]],["body/classes/UpdatedByDto.html",[3,0.339,4,0.339,5,0.289,7,0.757,10,1.476,11,0.031,12,0.562,15,0.771,16,0.525,20,0.392,21,0.25,26,0.025,27,0.025,71,0.904,87,0.598,141,1.554,164,1.07,166,1.683,174,1.216,177,2.332,178,2.543,182,3.065,184,3.02,185,3.402,186,3.402,187,3.402,188,3.402,189,3.402,204,2.543,206,1.6,207,3.402,210,2.783,212,1.888,213,2.754,228,3.555,422,3.692,487,3.402,763,4.391,770,3.555,771,4.25]],["title/coverage.html",[772,3.189]],["body/coverage.html",[0,2.142,1,1.883,5,0.176,6,2.162,11,0.032,18,1.37,21,0.293,26,0.018,27,0.018,40,1.509,41,1.675,52,1.252,64,2.142,66,2.162,70,2.162,87,0.271,104,1.509,106,1.883,108,1.883,109,1.883,146,1.509,158,1.883,163,1.37,165,2.162,172,1.148,174,0.599,182,1.509,226,1.883,227,2.162,230,1.883,231,2.162,240,1.509,241,2.162,248,2.162,268,1.675,269,1.675,271,4.224,279,1.883,282,1.883,287,1.883,289,1.883,293,1.883,295,1.883,298,1.883,305,1.509,310,1.883,311,2.162,312,2.162,328,2.162,352,1.509,353,2.162,358,1.675,359,2.162,361,1.509,362,2.162,409,1.883,418,2.162,456,2.162,462,1.675,463,2.162,465,1.675,466,2.162,487,1.675,513,1.509,553,1.883,559,1.883,561,1.37,587,2.736,618,1.509,621,2.162,632,2.162,667,1.675,669,1.883,671,1.883,675,5.398,754,2.162,756,2.162,770,2.162,772,1.883,773,2.585,774,2.585,775,5.799,776,3.141,777,6.507,778,3.141,779,6.385,780,6.256,781,3.141,782,2.162,783,2.162,784,2.162,785,6.222,786,2.585,787,4.061,788,2.162,789,2.162,790,2.162,791,2.162,792,2.585,793,3.141,794,3.141,795,2.162,796,3.756,797,4.061,798,2.162,799,2.162,800,2.162,801,3.756,802,3.756,803,2.585,804,2.585,805,2.585,806,2.585,807,2.585,808,2.585,809,2.162,810,2.585,811,2.585,812,2.585,813,2.585,814,2.162,815,2.162,816,2.162,817,2.162,818,2.162,819,2.162,820,2.162,821,3.223,822,2.162,823,2.162,824,2.585]],["title/dependencies.html",[31,2.048,825,2.247]],["body/dependencies.html",[11,0.032,17,0.972,21,0.236,26,0.023,27,0.023,31,2.048,44,2.815,45,2.503,47,2.815,49,2.048,103,3.231,110,2.815,113,3.231,206,1.455,212,1.716,278,3.231,324,3.204,412,3.231,415,3.231,525,2.815,539,3.231,549,3.231,551,3.231,766,3.231,767,3.231,826,3.864,827,5.453,828,3.864,829,3.864,830,3.864,831,3.864,832,3.864,833,3.864,834,3.864,835,3.864,836,3.864,837,3.864,838,3.864,839,3.864,840,3.864,841,3.864,842,4.945,843,3.864,844,3.864,845,3.864,846,3.864,847,3.864,848,3.864,849,3.864,850,3.231,851,3.864,852,3.231,853,3.864,854,3.864,855,3.864,856,3.864,857,3.864,858,3.864,859,3.864,860,2.815,861,3.864,862,3.864,863,3.864,864,3.864,865,3.864,866,3.864,867,3.864,868,3.864,869,3.864,870,3.864,871,3.864,872,3.864,873,3.864,874,3.864,875,3.864,876,3.864,877,3.864,878,3.864]],["title/miscellaneous/functions.html",[879,1.741,880,3.231]],["body/miscellaneous/functions.html",[7,0.867,11,0.029,26,0.027,27,0.027,85,1.561,86,1.036,87,0.511,88,1.128,790,4.071,791,5.051,821,3.546,822,5.051,879,3.154,880,4.071,881,4.868,882,4.071,883,4.071,884,4.764,885,3.546]],["title/index.html",[7,0.479,886,2.687,887,2.687]],["body/index.html",[4,0.325,11,0.031,26,0.024,27,0.024,71,0.866,116,2.966,126,2.966,128,3.724,303,2.966,622,3.405,772,2.966,860,4.555,885,2.966,888,4.071,889,4.071,890,5.112,891,4.071,892,4.071,893,4.071,894,4.071,895,4.071,896,4.071,897,5.587,898,4.071,899,4.071,900,4.071,901,4.071,902,6.161,903,4.071,904,4.071,905,5.112,906,4.071,907,4.071,908,4.071,909,5.112,910,4.071,911,4.071,912,4.071,913,5.112,914,5.112,915,4.071,916,4.071,917,4.071,918,4.071,919,4.071,920,4.071,921,4.071,922,4.071,923,4.071,924,4.071,925,4.071,926,4.071,927,4.071,928,4.071,929,4.071,930,3.405,931,4.071,932,4.071,933,4.071,934,4.071,935,4.071,936,4.071,937,3.405]],["title/modules.html",[30,2.12]],["body/modules.html",[11,0.027,26,0.027,27,0.027,29,2.89,30,2.398,35,2.89,54,2.89,116,4.431,938,6.082,939,6.082,940,6.082]],["title/overview.html",[941,3.661]],["body/overview.html",[2,2.327,11,0.03,18,3.064,26,0.025,27,0.025,29,3.663,30,2.126,31,2.839,32,3.671,33,3.671,34,3.671,35,3.601,36,3.47,37,2.844,38,2.844,52,3.077,54,3.601,65,2.844,132,2.844,164,1.105,268,2.844,406,3.671,407,3.671,408,3.671,561,3.064,614,3.671,615,3.671,751,4.479,941,3.671,942,5.779,943,4.389]],["title/properties.html",[166,1.238,825,2.247]],["body/properties.html",[11,0.031,26,0.028,27,0.028,71,1.069,166,1.61,850,4.2,930,4.2,937,4.2,944,5.023,945,5.023]],["title/miscellaneous/variables.html",[879,1.741,946,3.231]],["body/miscellaneous/variables.html",[3,0.28,5,0.097,7,0.254,11,0.032,15,0.87,24,1.863,26,0.011,27,0.011,29,0.831,40,1.763,52,0.69,86,0.828,87,0.595,89,0.923,104,2.05,106,2.2,108,2.2,109,1.037,110,2.558,120,2.761,126,2.2,128,1.719,132,1.957,135,2.525,141,1.152,149,1.714,156,1.191,158,2.2,169,2.064,170,2.25,171,2.25,174,0.33,179,0.831,236,1.048,250,1.191,251,2.272,254,0.831,269,0.923,271,1.037,272,2.525,275,1.191,276,1.191,277,1.191,279,2.2,280,1.973,281,1.973,282,2.558,283,4.483,284,1.973,285,2.2,286,1.191,287,2.558,288,1.191,289,2.2,290,2.525,291,1.973,292,1.191,293,2.2,294,1.191,295,2.2,296,1.191,297,1.191,298,2.558,299,1.191,300,1.191,301,1.191,302,1.973,303,1.719,304,1.191,305,2.813,306,1.191,307,1.191,308,1.191,309,1.191,317,4.453,325,1.719,331,4.038,358,0.923,409,1.037,467,1.719,525,1.037,553,1.719,559,1.719,571,1.191,669,1.719,671,1.719,698,1.191,701,1.191,704,3.255,725,1.973,745,1.191,753,2.525,776,1.191,778,3.255,781,3.255,782,1.191,783,1.973,784,1.973,787,1.191,788,2.937,789,3.886,793,1.191,794,3.255,795,2.525,797,1.191,798,1.973,799,1.973,800,1.973,809,1.191,814,1.191,815,1.191,816,1.191,817,1.191,818,1.973,819,1.973,820,1.973,821,1.037,823,1.973,852,1.191,860,1.037,879,0.923,882,1.973,883,1.191,884,2.937,885,2.835,946,1.191,947,3.511,948,1.424,949,1.424,950,1.424,951,1.424,952,3.511,953,4.647,954,2.359,955,2.359,956,1.424,957,1.424,958,1.424,959,1.424,960,1.424,961,1.424,962,1.424,963,1.424,964,1.424,965,2.359,966,3.02,967,3.02,968,3.02,969,3.02,970,3.02,971,3.02,972,3.02,973,3.02,974,3.02,975,3.02,976,1.424,977,3.02,978,4.195,979,1.424,980,3.02,981,3.02,982,3.02,983,3.02,984,1.424,985,3.02,986,3.02,987,3.02,988,1.424,989,2.359,990,1.424,991,1.424,992,1.424,993,1.424,994,1.424,995,1.424,996,1.424,997,1.424,998,1.424,999,2.359,1000,2.359,1001,2.359,1002,2.359,1003,3.02,1004,1.424,1005,1.424,1006,1.424,1007,1.424,1008,1.424,1009,2.359,1010,1.424,1011,1.424,1012,1.424,1013,1.424,1014,2.359,1015,3.511,1016,3.511,1017,3.511,1018,3.511,1019,3.511,1020,1.424,1021,1.424,1022,2.359,1023,1.424,1024,1.424,1025,1.424,1026,1.424,1027,1.424,1028,1.424,1029,2.359,1030,3.511,1031,1.424,1032,3.511,1033,3.511,1034,1.424,1035,2.359,1036,1.424,1037,1.424,1038,3.511,1039,3.511,1040,2.359,1041,1.424,1042,1.424,1043,1.424,1044,1.424,1045,1.424,1046,1.424,1047,1.424,1048,1.424,1049,4.968,1050,1.424,1051,1.424,1052,1.424,1053,1.424,1054,1.424,1055,1.424,1056,1.424,1057,1.424,1058,1.424,1059,1.424]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":675,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":850,"title":{},"body":{"dependencies.html":{},"properties.html":{}}}],["0.1.13",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["0.11.0",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["0.12.7",{"_index":864,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":853,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":839,"title":{},"body":{"dependencies.html":{}}}],["0.3.15",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":838,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":785,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":775,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":792,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":751,"title":{},"body":{"injectables/TagService.html":{},"overview.html":{}}}],["1.1.0",{"_index":845,"title":{},"body":{"dependencies.html":{}}}],["1.10.0",{"_index":855,"title":{},"body":{"dependencies.html":{}}}],["1.4.0",{"_index":836,"title":{},"body":{"dependencies.html":{}}}],["1.4.5",{"_index":856,"title":{},"body":{"dependencies.html":{}}}],["1.7.4",{"_index":841,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":780,"title":{},"body":{"coverage.html":{}}}],["10.0.3",{"_index":831,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":806,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":779,"title":{},"body":{"coverage.html":{}}}],["10bank",{"_index":379,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["14",{"_index":943,"title":{},"body":{"overview.html":{}}}],["16.0.3",{"_index":847,"title":{},"body":{"dependencies.html":{}}}],["1735212bb75b",{"_index":385,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["2",{"_index":753,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["2.0.0",{"_index":826,"title":{},"body":{"dependencies.html":{}}}],["2.0.22",{"_index":859,"title":{},"body":{"dependencies.html":{}}}],["2.3.1",{"_index":829,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":796,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":477,"title":{},"body":{"controllers/TagController.html":{}}}],["201",{"_index":527,"title":{},"body":{"controllers/TagController.html":{}}}],["204",{"_index":495,"title":{},"body":{"controllers/TagController.html":{}}}],["2f0d5b770405",{"_index":371,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["3",{"_index":942,"title":{},"body":{"overview.html":{}}}],["3.8.2",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":786,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":808,"title":{},"body":{"coverage.html":{}}}],["4.1.0",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":813,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":481,"title":{},"body":{"controllers/TagController.html":{}}}],["404",{"_index":500,"title":{},"body":{"controllers/TagController.html":{}}}],["44a6",{"_index":187,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["459e",{"_index":369,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["476d1c9484e9",{"_index":189,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["4b109a5a",{"_index":381,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["4f75",{"_index":383,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["5",{"_index":968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.3.10",{"_index":846,"title":{},"body":{"dependencies.html":{}}}],["5.4.1",{"_index":863,"title":{},"body":{"dependencies.html":{}}}],["5/6",{"_index":804,"title":{},"body":{"coverage.html":{}}}],["5432",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["584c",{"_index":368,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["6.3.0",{"_index":832,"title":{},"body":{"dependencies.html":{}}}],["66",{"_index":811,"title":{},"body":{"coverage.html":{}}}],["6ebb0c45",{"_index":185,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["7.0.3",{"_index":843,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["7.3.1",{"_index":849,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":810,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":802,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":807,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":608,"title":{},"body":{"controllers/TagController.html":{}}}],["8.10.0",{"_index":866,"title":{},"body":{"dependencies.html":{}}}],["8/12",{"_index":812,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":803,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":801,"title":{},"body":{"coverage.html":{}}}],["87ca",{"_index":370,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["8eaa",{"_index":382,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["9.0.1",{"_index":834,"title":{},"body":{"dependencies.html":{}}}],["9.2.2",{"_index":833,"title":{},"body":{"dependencies.html":{}}}],["9.4.0",{"_index":827,"title":{},"body":{"dependencies.html":{}}}],["9.6.6",{"_index":861,"title":{},"body":{"dependencies.html":{}}}],["90",{"_index":805,"title":{},"body":{"coverage.html":{}}}],["91ae",{"_index":384,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["9fd9",{"_index":188,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["__dirname",{"_index":133,"title":{},"body":{"injectables/ConfigService.html":{}}}],["accessors",{"_index":74,"title":{},"body":{"injectables/ConfigService.html":{}}}],["admin",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allowed",{"_index":1026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amazing",{"_index":920,"title":{},"body":{"index.html":{}}}],["amazon",{"_index":217,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["any).context",{"_index":140,"title":{},"body":{"injectables/ConfigService.html":{}}}],["any).hot",{"_index":137,"title":{},"body":{"injectables/ConfigService.html":{}}}],["api",{"_index":1039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["apibadrequestresponse",{"_index":541,"title":{},"body":{"controllers/TagController.html":{}}}],["apicreatedresponse",{"_index":542,"title":{},"body":{"controllers/TagController.html":{}}}],["apinocontentresponse",{"_index":543,"title":{},"body":{"controllers/TagController.html":{}}}],["apinotfoundresponse",{"_index":544,"title":{},"body":{"controllers/TagController.html":{}}}],["apiokresponse",{"_index":545,"title":{},"body":{"controllers/TagController.html":{}}}],["apioperation",{"_index":546,"title":{},"body":{"controllers/TagController.html":{}}}],["apiparam",{"_index":547,"title":{},"body":{"controllers/TagController.html":{}}}],["apiproperty",{"_index":204,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["apiproperty({description",{"_index":457,"title":{},"body":{"classes/TagConditions.html":{}}}],["apipropertyoptional",{"_index":205,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["apiquery",{"_index":548,"title":{},"body":{"controllers/TagController.html":{}}}],["apitags",{"_index":257,"title":{},"body":{"controllers/HealthController.html":{},"controllers/TagController.html":{}}}],["apitags('health",{"_index":263,"title":{},"body":{"controllers/HealthController.html":{}}}],["apitags('tags",{"_index":564,"title":{},"body":{"controllers/TagController.html":{}}}],["app",{"_index":885,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["app.close",{"_index":1046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["apple",{"_index":221,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["application/json",{"_index":1033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applications",{"_index":896,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["archive",{"_index":491,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["array",{"_index":175,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{}}}],["async",{"_index":251,"title":{},"body":{"controllers/HealthController.html":{},"classes/Migrations1683551307003.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["audit_sqs_url",{"_index":1056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0",{"_index":1040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0_audience",{"_index":1050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0_domain",{"_index":1048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth0_rule_key",{"_index":1057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["author",{"_index":930,"title":{},"body":{"index.html":{},"properties.html":{}}}],["autoloadentities",{"_index":160,"title":{},"body":{"injectables/ConfigService.html":{}}}],["await",{"_index":325,"title":{},"body":{"classes/Migrations1683551307003.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["aws",{"_index":119,"title":{},"body":{"injectables/ConfigService.html":{}}}],["aws_region",{"_index":1058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["axios",{"_index":835,"title":{},"body":{"dependencies.html":{}}}],["backers",{"_index":921,"title":{},"body":{"index.html":{}}}],["bad",{"_index":482,"title":{},"body":{"controllers/TagController.html":{}}}],["badrequestexception",{"_index":484,"title":{},"body":{"controllers/TagController.html":{}}}],["badrequestexception})@patch(':id",{"_index":519,"title":{},"body":{"controllers/TagController.html":{}}}],["badrequestexception})@useinterceptors(undefined",{"_index":529,"title":{},"body":{"controllers/TagController.html":{}}}],["bank",{"_index":195,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["body",{"_index":533,"title":{},"body":{"controllers/TagController.html":{}}}],["body('createdby",{"_index":600,"title":{},"body":{"controllers/TagController.html":{}}}],["body(new",{"_index":569,"title":{},"body":{"controllers/TagController.html":{}}}],["boolean",{"_index":97,"title":{},"body":{"injectables/ConfigService.html":{},"classes/Migrations1683551307003.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{}}}],["bootstrap",{"_index":791,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":940,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":938,"title":{},"body":{"modules.html":{}}}],["building",{"_index":891,"title":{},"body":{"index.html":{}}}],["bulk",{"_index":531,"title":{},"body":{"controllers/TagController.html":{}}}],["callback",{"_index":1022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["callback(null",{"_index":1027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cash",{"_index":222,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["category",{"_index":202,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["central",{"_index":219,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["character",{"_index":334,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["class",{"_index":21,"title":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"classes/TagRepository.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":164,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"classes/TagRepository.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"overview.html":{}}}],["cleanenv(process.env",{"_index":1047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cli",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_sharedmodule",{"_index":406,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_exports",{"_index":407,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_sharedmodule_providers",{"_index":408,"title":{},"body":{"modules/SharedModule.html":{},"overview.html":{}}}],["cluster_tagmodule",{"_index":614,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["cluster_tagmodule_providers",{"_index":615,"title":{},"body":{"modules/TagModule.html":{},"overview.html":{}}}],["coding",{"_index":961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["col",{"_index":750,"title":{},"body":{"injectables/TagService.html":{}}}],["column",{"_index":450,"title":{},"body":{"entities/Tag.html":{}}}],["column({default",{"_index":436,"title":{},"body":{"entities/Tag.html":{}}}],["column({nullable",{"_index":439,"title":{},"body":{"entities/Tag.html":{}}}],["column({type",{"_index":430,"title":{},"body":{"entities/Tag.html":{}}}],["common/dto/updatedby.dto",{"_index":552,"title":{},"body":{"controllers/TagController.html":{}}}],["compression",{"_index":840,"title":{},"body":{"dependencies.html":{}}}],["condition",{"_index":224,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["conditions",{"_index":167,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/Migrations1683551307003.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{}}}],["conditions'})@apiokresponse({status",{"_index":517,"title":{},"body":{"controllers/TagController.html":{}}}],["conditions.'})@apiokresponse({status",{"_index":505,"title":{},"body":{"controllers/TagController.html":{}}}],["config",{"_index":158,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["config.development",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config/logger",{"_index":105,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/TagController.html":{}}}],["config/rdbms",{"_index":107,"title":{},"body":{"injectables/ConfigService.html":{}}}],["config[env",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["configservice",{"_index":52,"title":{"injectables/ConfigService.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/SharedModule.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["configservice.typeormconfig",{"_index":61,"title":{},"body":{"modules/AppModule.html":{}}}],["configuration",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connecting",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["connection",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('entered",{"_index":586,"title":{},"body":{"controllers/TagController.html":{}}}],["console.log('res.length==0",{"_index":713,"title":{},"body":{"injectables/TagService.html":{}}}],["console.log(createslug(firsttagdto",{"_index":742,"title":{},"body":{"injectables/TagService.html":{}}}],["console.log(createslug(secondtagdto",{"_index":743,"title":{},"body":{"injectables/TagService.html":{}}}],["console.log(getdto.resource",{"_index":706,"title":{},"body":{"injectables/TagService.html":{}}}],["console.log(res",{"_index":700,"title":{},"body":{"injectables/TagService.html":{}}}],["const",{"_index":120,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/IErrorObject.html":{},"modules/SharedModule.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["constraint",{"_index":348,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["constructor",{"_index":79,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CsvFileValidationError.html":{},"controllers/HealthController.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{}}}],["constructor(message",{"_index":234,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/UnmatchingTagDetailsValidationException.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/TagController.html":{}}}],["constructor(tag",{"_index":364,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["constructor(tagrepository",{"_index":623,"title":{},"body":{"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["contains",{"_index":225,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagController.html":{}},"body":{"controllers/AppController.html":{},"controllers/HealthController.html":{},"controllers/TagController.html":{},"coverage.html":{}}}],["controller('health",{"_index":262,"title":{},"body":{"controllers/HealthController.html":{}}}],["controller('tags",{"_index":565,"title":{},"body":{"controllers/TagController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/HealthController.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["cors",{"_index":1043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":772,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":327,"title":{},"body":{"classes/Migrations1683551307003.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["create(createtagdto",{"_index":473,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createconditions",{"_index":686,"title":{},"body":{"injectables/TagService.html":{}}}],["createcorefieldsstring",{"_index":669,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createcorefieldsstring(firsttagdto",{"_index":740,"title":{},"body":{"injectables/TagService.html":{}}}],["createcorefieldsstring(secondtagdto",{"_index":741,"title":{},"body":{"injectables/TagService.html":{}}}],["created",{"_index":479,"title":{},"body":{"controllers/TagController.html":{}}}],["created_at",{"_index":341,"title":{},"body":{"classes/Migrations1683551307003.html":{},"entities/Tag.html":{}}}],["created_by",{"_index":344,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["createdat",{"_index":419,"title":{},"body":{"entities/Tag.html":{}}}],["createdatecolumn",{"_index":451,"title":{},"body":{"entities/Tag.html":{}}}],["createdatecolumn({type",{"_index":427,"title":{},"body":{"entities/Tag.html":{}}}],["createdby",{"_index":168,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"entities/Tag.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createdbydto",{"_index":226,"title":{"classes/CreatedByDto.html":{}},"body":{"classes/CreatedByDto.html":{},"coverage.html":{}}}],["createdta",{"_index":429,"title":{},"body":{"entities/Tag.html":{}}}],["createisstatic",{"_index":683,"title":{},"body":{"injectables/TagService.html":{}}}],["createlogger",{"_index":275,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["creates",{"_index":81,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/ResponseTagDto.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["createslug",{"_index":671,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["createtag.dto",{"_index":768,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["createtagdto",{"_index":163,"title":{"classes/CreateTagDto.html":{}},"body":{"classes/CreateTagDto.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["createtagdto.conditions",{"_index":684,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto.conditions.length",{"_index":685,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto.createdby",{"_index":682,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto.name",{"_index":689,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto.resource",{"_index":574,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createtagdto.resourceid",{"_index":572,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createtagdto.resourcetype",{"_index":573,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["createtagdto.type",{"_index":690,"title":{},"body":{"injectables/TagService.html":{}}}],["createtagdto})@apibadrequestresponse({status",{"_index":480,"title":{},"body":{"controllers/TagController.html":{}}}],["creating",{"_index":681,"title":{},"body":{"injectables/TagService.html":{}}}],["creator",{"_index":183,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{}}}],["cross",{"_index":842,"title":{},"body":{"dependencies.html":{}}}],["csv",{"_index":525,"title":{},"body":{"controllers/TagController.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["csvfilefilter",{"_index":553,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["csvfilepath",{"_index":602,"title":{},"body":{"controllers/TagController.html":{}}}],["csvfilevalidationerror",{"_index":230,"title":{"classes/CsvFileValidationError.html":{}},"body":{"classes/CsvFileValidationError.html":{},"coverage.html":{}}}],["csvfilevalidationerror('only",{"_index":1024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":725,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["database",{"_index":704,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["database:${configuration.database",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource",{"_index":784,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource(rdbmsconfig",{"_index":1028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["date",{"_index":426,"title":{},"body":{"entities/Tag.html":{}}}],["dbms",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debug",{"_index":304,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["default",{"_index":317,"title":{},"body":{"classes/Migrations1683551307003.html":{},"entities/Tag.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["definitions",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete",{"_index":468,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["delete(':id",{"_index":592,"title":{},"body":{"controllers/TagController.html":{}}}],["delete(':id')@httpcode(httpstatus.ok)@apiparam({name",{"_index":488,"title":{},"body":{"controllers/TagController.html":{}}}],["delete(`${endpoint}/${tenantcode",{"_index":1031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["delete(id",{"_index":486,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["deleted_at",{"_index":347,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["deletedat",{"_index":420,"title":{},"body":{"entities/Tag.html":{}}}],["deletedatecolumn",{"_index":432,"title":{},"body":{"entities/Tag.html":{}}}],["deletetenantbytenantcode",{"_index":798,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["delimiter",{"_index":610,"title":{},"body":{"controllers/TagController.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"dependencies.html":{},"overview.html":{}}}],["deposit",{"_index":223,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["description",{"_index":71,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"index.html":{},"properties.html":{}}}],["dest",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["destination",{"_index":598,"title":{},"body":{"controllers/TagController.html":{}}}],["dev",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["development",{"_index":126,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["devformat",{"_index":298,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["diskstorage",{"_index":550,"title":{},"body":{"controllers/TagController.html":{}}}],["dist/migrations/*{.ts,.js",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dist/modules/**/*.entity{.ts,.js",{"_index":965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["doc",{"_index":818,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":773,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":103,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{}}}],["dotenv.config",{"_index":112,"title":{},"body":{"injectables/ConfigService.html":{}}}],["down",{"_index":315,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["down(queryrunner",{"_index":319,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["dto",{"_index":1014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.name",{"_index":1015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.resource",{"_index":1019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.resourceid",{"_index":1017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.resourcetype",{"_index":1018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto.type",{"_index":1016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dto/createtag.dto",{"_index":555,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["dto/gettag.dto",{"_index":556,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["dto/responsetag.dto",{"_index":557,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["dto/tagconditions.dto",{"_index":454,"title":{},"body":{"entities/Tag.html":{},"injectables/TagService.html":{}}}],["dto/updatetag.dto",{"_index":558,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["dto/validations/resourcevalidation.validation",{"_index":560,"title":{},"body":{"controllers/TagController.html":{}}}],["e2e",{"_index":910,"title":{},"body":{"index.html":{}}}],["e8a5f497",{"_index":367,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["efficient",{"_index":892,"title":{},"body":{"index.html":{}}}],["encoding",{"_index":606,"title":{},"body":{"controllers/TagController.html":{}}}],["end",{"_index":267,"title":{},"body":{"controllers/HealthController.html":{}}}],["endpoint",{"_index":794,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["entities",{"_index":132,"title":{},"body":{"injectables/ConfigService.html":{},"entities/Tag.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entity",{"_index":146,"title":{"entities/Tag.html":{}},"body":{"injectables/ConfigService.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["entity('tags",{"_index":455,"title":{},"body":{"entities/Tag.html":{}}}],["entity\\.ts",{"_index":142,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entitycontext",{"_index":138,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entitycontext(id",{"_index":145,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entitycontext.keys().map((id",{"_index":143,"title":{},"body":{"injectables/ConfigService.html":{}}}],["entitymodule",{"_index":144,"title":{},"body":{"injectables/ConfigService.html":{}}}],["env",{"_index":110,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["env.ts",{"_index":823,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["envalid",{"_index":848,"title":{},"body":{"dependencies.html":{}}}],["environment",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envname",{"_index":121,"title":{},"body":{"injectables/ConfigService.html":{}}}],["error",{"_index":285,"title":{},"body":{"interfaces/IErrorObject.html":{},"controllers/TagController.html":{},"miscellaneous/variables.html":{}}}],["errors.log",{"_index":309,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["example",{"_index":178,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["exceptions/notagfoundexception.exception",{"_index":665,"title":{},"body":{"injectables/TagService.html":{}}}],["exceptions/tagconditionsvalidationexception.exception",{"_index":666,"title":{},"body":{"injectables/TagService.html":{}}}],["exceptions/unmatchingtagdetailsvalidationexception.exception",{"_index":668,"title":{},"body":{"injectables/TagService.html":{}}}],["existing",{"_index":516,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["exitonerror",{"_index":301,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["exports",{"_index":410,"title":{},"body":{"modules/SharedModule.html":{}}}],["express",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["express.multer.file",{"_index":522,"title":{},"body":{"controllers/TagController.html":{}}}],["expressadapter",{"_index":1042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extends",{"_index":232,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/TagRepository.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{}}}],["extra",{"_index":966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f709",{"_index":186,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["false",{"_index":149,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"interfaces/IErrorObject.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/variables.html":{}}}],["field",{"_index":215,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["fields",{"_index":645,"title":{},"body":{"injectables/TagService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["file'})@apicreatedresponse({status",{"_index":526,"title":{},"body":{"controllers/TagController.html":{}}}],["file.filename",{"_index":603,"title":{},"body":{"controllers/TagController.html":{}}}],["file.originalname.match(/\\.(csv",{"_index":1023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filecontent",{"_index":604,"title":{},"body":{"controllers/TagController.html":{}}}],["filefilter",{"_index":599,"title":{},"body":{"controllers/TagController.html":{}}}],["fileinterceptor",{"_index":540,"title":{},"body":{"controllers/TagController.html":{}}}],["fileinterceptor('file",{"_index":596,"title":{},"body":{"controllers/TagController.html":{}}}],["filename",{"_index":308,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["files",{"_index":1025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["filters",{"_index":705,"title":{},"body":{"injectables/TagService.html":{}}}],["find",{"_index":698,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["findbyfields",{"_index":633,"title":{},"body":{"injectables/TagService.html":{}}}],["findbyfields(fields",{"_index":643,"title":{},"body":{"injectables/TagService.html":{}}}],["firstcondition",{"_index":659,"title":{},"body":{"injectables/TagService.html":{}}}],["firstcondition.length",{"_index":674,"title":{},"body":{"injectables/TagService.html":{}}}],["firstcondition[0].keywords",{"_index":677,"title":{},"body":{"injectables/TagService.html":{}}}],["firsttagdto",{"_index":655,"title":{},"body":{"injectables/TagService.html":{}}}],["fmt",{"_index":295,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["format",{"_index":276,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["format.combine(format.colorize",{"_index":299,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["format.combine(format.json",{"_index":288,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["format.printf(fmt",{"_index":300,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["formaterror",{"_index":293,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formaterror(info",{"_index":296,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["formatmessage",{"_index":289,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["formatmessage(info",{"_index":297,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["found",{"_index":356,"title":{},"body":{"classes/NoTagFoundException.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["founded",{"_index":498,"title":{},"body":{"controllers/TagController.html":{}}}],["framework",{"_index":890,"title":{},"body":{"index.html":{}}}],["fs",{"_index":539,"title":{},"body":{"controllers/TagController.html":{},"dependencies.html":{}}}],["fs.readfilesync(csvfilepath",{"_index":605,"title":{},"body":{"controllers/TagController.html":{}}}],["function",{"_index":587,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["functions",{"_index":880,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["generator.ts",{"_index":819,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["get(':id",{"_index":576,"title":{},"body":{"controllers/TagController.html":{}}}],["get(':id')@httpcode(httpstatus.ok)@apiparam({name",{"_index":509,"title":{},"body":{"controllers/TagController.html":{}}}],["get()@healthcheck",{"_index":252,"title":{},"body":{"controllers/HealthController.html":{}}}],["get()@httpcode(httpstatus.ok)@apiquery({name",{"_index":503,"title":{},"body":{"controllers/TagController.html":{}}}],["get(`/${endpoint",{"_index":1037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["get(key",{"_index":83,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getall",{"_index":469,"title":{},"body":{"controllers/TagController.html":{}}}],["getall(gettagdto",{"_index":502,"title":{},"body":{"controllers/TagController.html":{}}}],["getalltags",{"_index":634,"title":{},"body":{"injectables/TagService.html":{}}}],["getalltags(getdto",{"_index":646,"title":{},"body":{"injectables/TagService.html":{}}}],["getbyid",{"_index":470,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["getbyid(id",{"_index":508,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["getdto",{"_index":579,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["getdto.name",{"_index":711,"title":{},"body":{"injectables/TagService.html":{}}}],["getdto.resource",{"_index":707,"title":{},"body":{"injectables/TagService.html":{}}}],["getdto.resourceid",{"_index":708,"title":{},"body":{"injectables/TagService.html":{}}}],["getdto.resourcetype",{"_index":709,"title":{},"body":{"injectables/TagService.html":{}}}],["getdto.type",{"_index":710,"title":{},"body":{"injectables/TagService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getisdevenv",{"_index":95,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getistestenv",{"_index":98,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getnodeenv",{"_index":93,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getnumber",{"_index":73,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getnumber(key",{"_index":90,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getrdbmsconfig",{"_index":788,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["getserverhealth",{"_index":795,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["gettagdto",{"_index":240,"title":{"classes/GetTagDto.html":{}},"body":{"classes/GetTagDto.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["gettagdto.resource",{"_index":583,"title":{},"body":{"controllers/TagController.html":{}}}],["gettagdto.resourceid",{"_index":581,"title":{},"body":{"controllers/TagController.html":{}}}],["gettagdto.resourcetype",{"_index":582,"title":{},"body":{"controllers/TagController.html":{}}}],["gettagdto})@apinotfoundresponse({status",{"_index":506,"title":{},"body":{"controllers/TagController.html":{}}}],["getting",{"_index":886,"title":{"index.html":{}},"body":{}}],["gettypeormconfig",{"_index":100,"title":{},"body":{"injectables/ConfigService.html":{}}}],["global",{"_index":413,"title":{},"body":{"modules/SharedModule.html":{}}}],["grid",{"_index":663,"title":{},"body":{"injectables/TagService.html":{}}}],["grid.length",{"_index":749,"title":{},"body":{"injectables/TagService.html":{}}}],["grid[0].length",{"_index":747,"title":{},"body":{"injectables/TagService.html":{}}}],["grow",{"_index":917,"title":{},"body":{"index.html":{}}}],["gst",{"_index":199,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["hard",{"_index":960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["health",{"_index":250,"title":{},"body":{"controllers/HealthController.html":{},"miscellaneous/variables.html":{}}}],["healthcheck",{"_index":259,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckresult",{"_index":258,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcheckservice",{"_index":260,"title":{},"body":{"controllers/HealthController.html":{}}}],["healthcontroller",{"_index":41,"title":{"controllers/HealthController.html":{}},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"coverage.html":{}}}],["hello",{"_index":68,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":927,"title":{},"body":{"index.html":{}}}],["host",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["httpcode",{"_index":534,"title":{},"body":{"controllers/TagController.html":{}}}],["httpcode(httpstatus.ok",{"_index":566,"title":{},"body":{"controllers/TagController.html":{}}}],["httpcode(httpstatus.ok)@apioperation({summary",{"_index":514,"title":{},"body":{"controllers/TagController.html":{}}}],["httpexception",{"_index":233,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/UnmatchingTagDetailsValidationException.html":{}}}],["httpmodule",{"_index":411,"title":{},"body":{"modules/SharedModule.html":{}}}],["https://nestjs.com",{"_index":934,"title":{},"body":{"index.html":{}}}],["httpstatus",{"_index":237,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{}}}],["httpstatus.bad_request",{"_index":239,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/UnmatchingTagDetailsValidationException.html":{}}}],["httpstatus.no_content",{"_index":357,"title":{},"body":{"classes/NoTagFoundException.html":{},"controllers/TagController.html":{}}}],["id",{"_index":330,"title":{},"body":{"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["id.'})@apiokresponse({status",{"_index":494,"title":{},"body":{"controllers/TagController.html":{}}}],["identifier",{"_index":182,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{}}}],["ierrorobject",{"_index":269,"title":{"interfaces/IErrorObject.html":{}},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":313,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{}}}],["inconsistent",{"_index":745,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["indexable",{"_index":273,"title":{},"body":{"interfaces/IErrorObject.html":{}}}],["inestapplication",{"_index":884,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"miscellaneous/variables.html":{}}}],["info.level",{"_index":291,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["info.message",{"_index":292,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["info.message}\\n\\n${info.stack}\\n",{"_index":294,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["inject",{"_index":62,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["injectable",{"_index":64,"title":{"injectables/AppService.html":{},"injectables/ConfigService.html":{},"injectables/TagService.html":{}},"body":{"injectables/AppService.html":{},"injectables/ConfigService.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["injectables",{"_index":65,"title":{},"body":{"injectables/AppService.html":{},"injectables/ConfigService.html":{},"injectables/TagService.html":{},"overview.html":{}}}],["injectrepository",{"_index":626,"title":{},"body":{"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["injectrepository(tag",{"_index":627,"title":{},"body":{"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["install",{"_index":852,"title":{},"body":{"dependencies.html":{},"miscellaneous/variables.html":{}}}],["installation",{"_index":900,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":901,"title":{},"body":{"index.html":{}}}],["instance",{"_index":82,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/ResponseTagDto.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["instanceof",{"_index":284,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["interface",{"_index":268,"title":{"interfaces/IErrorObject.html":{}},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces",{"_index":270,"title":{},"body":{"interfaces/IErrorObject.html":{}}}],["internal",{"_index":1038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internal_api_key",{"_index":1059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["internal_api_security",{"_index":778,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["internal_auth0_api_security",{"_index":781,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["is_static",{"_index":339,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["isarray",{"_index":176,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{}}}],["isdefined",{"_index":207,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["isdefined()@isstring()@apiproperty({description",{"_index":228,"title":{},"body":{"classes/CreatedByDto.html":{},"classes/UpdatedByDto.html":{}}}],["isdefined()@isuuid()@apiproperty({description",{"_index":181,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isdevenv",{"_index":76,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isnotempty",{"_index":208,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isobject",{"_index":449,"title":{},"body":{"entities/Tag.html":{}}}],["isobject()@column({type",{"_index":423,"title":{},"body":{"entities/Tag.html":{}}}],["isoptional",{"_index":209,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isoptional()@apipropertyoptional({description",{"_index":173,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isstatic",{"_index":363,"title":{},"body":{"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{}}}],["isstaticvalidation",{"_index":635,"title":{},"body":{"injectables/TagService.html":{}}}],["isstaticvalidation(isstatic",{"_index":649,"title":{},"body":{"injectables/TagService.html":{}}}],["isstring",{"_index":210,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["isstring()@isdefined()@isnotempty()@apiproperty({description",{"_index":201,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["isstring()@isnotempty()@isdefined()@apiproperty({description",{"_index":191,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["isstring()@isoptional()@apiproperty({description",{"_index":242,"title":{},"body":{"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{}}}],["isstring()@isoptional()@apipropertyoptional({description",{"_index":194,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["istestenv",{"_index":77,"title":{},"body":{"injectables/ConfigService.html":{}}}],["isuuid",{"_index":211,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["join",{"_index":923,"title":{},"body":{"index.html":{}}}],["json.stringify",{"_index":159,"title":{},"body":{"injectables/ConfigService.html":{}}}],["jsonb",{"_index":338,"title":{},"body":{"classes/Migrations1683551307003.html":{},"entities/Tag.html":{}}}],["jwtmodule",{"_index":414,"title":{},"body":{"modules/SharedModule.html":{}}}],["jwtmodule.registerasync",{"_index":417,"title":{},"body":{"modules/SharedModule.html":{}}}],["kamil",{"_index":931,"title":{},"body":{"index.html":{}}}],["key",{"_index":89,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"miscellaneous/variables.html":{}}}],["keywords",{"_index":216,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["klub_test_db",{"_index":962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":280,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":272,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["license",{"_index":937,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":914,"title":{},"body":{"index.html":{}}}],["list",{"_index":504,"title":{},"body":{"controllers/TagController.html":{}}}],["localhost",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["log",{"_index":1045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logger",{"_index":104,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/IErrorObject.html":{},"controllers/TagController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logger.error(error",{"_index":612,"title":{},"body":{"controllers/TagController.html":{}}}],["logger.info",{"_index":156,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["logger.info('post",{"_index":570,"title":{},"body":{"controllers/TagController.html":{}}}],["logger.info(`getting",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["logging",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lts.1",{"_index":857,"title":{},"body":{"dependencies.html":{}}}],["main",{"_index":820,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["matchcorefields",{"_index":636,"title":{},"body":{"injectables/TagService.html":{}}}],["matchcorefields(firsttagdto",{"_index":652,"title":{},"body":{"injectables/TagService.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memberof",{"_index":111,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{}}}],["mergeconditions",{"_index":637,"title":{},"body":{"injectables/TagService.html":{}}}],["mergeconditions(firstcondition",{"_index":656,"title":{},"body":{"injectables/TagService.html":{}}}],["message",{"_index":236,"title":{},"body":{"classes/CsvFileValidationError.html":{},"interfaces/IErrorObject.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":868,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/Migrations1683551307003.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["migration",{"_index":154,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrationcontext",{"_index":148,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrationcontext(id",{"_index":153,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrationcontext.keys().map((id",{"_index":151,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrationinterface",{"_index":314,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["migrationmodule",{"_index":152,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrations",{"_index":135,"title":{},"body":{"injectables/ConfigService.html":{},"miscellaneous/variables.html":{}}}],["migrations.ts",{"_index":312,"title":{},"body":{"classes/Migrations1683551307003.html":{},"coverage.html":{}}}],["migrations.ts:12",{"_index":321,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["migrations.ts:4",{"_index":318,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["migrations.ts:6",{"_index":323,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["migrations/*{.ts,.js",{"_index":136,"title":{},"body":{"injectables/ConfigService.html":{}}}],["migrations1683551307003",{"_index":310,"title":{"classes/Migrations1683551307003.html":{}},"body":{"classes/Migrations1683551307003.html":{},"coverage.html":{}}}],["migrationsdir",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrationsrun",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":879,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["misuse",{"_index":964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":913,"title":{},"body":{"index.html":{}}}],["mode",{"_index":905,"title":{},"body":{"index.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/**/*.entity{.ts,.js",{"_index":134,"title":{},"body":{"injectables/ConfigService.html":{}}}],["modules/health/health.controller",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/tags/tag.module",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":926,"title":{},"body":{"index.html":{}}}],["morgan",{"_index":854,"title":{},"body":{"dependencies.html":{}}}],["multer",{"_index":551,"title":{},"body":{"controllers/TagController.html":{},"dependencies.html":{}}}],["multermodule",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["multermodule.register",{"_index":57,"title":{},"body":{"modules/AppModule.html":{}}}],["multiline",{"_index":117,"title":{},"body":{"injectables/ConfigService.html":{}}}],["myśliwiec",{"_index":932,"title":{},"body":{"index.html":{}}}],["n",{"_index":115,"title":{},"body":{"injectables/ConfigService.html":{}}}],["name",{"_index":86,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["naming",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["namingstrategy",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["need",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nest",{"_index":897,"title":{},"body":{"index.html":{}}}],["nestfactory.create",{"_index":1041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["nestframework",{"_index":936,"title":{},"body":{"index.html":{}}}],["nestjs/axios",{"_index":412,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CsvFileValidationError.html":{},"controllers/HealthController.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"modules/SharedModule.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":828,"title":{},"body":{"dependencies.html":{}}}],["nestjs/core",{"_index":830,"title":{},"body":{"dependencies.html":{}}}],["nestjs/jwt",{"_index":415,"title":{},"body":{"modules/SharedModule.html":{},"dependencies.html":{}}}],["nestjs/mapped",{"_index":766,"title":{},"body":{"classes/UpdateTagDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":44,"title":{},"body":{"modules/AppModule.html":{},"controllers/TagController.html":{},"dependencies.html":{}}}],["nestjs/swagger",{"_index":206,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"dependencies.html":{}}}],["nestjs/terminus",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"controllers/HealthController.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/ConfigService.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"dependencies.html":{}}}],["new",{"_index":305,"title":{},"body":{"interfaces/IErrorObject.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["node.js",{"_index":889,"title":{},"body":{"index.html":{}}}],["nodeenv",{"_index":75,"title":{},"body":{"injectables/ConfigService.html":{}}}],["nodemon",{"_index":858,"title":{},"body":{"dependencies.html":{}}}],["notagfoundexception",{"_index":352,"title":{"classes/NoTagFoundException.html":{}},"body":{"classes/NoTagFoundException.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["notagfoundexception(id",{"_index":702,"title":{},"body":{"injectables/TagService.html":{}}}],["notagfoundexception})@apibadrequestresponse({status",{"_index":499,"title":{},"body":{"controllers/TagController.html":{}}}],["notfoundexception",{"_index":664,"title":{},"body":{"injectables/TagService.html":{}}}],["notfoundexception('no",{"_index":714,"title":{},"body":{"injectables/TagService.html":{}}}],["now",{"_index":343,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["npm",{"_index":860,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["null",{"_index":331,"title":{},"body":{"classes/Migrations1683551307003.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["nullable",{"_index":424,"title":{},"body":{"entities/Tag.html":{}}}],["number",{"_index":92,"title":{},"body":{"injectables/ConfigService.html":{}}}],["number(this.get(key",{"_index":131,"title":{},"body":{"injectables/ConfigService.html":{}}}],["numberofcols",{"_index":746,"title":{},"body":{"injectables/TagService.html":{}}}],["numberofrows",{"_index":748,"title":{},"body":{"injectables/TagService.html":{}}}],["object",{"_index":595,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["object.keys(process.env",{"_index":122,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.values(entitymodule",{"_index":147,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object.values(migrationmodule",{"_index":155,"title":{},"body":{"injectables/ConfigService.html":{}}}],["object})@apibadrequestresponse({status",{"_index":528,"title":{},"body":{"controllers/TagController.html":{}}}],["one",{"_index":458,"title":{},"body":{"classes/TagConditions.html":{}}}],["open",{"_index":915,"title":{},"body":{"index.html":{}}}],["optional",{"_index":88,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["overview",{"_index":941,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":825,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["papaparse",{"_index":862,"title":{},"body":{"dependencies.html":{}}}],["param",{"_index":129,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/ResponseTagDto.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["param('id",{"_index":577,"title":{},"body":{"controllers/TagController.html":{}}}],["parameters",{"_index":85,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CsvFileValidationError.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"miscellaneous/functions.html":{}}}],["parse",{"_index":549,"title":{},"body":{"controllers/TagController.html":{},"dependencies.html":{}}}],["parse(filecontent",{"_index":609,"title":{},"body":{"controllers/TagController.html":{}}}],["parseuuidpipe",{"_index":535,"title":{},"body":{"controllers/TagController.html":{}}}],["partialtype",{"_index":765,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["partialtype(createtagdto",{"_index":769,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["passed",{"_index":719,"title":{},"body":{"injectables/TagService.html":{}}}],["password",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["patch",{"_index":515,"title":{},"body":{"controllers/TagController.html":{}}}],["patch(':id",{"_index":585,"title":{},"body":{"controllers/TagController.html":{}}}],["path",{"_index":113,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{}}}],["pg",{"_index":865,"title":{},"body":{"dependencies.html":{}}}],["pk_e7dc17249a1148a1970748eda99",{"_index":349,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["please",{"_index":924,"title":{},"body":{"index.html":{}}}],["pool",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["port",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["portal",{"_index":490,"title":{},"body":{"controllers/TagController.html":{}}}],["post",{"_index":475,"title":{},"body":{"controllers/TagController.html":{}}}],["post('bulk",{"_index":523,"title":{},"body":{"controllers/TagController.html":{}}}],["post()@httpcode(httpstatus.ok)@apioperation({summary",{"_index":474,"title":{},"body":{"controllers/TagController.html":{}}}],["post(`${endpoint",{"_index":1034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_db",{"_index":1051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_host",{"_index":1052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_password",{"_index":1053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_port",{"_index":1054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgres_user",{"_index":1055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["postgresconnectionoptions",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posttag",{"_index":799,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":249,"title":{},"body":{"controllers/HealthController.html":{},"controllers/TagController.html":{}}}],["prevent",{"_index":963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primary",{"_index":350,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["primarygeneratedcolumn",{"_index":452,"title":{},"body":{"entities/Tag.html":{}}}],["primarygeneratedcolumn('uuid",{"_index":434,"title":{},"body":{"entities/Tag.html":{}}}],["private",{"_index":264,"title":{},"body":{"controllers/HealthController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["process",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.node_env",{"_index":302,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["process.env.postgres_db",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_host",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_password",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_port",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env.postgres_user",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["process.env[envname",{"_index":123,"title":{},"body":{"injectables/ConfigService.html":{}}}],["process.env[envname].replace(/\\\\n/g",{"_index":124,"title":{},"body":{"injectables/ConfigService.html":{}}}],["process.env[key",{"_index":130,"title":{},"body":{"injectables/ConfigService.html":{}}}],["prodformat",{"_index":287,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["production",{"_index":303,"title":{},"body":{"interfaces/IErrorObject.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["progressive",{"_index":888,"title":{},"body":{"index.html":{}}}],["project",{"_index":916,"title":{},"body":{"index.html":{}}}],["promise",{"_index":254,"title":{},"body":{"controllers/HealthController.html":{},"classes/Migrations1683551307003.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["properties",{"_index":166,"title":{"properties.html":{}},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"properties.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["public",{"_index":72,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/Migrations1683551307003.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["put(`${endpoint}/${tenantcode",{"_index":1036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["puttenant",{"_index":800,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["query",{"_index":162,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["query(new",{"_index":580,"title":{},"body":{"controllers/TagController.html":{}}}],["queryrunner",{"_index":320,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["queryrunner.query",{"_index":326,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["queryrunner.query(`drop",{"_index":351,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["r",{"_index":716,"title":{},"body":{"injectables/TagService.html":{}}}],["rdbms",{"_index":157,"title":{},"body":{"injectables/ConfigService.html":{}}}],["rdbms.ts",{"_index":783,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["rdbmsconfig",{"_index":106,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["read",{"_index":925,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["record",{"_index":290,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["reflect",{"_index":867,"title":{},"body":{"dependencies.html":{}}}],["relationloadstrategy",{"_index":161,"title":{},"body":{"injectables/ConfigService.html":{}}}],["replace",{"_index":114,"title":{},"body":{"injectables/ConfigService.html":{}}}],["replaceerror",{"_index":279,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["replaceerror(value",{"_index":286,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["replacer",{"_index":282,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":622,"title":{},"body":{"classes/TagRepository.html":{},"index.html":{}}}],["req",{"_index":1021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["request",{"_index":483,"title":{},"body":{"controllers/TagController.html":{}}}],["request(app.gethttpserver",{"_index":1030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["require",{"_index":139,"title":{},"body":{"injectables/ConfigService.html":{}}}],["required",{"_index":177,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["res",{"_index":687,"title":{},"body":{"injectables/TagService.html":{}}}],["res.conditions",{"_index":692,"title":{},"body":{"injectables/TagService.html":{}}}],["res.foreach(function",{"_index":715,"title":{},"body":{"injectables/TagService.html":{}}}],["res.isstatic",{"_index":695,"title":{},"body":{"injectables/TagService.html":{}}}],["res.length",{"_index":712,"title":{},"body":{"injectables/TagService.html":{}}}],["res.updatedby",{"_index":694,"title":{},"body":{"injectables/TagService.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}],["resource",{"_index":169,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683551307003.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/variables.html":{}}}],["resource_id",{"_index":336,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["resource_type",{"_index":337,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["resourceid",{"_index":170,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/variables.html":{}}}],["resourcetype",{"_index":171,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"miscellaneous/variables.html":{}}}],["resourcevalidation",{"_index":559,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["resourcevalidationexception",{"_index":358,"title":{"classes/ResourceValidationException.html":{}},"body":{"classes/ResourceValidationException.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["response",{"_index":601,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["response.push(new",{"_index":717,"title":{},"body":{"injectables/TagService.html":{}}}],["response.status(httpstatus.no_content",{"_index":724,"title":{},"body":{"injectables/TagService.html":{}}}],["responsetagdto",{"_index":361,"title":{"classes/ResponseTagDto.html":{}},"body":{"classes/ResponseTagDto.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["responsetagdto(await",{"_index":696,"title":{},"body":{"injectables/TagService.html":{}}}],["responsetagdto(r",{"_index":718,"title":{},"body":{"injectables/TagService.html":{}}}],["responsetagdto(res",{"_index":703,"title":{},"body":{"injectables/TagService.html":{}}}],["responsetagdto})@apinocontentresponse({status",{"_index":518,"title":{},"body":{"controllers/TagController.html":{}}}],["responsetagdto})@apinotfoundresponse({status",{"_index":510,"title":{},"body":{"controllers/TagController.html":{}}}],["result",{"_index":611,"title":{},"body":{"controllers/TagController.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"controllers/HealthController.html":{},"classes/Migrations1683551307003.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["revenue",{"_index":192,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["row",{"_index":752,"title":{},"body":{"injectables/TagService.html":{}}}],["run",{"_index":902,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["save",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":893,"title":{},"body":{"index.html":{}}}],["schema",{"_index":789,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["schema:${configuration.schema",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["secondcondition",{"_index":657,"title":{},"body":{"injectables/TagService.html":{}}}],["secondcondition.length",{"_index":676,"title":{},"body":{"injectables/TagService.html":{}}}],["secondcondition[0].keywords",{"_index":679,"title":{},"body":{"injectables/TagService.html":{}}}],["secondtagdto",{"_index":653,"title":{},"body":{"injectables/TagService.html":{}}}],["security",{"_index":851,"title":{},"body":{"dependencies.html":{}}}],["send(data",{"_index":1035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["server",{"_index":894,"title":{},"body":{"index.html":{}}}],["services/config.service",{"_index":416,"title":{},"body":{"modules/SharedModule.html":{}}}],["set",{"_index":678,"title":{},"body":{"injectables/TagService.html":{}}}],["set('accept",{"_index":1032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setting",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["setupswagger",{"_index":822,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["setupswagger(app",{"_index":883,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["shared/services/config.service",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["shared/shared.module",{"_index":55,"title":{},"body":{"modules/AppModule.html":{}}}],["sharedmodule",{"_index":54,"title":{"modules/SharedModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules.html":{},"overview.html":{}}}],["side",{"_index":895,"title":{},"body":{"index.html":{}}}],["single",{"_index":492,"title":{},"body":{"controllers/TagController.html":{}}}],["slug",{"_index":340,"title":{},"body":{"classes/Migrations1683551307003.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"injectables/TagService.html":{}}}],["snakenamingstrategy",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"index.html":{}}}],["sponsors",{"_index":919,"title":{},"body":{"index.html":{}}}],["src/.../cli",{"_index":951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../createcorefieldsstring.ts",{"_index":948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../createslug.ts",{"_index":949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../csvhelpers.ts",{"_index":950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../health.controller.requests.ts",{"_index":954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../index.ts",{"_index":955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../logger.ts",{"_index":953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":881,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../rdbms.ts",{"_index":947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../resourcevalidation.validation.ts",{"_index":958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../shared.module.ts",{"_index":957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger",{"_index":956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../swagger.ts",{"_index":882,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/.../tag.controller.request.ts",{"_index":952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../validate",{"_index":959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":66,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":67,"title":{},"body":{"injectables/AppService.html":{}}}],["src/common/constants/strings/index.ts",{"_index":776,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/common/dto/createdby.dto.ts",{"_index":227,"title":{},"body":{"classes/CreatedByDto.html":{},"coverage.html":{}}}],["src/common/dto/createdby.dto.ts:14",{"_index":229,"title":{},"body":{"classes/CreatedByDto.html":{}}}],["src/common/dto/updatedby.dto.ts",{"_index":770,"title":{},"body":{"classes/UpdatedByDto.html":{},"coverage.html":{}}}],["src/common/dto/updatedby.dto.ts:14",{"_index":771,"title":{},"body":{"classes/UpdatedByDto.html":{}}}],["src/config/cli",{"_index":782,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/logger.ts",{"_index":271,"title":{},"body":{"interfaces/IErrorObject.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/config/logger.ts:24",{"_index":274,"title":{},"body":{"interfaces/IErrorObject.html":{}}}],["src/config/rdbms.ts",{"_index":787,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/exceptions/csvfilevalidationerror.ts",{"_index":231,"title":{},"body":{"classes/CsvFileValidationError.html":{},"coverage.html":{}}}],["src/exceptions/csvfilevalidationerror.ts:3",{"_index":235,"title":{},"body":{"classes/CsvFileValidationError.html":{}}}],["src/exceptions/notagfoundexception.exception",{"_index":563,"title":{},"body":{"controllers/TagController.html":{}}}],["src/exceptions/notagfoundexception.exception.ts",{"_index":353,"title":{},"body":{"classes/NoTagFoundException.html":{},"coverage.html":{}}}],["src/exceptions/notagfoundexception.exception.ts:3",{"_index":354,"title":{},"body":{"classes/NoTagFoundException.html":{}}}],["src/exceptions/resourcevalidationexception.exception.ts",{"_index":359,"title":{},"body":{"classes/ResourceValidationException.html":{},"coverage.html":{}}}],["src/exceptions/resourcevalidationexception.exception.ts:3",{"_index":360,"title":{},"body":{"classes/ResourceValidationException.html":{}}}],["src/exceptions/tagconditionsvalidationexception.exception.ts",{"_index":463,"title":{},"body":{"classes/TagConditionsValidationException.html":{},"coverage.html":{}}}],["src/exceptions/tagconditionsvalidationexception.exception.ts:3",{"_index":464,"title":{},"body":{"classes/TagConditionsValidationException.html":{}}}],["src/exceptions/unmatchingtagdetailsvalidationexception.exception.ts",{"_index":754,"title":{},"body":{"classes/UnmatchingTagDetailsValidationException.html":{},"coverage.html":{}}}],["src/exceptions/unmatchingtagdetailsvalidationexception.exception.ts:3",{"_index":755,"title":{},"body":{"classes/UnmatchingTagDetailsValidationException.html":{}}}],["src/main.ts",{"_index":790,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/migrations",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/migrations/1683551307003",{"_index":311,"title":{},"body":{"classes/Migrations1683551307003.html":{},"coverage.html":{}}}],["src/modules/**/*.entity{.ts,.js",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/modules/health/__tests__/health.controller.requests.ts",{"_index":793,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/health/health.controller.ts",{"_index":248,"title":{},"body":{"controllers/HealthController.html":{},"coverage.html":{}}}],["src/modules/health/health.controller.ts:39",{"_index":253,"title":{},"body":{"controllers/HealthController.html":{}}}],["src/modules/tags/dto/__tests__/tag.controller.request.ts",{"_index":797,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/tags/dto/createtag.dto.ts",{"_index":165,"title":{},"body":{"classes/CreateTagDto.html":{},"coverage.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:114",{"_index":203,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:129",{"_index":190,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:27",{"_index":193,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:42",{"_index":196,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:57",{"_index":198,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:72",{"_index":200,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/createtag.dto.ts:98",{"_index":180,"title":{},"body":{"classes/CreateTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts",{"_index":241,"title":{},"body":{"classes/GetTagDto.html":{},"coverage.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:18",{"_index":243,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:33",{"_index":244,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:48",{"_index":245,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:63",{"_index":246,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/gettag.dto.ts:78",{"_index":247,"title":{},"body":{"classes/GetTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts",{"_index":362,"title":{},"body":{"classes/ResponseTagDto.html":{},"coverage.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:121",{"_index":366,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:136",{"_index":374,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:152",{"_index":365,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:20",{"_index":372,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:35",{"_index":375,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:50",{"_index":386,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:65",{"_index":376,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:80",{"_index":377,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/responsetag.dto.ts:95",{"_index":378,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["src/modules/tags/dto/tagconditions.dto.ts",{"_index":456,"title":{},"body":{"classes/TagConditions.html":{},"coverage.html":{}}}],["src/modules/tags/dto/tagconditions.dto.ts:15",{"_index":460,"title":{},"body":{"classes/TagConditions.html":{}}}],["src/modules/tags/dto/tagconditions.dto.ts:28",{"_index":459,"title":{},"body":{"classes/TagConditions.html":{}}}],["src/modules/tags/dto/tagconditions.dto.ts:47",{"_index":461,"title":{},"body":{"classes/TagConditions.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts",{"_index":756,"title":{},"body":{"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:105",{"_index":761,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:119",{"_index":757,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:29",{"_index":758,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:45",{"_index":762,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:60",{"_index":764,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:75",{"_index":759,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/updatetag.dto.ts:90",{"_index":760,"title":{},"body":{"classes/UpdateTagDto.html":{}}}],["src/modules/tags/dto/validations/resourcevalidation.validation.ts",{"_index":809,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/tags/tag.controller.ts",{"_index":466,"title":{},"body":{"controllers/TagController.html":{},"coverage.html":{}}}],["src/modules/tags/tag.controller.ts:121",{"_index":511,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:155",{"_index":507,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:193",{"_index":520,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:233",{"_index":501,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:270",{"_index":530,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.controller.ts:82",{"_index":485,"title":{},"body":{"controllers/TagController.html":{}}}],["src/modules/tags/tag.entity.ts",{"_index":418,"title":{},"body":{"entities/Tag.html":{},"coverage.html":{}}}],["src/modules/tags/tag.entity.ts:101",{"_index":431,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:109",{"_index":446,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:117",{"_index":447,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:125",{"_index":433,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:20",{"_index":435,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:28",{"_index":438,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:36",{"_index":444,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:44",{"_index":440,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:52",{"_index":441,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:60",{"_index":442,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:69",{"_index":425,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:77",{"_index":437,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:85",{"_index":443,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.entity.ts:93",{"_index":428,"title":{},"body":{"entities/Tag.html":{}}}],["src/modules/tags/tag.module.ts",{"_index":616,"title":{},"body":{"modules/TagModule.html":{}}}],["src/modules/tags/tag.respository.ts",{"_index":621,"title":{},"body":{"classes/TagRepository.html":{},"coverage.html":{}}}],["src/modules/tags/tag.respository.ts:11",{"_index":624,"title":{},"body":{"classes/TagRepository.html":{}}}],["src/modules/tags/tag.service.ts",{"_index":632,"title":{},"body":{"injectables/TagService.html":{},"coverage.html":{}}}],["src/modules/tags/tag.service.ts:115",{"_index":648,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:133",{"_index":647,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:164",{"_index":641,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:184",{"_index":660,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:218",{"_index":654,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:231",{"_index":650,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:24",{"_index":639,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:247",{"_index":662,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:36",{"_index":658,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:55",{"_index":644,"title":{},"body":{"injectables/TagService.html":{}}}],["src/modules/tags/tag.service.ts:68",{"_index":640,"title":{},"body":{"injectables/TagService.html":{}}}],["src/shared/services/config.service.ts",{"_index":70,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/shared/services/config.service.ts:15",{"_index":80,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:40",{"_index":94,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:50",{"_index":96,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:60",{"_index":99,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:70",{"_index":84,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:80",{"_index":91,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/services/config.service.ts:90",{"_index":101,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/shared/shared.module.ts",{"_index":409,"title":{},"body":{"modules/SharedModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/uploads",{"_index":59,"title":{},"body":{"modules/AppModule.html":{},"controllers/TagController.html":{}}}],["src/utils/createcorefieldsstring.ts",{"_index":814,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/createslug.ts",{"_index":815,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/csvhelpers.ts",{"_index":816,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/swagger",{"_index":817,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/utils/swagger.ts",{"_index":821,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["src/utils/validate",{"_index":109,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["stack",{"_index":281,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["start",{"_index":903,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":906,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":907,"title":{},"body":{"index.html":{}}}],["started",{"_index":887,"title":{"index.html":{}},"body":{}}],["starter",{"_index":899,"title":{},"body":{"index.html":{}}}],["statements",{"_index":774,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":373,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["status",{"_index":568,"title":{},"body":{"controllers/TagController.html":{}}}],["stay",{"_index":928,"title":{},"body":{"index.html":{}}}],["storage",{"_index":597,"title":{},"body":{"controllers/TagController.html":{}}}],["str",{"_index":1049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["strategies",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["strict",{"_index":256,"title":{},"body":{"controllers/HealthController.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"miscellaneous/variables.html":{}}}],["strings",{"_index":118,"title":{},"body":{"injectables/ConfigService.html":{}}}],["string})@apinocontentresponse({status",{"_index":497,"title":{},"body":{"controllers/TagController.html":{}}}],["successful",{"_index":496,"title":{},"body":{"controllers/TagController.html":{}}}],["successfully",{"_index":478,"title":{},"body":{"controllers/TagController.html":{}}}],["summary",{"_index":567,"title":{},"body":{"controllers/TagController.html":{}}}],["super",{"_index":628,"title":{},"body":{"classes/TagRepository.html":{}}}],["super('no",{"_index":355,"title":{},"body":{"classes/NoTagFoundException.html":{}}}],["super(message",{"_index":238,"title":{},"body":{"classes/CsvFileValidationError.html":{},"classes/ResourceValidationException.html":{},"classes/TagConditionsValidationException.html":{},"classes/UnmatchingTagDetailsValidationException.html":{}}}],["support",{"_index":116,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"modules.html":{}}}],["svc/tags",{"_index":571,"title":{},"body":{"controllers/TagController.html":{},"miscellaneous/variables.html":{}}}],["svg",{"_index":939,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["t000",{"_index":380,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["t001",{"_index":197,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["table",{"_index":328,"title":{},"body":{"classes/Migrations1683551307003.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":824,"title":{},"body":{"coverage.html":{}}}],["tag",{"_index":174,"title":{"entities/Tag.html":{}},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/NoTagFoundException.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tag\".\"tags",{"_index":329,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["tag.'})@apicreatedresponse({status",{"_index":476,"title":{},"body":{"controllers/TagController.html":{}}}],["tag.conditions",{"_index":401,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.controller",{"_index":617,"title":{},"body":{"modules/TagModule.html":{}}}],["tag.entity",{"_index":387,"title":{},"body":{"classes/ResponseTagDto.html":{},"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["tag.id",{"_index":389,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.isstatic",{"_index":403,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.name",{"_index":391,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.resource",{"_index":395,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.resourceid",{"_index":397,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.resourcetype",{"_index":399,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.respository",{"_index":619,"title":{},"body":{"modules/TagModule.html":{},"injectables/TagService.html":{}}}],["tag.service",{"_index":562,"title":{},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{}}}],["tag.slug",{"_index":405,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tag.type",{"_index":393,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["tagconditions",{"_index":172,"title":{"classes/TagConditions.html":{}},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["tagconditions.dto",{"_index":214,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/UpdateTagDto.html":{}}}],["tagconditionsvalidationexception",{"_index":462,"title":{"classes/TagConditionsValidationException.html":{}},"body":{"classes/TagConditionsValidationException.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["tagcontroller",{"_index":465,"title":{"controllers/TagController.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"coverage.html":{}}}],["tagmodule",{"_index":35,"title":{"modules/TagModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TagModule.html":{},"modules.html":{},"overview.html":{}}}],["tagrepository",{"_index":618,"title":{"classes/TagRepository.html":{}},"body":{"modules/TagModule.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"coverage.html":{}}}],["tagrepository.manager",{"_index":630,"title":{},"body":{"classes/TagRepository.html":{}}}],["tagrepository.queryrunner",{"_index":631,"title":{},"body":{"classes/TagRepository.html":{}}}],["tagrepository.target",{"_index":629,"title":{},"body":{"classes/TagRepository.html":{}}}],["tags",{"_index":467,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["tagservice",{"_index":561,"title":{"injectables/TagService.html":{}},"body":{"controllers/TagController.html":{},"modules/TagModule.html":{},"injectables/TagService.html":{},"coverage.html":{},"overview.html":{}}}],["tenantcode",{"_index":1029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["terminusmodule",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["test",{"_index":128,"title":{},"body":{"injectables/ConfigService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":912,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":911,"title":{},"body":{"index.html":{}}}],["tests",{"_index":909,"title":{},"body":{"index.html":{}}}],["text",{"_index":333,"title":{},"body":{"classes/Migrations1683551307003.html":{},"entities/Tag.html":{}}}],["thanks",{"_index":918,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.conditions",{"_index":400,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.get('node_env",{"_index":125,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.healthcheck.check",{"_index":265,"title":{},"body":{"controllers/HealthController.html":{}}}],["this.id",{"_index":388,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.isstatic",{"_index":402,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.matchcorefields(todotag",{"_index":731,"title":{},"body":{"injectables/TagService.html":{}}}],["this.mergeconditions",{"_index":735,"title":{},"body":{"injectables/TagService.html":{}}}],["this.mergeconditions(createconditions",{"_index":693,"title":{},"body":{"injectables/TagService.html":{}}}],["this.name",{"_index":390,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.nodeenv",{"_index":127,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.resource",{"_index":394,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.resourceid",{"_index":396,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.resourcetype",{"_index":398,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.slug",{"_index":404,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.tagrepository.find",{"_index":680,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.findone",{"_index":688,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.save",{"_index":691,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.save(res",{"_index":697,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.save(todo",{"_index":722,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.save(todotag",{"_index":739,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagrepository.softdelete(id",{"_index":723,"title":{},"body":{"injectables/TagService.html":{}}}],["this.tagservice.create(createtagdto",{"_index":575,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.delete(id",{"_index":593,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.getalltags(gettagdto",{"_index":584,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.getbyid(id",{"_index":578,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.update(id",{"_index":591,"title":{},"body":{"controllers/TagController.html":{}}}],["this.tagservice.uploadtags(result",{"_index":613,"title":{},"body":{"controllers/TagController.html":{}}}],["this.type",{"_index":392,"title":{},"body":{"classes/ResponseTagDto.html":{}}}],["this.typeormhealthindicator.pingcheck('postgres",{"_index":266,"title":{},"body":{"controllers/HealthController.html":{}}}],["throw",{"_index":701,"title":{},"body":{"injectables/TagService.html":{},"miscellaneous/variables.html":{}}}],["timestamp",{"_index":342,"title":{},"body":{"classes/Migrations1683551307003.html":{},"entities/Tag.html":{}}}],["todo",{"_index":720,"title":{},"body":{"injectables/TagService.html":{}}}],["todo.updatedby",{"_index":721,"title":{},"body":{"injectables/TagService.html":{}}}],["todoconditions",{"_index":733,"title":{},"body":{"injectables/TagService.html":{}}}],["todoisstatic",{"_index":732,"title":{},"body":{"injectables/TagService.html":{}}}],["todotag",{"_index":730,"title":{},"body":{"injectables/TagService.html":{}}}],["todotag.conditions",{"_index":734,"title":{},"body":{"injectables/TagService.html":{}}}],["todotag.isstatic",{"_index":736,"title":{},"body":{"injectables/TagService.html":{}}}],["todotag.updatedby",{"_index":737,"title":{},"body":{"injectables/TagService.html":{}}}],["touch",{"_index":929,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":837,"title":{},"body":{"dependencies.html":{}}}],["transports",{"_index":277,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["transports.console",{"_index":306,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["true",{"_index":141,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/Migrations1683551307003.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"miscellaneous/variables.html":{}}}],["true})@apioperation({summary",{"_index":489,"title":{},"body":{"controllers/TagController.html":{}}}],["try",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ts",{"_index":150,"title":{},"body":{"injectables/ConfigService.html":{}}}],["twitter",{"_index":935,"title":{},"body":{"index.html":{}}}],["type",{"_index":87,"title":{},"body":{"injectables/ConfigService.html":{},"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/CsvFileValidationError.html":{},"classes/GetTagDto.html":{},"controllers/HealthController.html":{},"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"classes/NoTagFoundException.html":{},"classes/ResourceValidationException.html":{},"classes/ResponseTagDto.html":{},"modules/SharedModule.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"classes/TagConditionsValidationException.html":{},"controllers/TagController.html":{},"classes/TagRepository.html":{},"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["typeorm",{"_index":324,"title":{},"body":{"classes/Migrations1683551307003.html":{},"entities/Tag.html":{},"classes/TagRepository.html":{},"dependencies.html":{}}}],["typeorm/driver/mongodb/bson.typings",{"_index":213,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["typeormconfig",{"_index":78,"title":{},"body":{"injectables/ConfigService.html":{}}}],["typeormhealthindicator",{"_index":261,"title":{},"body":{"controllers/HealthController.html":{}}}],["typeormmodule",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"modules/TagModule.html":{}}}],["typeormmodule.forfeature([tag",{"_index":620,"title":{},"body":{"modules/TagModule.html":{}}}],["typeormmodule.forrootasync",{"_index":56,"title":{},"body":{"modules/AppModule.html":{}}}],["typeormmoduleoptions",{"_index":102,"title":{},"body":{"injectables/ConfigService.html":{}}}],["types",{"_index":767,"title":{},"body":{"classes/UpdateTagDto.html":{},"dependencies.html":{}}}],["types/node",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["typescript",{"_index":898,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":179,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/TagConditions.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":908,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":642,"title":{},"body":{"injectables/TagService.html":{}}}],["unlicensed",{"_index":945,"title":{},"body":{"properties.html":{}}}],["unmatching",{"_index":744,"title":{},"body":{"injectables/TagService.html":{}}}],["unmatchingtagdetailsvalidationexception",{"_index":667,"title":{"classes/UnmatchingTagDetailsValidationException.html":{}},"body":{"injectables/TagService.html":{},"classes/UnmatchingTagDetailsValidationException.html":{},"coverage.html":{}}}],["up",{"_index":316,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["up(queryrunner",{"_index":322,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["update",{"_index":471,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["update(id",{"_index":512,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["updateby",{"_index":448,"title":{},"body":{"entities/Tag.html":{}}}],["updateconditions",{"_index":729,"title":{},"body":{"injectables/TagService.html":{}}}],["updated_at",{"_index":345,"title":{},"body":{"classes/Migrations1683551307003.html":{},"entities/Tag.html":{}}}],["updated_by",{"_index":346,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["updatedat",{"_index":421,"title":{},"body":{"entities/Tag.html":{}}}],["updatedatecolumn",{"_index":453,"title":{},"body":{"entities/Tag.html":{}}}],["updatedatecolumn({type",{"_index":445,"title":{},"body":{"entities/Tag.html":{}}}],["updatedby",{"_index":422,"title":{},"body":{"entities/Tag.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["updatedbydto",{"_index":487,"title":{"classes/UpdatedByDto.html":{}},"body":{"controllers/TagController.html":{},"classes/UpdatedByDto.html":{},"coverage.html":{}}}],["updatedbydto.updatedby",{"_index":594,"title":{},"body":{"controllers/TagController.html":{}}}],["updateisstatic",{"_index":726,"title":{},"body":{"injectables/TagService.html":{}}}],["updatetagdto",{"_index":513,"title":{"classes/UpdateTagDto.html":{}},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{},"classes/UpdateTagDto.html":{},"coverage.html":{}}}],["updatetagdto.conditions",{"_index":727,"title":{},"body":{"injectables/TagService.html":{}}}],["updatetagdto.conditions.length",{"_index":728,"title":{},"body":{"injectables/TagService.html":{}}}],["updatetagdto.resource",{"_index":590,"title":{},"body":{"controllers/TagController.html":{}}}],["updatetagdto.resourceid",{"_index":588,"title":{},"body":{"controllers/TagController.html":{}}}],["updatetagdto.resourcetype",{"_index":589,"title":{},"body":{"controllers/TagController.html":{}}}],["updatetagdto.updatedby",{"_index":738,"title":{},"body":{"injectables/TagService.html":{}}}],["updator",{"_index":763,"title":{},"body":{"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["upload",{"_index":532,"title":{},"body":{"controllers/TagController.html":{}}}],["upload')@httpcode(httpstatus.ok)@apioperation({summary",{"_index":524,"title":{},"body":{"controllers/TagController.html":{}}}],["uploadedfile",{"_index":536,"title":{},"body":{"controllers/TagController.html":{}}}],["uploadfile",{"_index":472,"title":{},"body":{"controllers/TagController.html":{}}}],["uploadfile(file",{"_index":521,"title":{},"body":{"controllers/TagController.html":{}}}],["uploads",{"_index":63,"title":{},"body":{"modules/AppModule.html":{}}}],["uploadtags",{"_index":638,"title":{},"body":{"injectables/TagService.html":{}}}],["uploadtags(grid",{"_index":661,"title":{},"body":{"injectables/TagService.html":{}}}],["url",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["use",{"_index":255,"title":{},"body":{"controllers/HealthController.html":{}}}],["usefactory",{"_index":60,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{}}}],["useinterceptors",{"_index":537,"title":{},"body":{"controllers/TagController.html":{}}}],["user",{"_index":493,"title":{},"body":{"controllers/TagController.html":{},"injectables/TagService.html":{}}}],["username",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userrepository",{"_index":673,"title":{},"body":{"injectables/TagService.html":{}}}],["userservice",{"_index":625,"title":{},"body":{"classes/TagRepository.html":{},"injectables/TagService.html":{}}}],["using",{"_index":699,"title":{},"body":{"injectables/TagService.html":{}}}],["utf",{"_index":607,"title":{},"body":{"controllers/TagController.html":{}}}],["utils/createcorefieldsstring",{"_index":670,"title":{},"body":{"injectables/TagService.html":{}}}],["utils/createslug",{"_index":672,"title":{},"body":{"injectables/TagService.html":{}}}],["utils/csvhelpers",{"_index":554,"title":{},"body":{"controllers/TagController.html":{}}}],["uuid",{"_index":184,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/Migrations1683551307003.html":{},"entities/Tag.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{}}}],["uuid_generate_v4",{"_index":332,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["uuidv4",{"_index":1020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validateenv",{"_index":108,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["validationpipe",{"_index":538,"title":{},"body":{"controllers/TagController.html":{}}}],["validator",{"_index":212,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/CreatedByDto.html":{},"classes/GetTagDto.html":{},"classes/ResponseTagDto.html":{},"entities/Tag.html":{},"classes/UpdateTagDto.html":{},"classes/UpdatedByDto.html":{},"dependencies.html":{}}}],["value",{"_index":283,"title":{},"body":{"interfaces/IErrorObject.html":{},"classes/Migrations1683551307003.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":844,"title":{},"body":{"dependencies.html":{}}}],["variable",{"_index":777,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":946,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["varying",{"_index":335,"title":{},"body":{"classes/Migrations1683551307003.html":{}}}],["vendor",{"_index":218,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["version",{"_index":944,"title":{},"body":{"properties.html":{}}}],["void",{"_index":651,"title":{},"body":{"injectables/TagService.html":{}}}],["warn",{"_index":1044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["watch",{"_index":904,"title":{},"body":{"index.html":{}}}],["website",{"_index":933,"title":{},"body":{"index.html":{}}}],["wholesale",{"_index":220,"title":{},"body":{"classes/CreateTagDto.html":{},"classes/ResponseTagDto.html":{},"classes/TagConditions.html":{}}}],["winston",{"_index":278,"title":{},"body":{"interfaces/IErrorObject.html":{},"dependencies.html":{}}}],["winston.transports.file",{"_index":307,"title":{},"body":{"interfaces/IErrorObject.html":{},"miscellaneous/variables.html":{}}}],["world",{"_index":69,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":922,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/SharedModule.html":{},"modules/TagModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nTagModule\n\nTagModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            HealthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            TagModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { MulterModule } from '@nestjs/platform-express';\nimport { TerminusModule } from '@nestjs/terminus';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { AppService } from './app.service';\nimport { HealthController } from './modules/health/health.controller';\nimport { TagModule } from './modules/tags/tag.module';\nimport { ConfigService } from './shared/services/config.service';\nimport { SharedModule } from './shared/shared.module';\n\n@Module({\n  imports: [\n    TypeOrmModule.forRootAsync({\n      imports: [\n        SharedModule,\n        MulterModule.register({\n          dest: 'src/uploads',\n        }),\n      ],\n      useFactory: (configService: ConfigService) => configService.typeOrmConfig,\n      inject: [ConfigService],\n    }),\n    TerminusModule,\n    TagModule,\n    MulterModule.register({\n      dest: './uploads',\n    }),\n  ],\n  controllers: [HealthController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/shared/services/config.service.ts\n        \n\n\n            \n                Description\n            \n            \n                ConfigService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                get\n                            \n                            \n                                    Public\n                                getNumber\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    nodeEnv\n                                \n                                \n                                    isDevEnv\n                                \n                                \n                                    isTestEnv\n                                \n                                \n                                    typeOrmConfig\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/shared/services/config.service.ts:15\n                            \n                        \n\n                \n                    \n                            constructor\nCreates an instance of ConfigService.\n\n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        get\n                        \n                    \n                \n            \n            \n                \n                    \n                    get(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:70\n                \n            \n\n\n            \n                \n                    get\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        {string}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getNumber\n                        \n                    \n                \n            \n            \n                \n                    \n                    getNumber(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/shared/services/config.service.ts:80\n                \n            \n\n\n            \n                \n                    getNumber\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        {number}\n\n                    \n                \n            \n        \n    \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        nodeEnv\n                    \n                \n\n                \n                    \n                        getnodeEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/config.service.ts:40\n                                \n                            \n                    \n                        \n                                nodeEnv\n\n\n                                \n                                \n                                \n                                    Returns :         string\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isDevEnv\n                    \n                \n\n                \n                    \n                        getisDevEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/config.service.ts:50\n                                \n                            \n                    \n                        \n                                isDevEnv\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        isTestEnv\n                    \n                \n\n                \n                    \n                        getisTestEnv()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/config.service.ts:60\n                                \n                            \n                    \n                        \n                                isTestEnv\n\n\n                                \n                                \n                                \n                                    Returns :         boolean\n\n                                \n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        typeOrmConfig\n                    \n                \n\n                \n                    \n                        gettypeOrmConfig()\n                    \n                \n                            \n                                \n                                    Defined in src/shared/services/config.service.ts:90\n                                \n                            \n                    \n                        \n                                typeOrmConfig\n\n\n                                \n                                \n                                \n                                    Returns :     TypeOrmModuleOptions\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport type { TypeOrmModuleOptions } from '@nestjs/typeorm';\nimport * as dotenv from 'dotenv';\nimport { logger } from '../../config/logger';\n\nimport rdbmsConfig from '../../config/rdbms';\n// import { validateEnv } from 'src/utils/validate-env';\n\n/**\n * ConfigService\n * @export\n * @class ConfigService\n */\n@Injectable()\nexport class ConfigService {\n  /**\n   * constructor\n   * Creates an instance of ConfigService.\n   * @memberof ConfigService\n   */\n  constructor() {\n    dotenv.config({\n      path: '.env',\n    });\n\n    // validateEnv();\n\n    // Replace \\\\n with \\n to support multiline strings in AWS\n    for (const envName of Object.keys(process.env)) {\n      process.env[envName] = process.env[envName].replace(/\\\\n/g, '\\n');\n    }\n  }\n\n  /**\n   * nodeEnv\n   * @readonly\n   * @type {string}\n   * @memberof ConfigService\n   */\n  get nodeEnv(): string {\n    return this.get('NODE_ENV') || 'development';\n  }\n\n  /**\n   * isDevEnv\n   * @readonly\n   * @type {boolean}\n   * @memberof ConfigService\n   */\n  get isDevEnv(): boolean {\n    return this.nodeEnv === 'development';\n  }\n\n  /**\n   * isTestEnv\n   * @readonly\n   * @type {boolean}\n   * @memberof ConfigService\n   */\n  get isTestEnv(): boolean {\n    return this.nodeEnv === 'test';\n  }\n\n  /**\n   * get\n   * @param {string} key\n   * @return {*}  {string}\n   * @memberof ConfigService\n   */\n  public get(key: string): string {\n    return process.env[key];\n  }\n\n  /**\n   * getNumber\n   * @param {string} key\n   * @return {*}  {number}\n   * @memberof ConfigService\n   */\n  public getNumber(key: string): number {\n    return Number(this.get(key));\n  }\n\n  /**\n   * typeOrmConfig\n   * @readonly\n   * @type {TypeOrmModuleOptions}\n   * @memberof ConfigService\n   */\n  get typeOrmConfig(): TypeOrmModuleOptions {\n    let entities = [__dirname + '/../../modules/**/*.entity{.ts,.js}'];\n    let migrations = [__dirname + '/../../migrations/*{.ts,.js}'];\n\n    if ((module as any).hot) {\n      const entityContext = (require as any).context(\n        './../../modules',\n        true,\n        /\\.entity\\.ts$/,\n      );\n      entities = entityContext.keys().map((id: any) => {\n        const entityModule = entityContext(id);\n        const [entity] = Object.values(entityModule);\n\n        return entity;\n      });\n      const migrationContext = (require as any).context(\n        './../../migrations',\n        false,\n        /\\.ts$/,\n      );\n      migrations = migrationContext.keys().map((id: any) => {\n        const migrationModule = migrationContext(id);\n        const [migration] = Object.values(migrationModule);\n\n        return migration;\n      });\n    }\n\n    logger.info(\n      `RDBMS config ${JSON.stringify({\n        ...rdbmsConfig,\n        entities,\n        migrations,\n      })}`,\n    );\n\n    return {\n      ...rdbmsConfig,\n      entities,\n      migrations,\n      autoLoadEntities: true,\n      relationLoadStrategy: 'query',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateTagDto.html":{"url":"classes/CreateTagDto.html","title":"class - CreateTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/createTag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conditions\n                            \n                            \n                                createdBy\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagConditions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiPropertyOptional({description: 'tag conditions', type: Array, isArray: true, required: false, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:98\n                        \n                    \n\n            \n                \n                    conditions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsUUID()@ApiProperty({description: 'identifier of tag creator', type: UUID, required: true, example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:129\n                        \n                    \n\n            \n                \n                    createdBy\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsDefined()@ApiProperty({description: 'name of tag', type: String, required: true, example: 'revenue'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:27\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resource', type: String, required: false, example: 'bank'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:42\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceId', type: String, required: false, example: 'T001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:57\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceType', type: String, required: false, example: 'GST'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:72\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@IsNotEmpty()@ApiProperty({description: 'type of tag', type: String, required: true, example: 'category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/createTag.dto.ts:114\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport {\n  IsDefined,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUUID,\n} from 'class-validator';\nimport { UUID } from 'typeorm/driver/mongodb/bson.typings';\nimport { TagConditions } from './tagConditions.dto';\n\nexport class CreateTagDto {\n  /**\n   * name\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsNotEmpty()\n  @IsDefined()\n  @ApiProperty({\n    description: 'name of tag',\n    type: String,\n    required: true,\n    example: 'revenue',\n  })\n  name: string;\n\n  /**\n   * resource\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resource',\n    type: String,\n    required: false,\n    example: 'bank',\n  })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceId',\n    type: String,\n    required: false,\n    example: 'T001',\n  })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceType',\n    type: String,\n    required: false,\n    example: 'GST',\n  })\n  resourceType?: string;\n\n  /**\n   * conditions\n   * @type {TagConditions[]}\n   * @memberof CreateTagDto\n   */\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'tag conditions',\n    type: Array,\n    isArray: true,\n    required: false,\n    example: [\n      {\n        field: 'description',\n        keywords: [\n          'Amazon Vendor Central',\n          'Amazon Wholesale',\n          'Apple',\n          'Cash Deposit',\n        ],\n        condition: 'contains',\n      },\n    ],\n  })\n  conditions?: TagConditions[];\n\n  /**\n   * type\n   * @type {string}\n   * @memberof CreateTagDto\n   */\n  @IsString()\n  @IsDefined()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'type of tag',\n    type: String,\n    required: true,\n    example: 'category',\n  })\n  type: string;\n\n  /**\n   * createdBy\n   * @type {UUID}\n   * @memberof CreateTagDto\n   */\n  @IsDefined()\n  @IsUUID()\n  @ApiProperty({\n    description: 'identifier of tag creator',\n    type: UUID,\n    required: true,\n    example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9',\n  })\n  createdBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatedByDto.html":{"url":"classes/CreatedByDto.html","title":"class - CreatedByDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatedByDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/createdBy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@ApiProperty({description: 'identifier of tag creator', type: UUID, required: true, example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/createdBy.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsString } from 'class-validator';\nimport { UUID } from 'typeorm/driver/mongodb/bson.typings';\n\nexport class CreatedByDto {\n  @IsDefined()\n  @IsString()\n  @ApiProperty({\n    description: 'identifier of tag creator',\n    type: UUID,\n    required: true,\n    example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9',\n  })\n  createdBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CsvFileValidationError.html":{"url":"classes/CsvFileValidationError.html","title":"class - CsvFileValidationError","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CsvFileValidationError\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/csvFileValidationError.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/csvFileValidationError.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class CsvFileValidationError extends HttpException {\n  constructor(message: string) {\n    super(message, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetTagDto.html":{"url":"classes/GetTagDto.html","title":"class - GetTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/getTag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'name of tag', type: String, required: true, example: 'revenue'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:18\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resource', type: String, required: false, example: 'bank'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:33\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceId', type: String, required: false, example: 'T001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:48\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceType', type: String, required: false, example: 'GST'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:63\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'type of tag', type: String, required: true, example: 'category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/getTag.dto.ts:78\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\n\nexport class GetTagDto {\n  /**\n   * name\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiProperty({\n    description: 'name of tag',\n    type: String,\n    required: true,\n    example: 'revenue',\n  })\n  name?: string;\n\n  /**\n   * resource\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resource',\n    type: String,\n    required: false,\n    example: 'bank',\n  })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceId',\n    type: String,\n    required: false,\n    example: 'T001',\n  })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceType',\n    type: String,\n    required: false,\n    example: 'GST',\n  })\n  resourceType?: string;\n\n  /**\n   * type\n   * @type {string}\n   * @memberof GetTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiProperty({\n    description: 'type of tag',\n    type: String,\n    required: true,\n    example: 'category',\n  })\n  type?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/HealthController.html":{"url":"controllers/HealthController.html","title":"controller - HealthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  HealthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/health/health.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                health\n            \n\n\n            \n                Description\n            \n            \n                HealthController\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                health\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        health\n                        \n                    \n                \n            \n            \n                \n                    \n                    health()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HealthCheck()\n                \n            \n\n            \n                \n                    Defined in src/modules/health/health.controller.ts:39\n                \n            \n\n\n            \n                \n                    health\n\n\n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        'use strict';\n\nimport { Controller, Get } from '@nestjs/common';\nimport { ApiTags } from '@nestjs/swagger';\nimport type { HealthCheckResult } from '@nestjs/terminus';\nimport {\n  HealthCheck,\n  HealthCheckService,\n  TypeOrmHealthIndicator,\n} from '@nestjs/terminus';\n\n/**\n * HealthController\n * @export\n * @class HealthController\n */\n@Controller('health')\n@ApiTags('Health')\nexport class HealthController {\n  /**\n   * constructor\n   * Creates an instance of HealthController.\n   * @param {HealthCheckService} healthCheck\n   * @param {TypeOrmHealthIndicator} typeOrmHealthIndicator\n   * @memberof HealthController\n   */\n  constructor(\n    private readonly healthCheck: HealthCheckService,\n    private typeOrmHealthIndicator: TypeOrmHealthIndicator,\n  ) {}\n\n  /**\n   * health\n   * @return {Promise}\n   * @memberof HealthController\n   */\n  @Get()\n  @HealthCheck()\n  public async health(): Promise {\n    return this.healthCheck.check([\n      () => this.typeOrmHealthIndicator.pingCheck('postgres'),\n    ]);\n  } // End of health\n} // End of HealthController\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/IErrorObject.html":{"url":"interfaces/IErrorObject.html","title":"interface - IErrorObject","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  IErrorObject\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/logger.ts\n        \n\n\n            \n                Description\n            \n            \n                IErrorObject\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            level\n                                        \n                                \n                                \n                                        \n                                            message\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        any\n\n                    \n                \n                        \n                            \n                                Defined in src/config/logger.ts:24\n                            \n                        \n            \n        \n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        level\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        level:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    level\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    message\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { createLogger, format, transports } from 'winston';\n\n/**\n * IErrorObject\n * @interface IErrorObject\n */\ninterface IErrorObject {\n  /**\n   * level\n   * @type {string}\n   * @memberof IErrorObject\n   */\n  level: string;\n\n  /**\n   * message\n   * @type {string}\n   * @memberof IErrorObject\n   */\n  message: string;\n\n  [key: string]: any;\n}\n\n/**\n * replaceError\n * @description\n * @param {*} { label, level, message, stack }\n */\nconst replaceError = ({ label, level, message, stack }: any) => ({\n  label,\n  level,\n  message,\n  stack,\n});\n\n/**\n * replacer\n * @description\n * @param {string} key\n * @param {*} value\n */\nconst replacer = (key: string, value: any) =>\n  value instanceof Error ? replaceError(value) : value;\n\n/**\n * prodFormat\n * @return {*}\n */\nconst prodFormat = () => format.combine(format.json({ replacer }));\n\n/**\n * formatMessage\n * @description\n * @param {Record} info\n */\nconst formatMessage = (info: Record) =>\n  `${info.level} ${info.message}`;\n\n/**\n * formatError\n * @description\n * @param {Record} info\n */\nconst formatError = (info: Record) =>\n  `${info.level} ${info.message}\\n\\n${info.stack}\\n`;\n\n/**\n * fmt\n * @description\n * @param {IErrorObject} info\n */\nconst fmt = (info: IErrorObject) =>\n  info instanceof Error ? formatError(info) : formatMessage(info);\n\n/**\n * devFormat\n * @return {*}\n */\nconst devFormat = () => format.combine(format.colorize(), format.printf(fmt));\n\n/**\n * logger\n *  @type {*}\n */\nexport const logger = createLogger({\n  exitOnError: false,\n  format: process.env.NODE_ENV === 'production' ? prodFormat() : devFormat(),\n  level: 'debug',\n  transports: [\n    new transports.Console(),\n    // new winston.transports.File({ filename: \"errors.log\" }),\n  ],\n});\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Migrations1683551307003.html":{"url":"classes/Migrations1683551307003.html","title":"class - Migrations1683551307003","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Migrations1683551307003\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/migrations/1683551307003-migrations.ts\n        \n\n\n\n\n            \n                Implements\n            \n            \n                        MigrationInterface\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                down\n                            \n                            \n                                    Public\n                                    Async\n                                up\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Migrations1683551307003'\n                    \n                \n                    \n                        \n                                Defined in src/migrations/1683551307003-migrations.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        down\n                        \n                    \n                \n            \n            \n                \n                    \n                    down(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1683551307003-migrations.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        up\n                        \n                    \n                \n            \n            \n                \n                    \n                    up(queryRunner: QueryRunner)\n                \n            \n\n\n            \n                \n                    Defined in src/migrations/1683551307003-migrations.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    queryRunner\n                                    \n                                            QueryRunner\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { MigrationInterface, QueryRunner } from 'typeorm';\n\nexport class Migrations1683551307003 implements MigrationInterface {\n  name = 'Migrations1683551307003';\n\n  public async up(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(\n      `CREATE TABLE \"tag\".\"tags\" (\"id\" uuid NOT NULL DEFAULT uuid_generate_v4(), \"name\" text NOT NULL, \"type\" text NOT NULL, \"resource\" character varying, \"resource_id\" character varying, \"resource_type\" character varying, \"conditions\" jsonb DEFAULT '[]', \"is_static\" boolean NOT NULL DEFAULT true, \"slug\" text NOT NULL, \"created_at\" TIMESTAMP NOT NULL DEFAULT now(), \"created_by\" text NOT NULL, \"updated_at\" TIMESTAMP NOT NULL DEFAULT now(), \"updated_by\" text NOT NULL, \"deleted_at\" TIMESTAMP, CONSTRAINT \"PK_e7dc17249a1148a1970748eda99\" PRIMARY KEY (\"id\"))`,\n    );\n  }\n\n  public async down(queryRunner: QueryRunner): Promise {\n    await queryRunner.query(`DROP TABLE \"tag\".\"tags\"`);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/NoTagFoundException.html":{"url":"classes/NoTagFoundException.html","title":"class - NoTagFoundException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  NoTagFoundException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/noTagFoundException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/noTagFoundException.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class NoTagFoundException extends HttpException {\n  constructor(message: string) {\n    super('No Tag Found with id: ' + message, HttpStatus.NO_CONTENT);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceValidationException.html":{"url":"classes/ResourceValidationException.html","title":"class - ResourceValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/resourceValidationException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/resourceValidationException.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class ResourceValidationException extends HttpException {\n  constructor(message: string) {\n    super(message, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResponseTagDto.html":{"url":"classes/ResponseTagDto.html","title":"class - ResponseTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResponseTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/responseTag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conditions\n                            \n                            \n                                    Optional\n                                id\n                            \n                            \n                                    Optional\n                                isStatic\n                            \n                            \n                                    Optional\n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                    Optional\n                                slug\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tag: Tag)\n                    \n                \n                        \n                            \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:152\n                            \n                        \n\n                \n                    \n                            constructor\nCreates an instance of ResponseTagDto.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tag\n                                                  \n                                                        \n                                                                        Tag\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagConditions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiPropertyOptional({description: 'tag conditions', type: Array, isArray: true, required: false, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:121\n                        \n                    \n\n            \n                \n                    conditions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiProperty({description: 'id of tag', type: String, required: true, example: 'e8a5f497-584c-459e-87ca-2f0d5b770405'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:20\n                        \n                    \n\n            \n                \n                    id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        isStatic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'is tag static or not', type: Boolean, required: false, example: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:136\n                        \n                    \n\n            \n                \n                    isStatic\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of tag', type: String, required: true, example: 'revenue'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:35\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resource', type: String, required: false, example: 'bank'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:65\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceId', type: String, required: false, example: 'T001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:80\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceType of tag', type: String, required: false, example: 'GST'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:95\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'slug of tag', type: String, required: false, example: 'revenue-category-10Bank-GST-T000-4b109a5a-8eaa-4f75-91ae-1735212bb75b'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:152\n                        \n                    \n\n            \n                \n                    slug\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'type of tag', type: String, required: true, example: 'category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/responseTag.dto.ts:50\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { IsOptional, IsString } from 'class-validator';\nimport { Tag } from './../tag.entity';\nimport { TagConditions } from './tagConditions.dto';\n\nexport class ResponseTagDto {\n  /**\n   * id\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiProperty({\n    description: 'id of tag',\n    type: String,\n    required: true,\n    example: 'e8a5f497-584c-459e-87ca-2f0d5b770405',\n  })\n  id?: string;\n\n  /**\n   * name\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of tag',\n    type: String,\n    required: true,\n    example: 'revenue',\n  })\n  name?: string;\n\n  /**\n   * type\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'type of tag',\n    type: String,\n    required: true,\n    example: 'category',\n  })\n  type?: string;\n\n  /**\n   * resource\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resource',\n    type: String,\n    required: false,\n    example: 'bank',\n  })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceId',\n    type: String,\n    required: false,\n    example: 'T001',\n  })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceType of tag',\n    type: String,\n    required: false,\n    example: 'GST',\n  })\n  resourceType?: string;\n\n  /**\n   * conditions\n   * @type {TagConditions[]}\n   * @memberof ResponseTagDto\n   */\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'tag conditions',\n    type: Array,\n    isArray: true,\n    required: false,\n    example: [\n      {\n        field: 'description',\n        keywords: [\n          'Amazon Vendor Central',\n          'Amazon Wholesale',\n          'Apple',\n          'Cash Deposit',\n        ],\n        condition: 'contains',\n      },\n    ],\n  })\n  conditions?: TagConditions[];\n\n  /**\n   * isStatic\n   * @type {Boolean}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'is tag static or not',\n    type: Boolean,\n    required: false,\n    example: true,\n  })\n  isStatic?: boolean;\n\n  /**\n   * slug\n   * @type {string}\n   * @memberof ResponseTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'slug of tag',\n    type: String,\n    required: false,\n    example:\n      'revenue-category-10Bank-GST-T000-4b109a5a-8eaa-4f75-91ae-1735212bb75b',\n  })\n  slug?: string;\n\n  /**\n   * constructor\n   * Creates an instance of ResponseTagDto.\n   * @param {Tag} tag\n   * @type {Tag}\n   * @memberof ResponseTagDto\n   */\n  constructor(tag: Tag) {\n    this.id = tag.id;\n    this.name = tag.name;\n    this.type = tag.type;\n    this.resource = tag.resource;\n    this.resourceId = tag.resourceId;\n    this.resourceType = tag.resourceType;\n    this.conditions = tag.conditions;\n    this.isStatic = tag.isStatic;\n    this.slug = tag.slug;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SharedModule.html":{"url":"modules/SharedModule.html","title":"module - SharedModule","body":"\n                   \n\n\n\n\n    Modules\n    SharedModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nSharedModule\n\nSharedModule\n\nConfigService  -->\n\nSharedModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/shared/shared.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            SharedModule\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ConfigService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { HttpModule } from '@nestjs/axios';\nimport { Global, Module } from '@nestjs/common';\nimport { JwtModule } from '@nestjs/jwt';\nimport { ConfigService } from './services/config.service';\n\n/**\n * providers\n * @type {*}\n */\nconst providers = [ConfigService];\n\n/**\n * SharedModule\n * @export\n * @class SharedModule\n */\n@Global()\n@Module({\n  providers,\n  imports: [\n    HttpModule,\n    JwtModule.registerAsync({\n      imports: [SharedModule],\n      useFactory: () => ({}),\n      inject: [ConfigService],\n    }),\n  ],\n  exports: [...providers, HttpModule, JwtModule],\n})\nexport class SharedModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Tag.html":{"url":"entities/Tag.html","title":"entity - Tag","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Tag\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/tag.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conditions\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                    Optional\n                                deletedAt\n                            \n                            \n                                id\n                            \n                            \n                                isStatic\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                slug\n                            \n                            \n                                type\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagConditions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsObject()@Column({type: 'jsonb', nullable: true, default: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:69\n                        \n                    \n\n            \n                \n                    conditions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @CreateDateColumn({type: 'timestamp', name: 'created_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:93\n                        \n                    \n\n            \n                \n                    createdTa\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:101\n                        \n                    \n\n            \n                \n                    createdBy\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        deletedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @DeleteDateColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:125\n                        \n                    \n\n            \n                \n                    deletedAt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn('uuid')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:20\n                        \n                    \n\n            \n                \n                    id\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStatic\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true, nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:77\n                        \n                    \n\n            \n                \n                    isStatic\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:28\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:44\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:52\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({nullable: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:60\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:85\n                        \n                    \n\n            \n                \n                    slug\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:36\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @UpdateDateColumn({type: 'timestamp', name: 'updated_at'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:109\n                        \n                    \n\n            \n                \n                    updatedAt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({type: 'text', nullable: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/tag.entity.ts:117\n                        \n                    \n\n            \n                \n                    updateBy\n\n                \n            \n\n        \n    \n\n    \n\n\n    \n        import { IsObject } from 'class-validator';\nimport {\n  Column,\n  CreateDateColumn,\n  DeleteDateColumn,\n  Entity,\n  PrimaryGeneratedColumn,\n  UpdateDateColumn,\n} from 'typeorm';\nimport { TagConditions } from './dto/tagConditions.dto';\n\n@Entity('tags')\nexport class Tag {\n  /**\n   * id\n   * @type {string}\n   * @memberof Tag\n   */\n  @PrimaryGeneratedColumn('uuid')\n  id: string;\n\n  /**\n   * name\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  name: string;\n\n  /**\n   * type\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  type: string;\n\n  /**\n   *resource\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ nullable: true })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ nullable: true })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ nullable: true })\n  resourceType?: string;\n\n  /**\n   * conditions\n   * @type {TagConditions[]}\n   * @memberof Tag\n   */\n  @IsObject()\n  @Column({ type: 'jsonb', nullable: true, default: [] })\n  conditions?: TagConditions[];\n\n  /**\n   * isStatic\n   * @type {Boolean}\n   * @memberof Tag\n   */\n  @Column({ default: true, nullable: false })\n  isStatic: boolean;\n\n  /**\n   * slug\n   * @type {string}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  slug: string;\n\n  /**\n   * createdTa\n   * @type {Date}\n   * @memberof Tag\n   */\n  @CreateDateColumn({ type: 'timestamp', name: 'created_at' })\n  createdAt?: Date;\n\n  /**\n   * createdBy\n   * @type {UUID}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  createdBy: string;\n\n  /**\n   * updatedAt\n   * @type {Date}\n   * @memberof Tag\n   */\n  @UpdateDateColumn({ type: 'timestamp', name: 'updated_at' })\n  updatedAt?: Date;\n\n  /**\n   * updateBy\n   * @type {UUID}\n   * @memberof Tag\n   */\n  @Column({ type: 'text', nullable: false })\n  updatedBy: string;\n\n  /**\n   * deletedAt\n   * @type {Date}\n   * @memberof tag\n   */\n  @DeleteDateColumn()\n  deletedAt?: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagConditions.html":{"url":"classes/TagConditions.html","title":"class - TagConditions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagConditions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/tagConditions.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                condition\n                            \n                            \n                                field\n                            \n                            \n                                keywords\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        condition\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'condition of one of conditions of a tag', type: String, required: true, example: 'contains'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/tagConditions.dto.ts:28\n                        \n                    \n\n            \n                \n                    condition\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        field\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'field of one of conditions of a tag', type: String, required: true, example: 'description'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/tagConditions.dto.ts:15\n                        \n                    \n\n            \n                \n                    field\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        keywords\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'keywords of one of conditions of a tag', type: Array, isArray: true, required: true, example: undefined})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/tagConditions.dto.ts:47\n                        \n                    \n\n            \n                \n                    keywords\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\n\nexport class TagConditions {\n  /**\n   * field\n   * @type {string}\n   * @memberof TagConditions\n   */\n  @ApiProperty({\n    description: 'field of one of conditions of a tag',\n    type: String,\n    required: true,\n    example: 'description',\n  })\n  field: string;\n\n  /**\n   * condition\n   * @type {string}\n   * @memberof TagConditions\n   */\n  @ApiProperty({\n    description: 'condition of one of conditions of a tag',\n    type: String,\n    required: true,\n    example: 'contains',\n  })\n  condition: string;\n\n  /**\n   * keywords\n   * @type {string[]}\n   * @memberof TagConditions\n   */\n  @ApiProperty({\n    description: 'keywords of one of conditions of a tag',\n    type: Array,\n    isArray: true,\n    required: true,\n    example: [\n      'Amazon Vendor Central',\n      'Amazon Wholesale',\n      'Apple',\n      'Cash Deposit',\n    ],\n  })\n  keywords: string[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagConditionsValidationException.html":{"url":"classes/TagConditionsValidationException.html","title":"class - TagConditionsValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagConditionsValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/tagConditionsValidationException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/tagConditionsValidationException.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class TagConditionsValidationException extends HttpException {\n  constructor(message: string) {\n    super(message, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/TagController.html":{"url":"controllers/TagController.html","title":"controller - TagController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  TagController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/tag.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                tags\n            \n\n\n            \n                Description\n            \n            \n                TagController\n\n            \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                delete\n                            \n                            \n                                    Public\n                                    Async\n                                getAll\n                            \n                            \n                                getById\n                            \n                            \n                                update\n                            \n                            \n                                uploadFile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTagDto: CreateTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Post: Create a new tag.'})@ApiCreatedResponse({status: 200, description: 'Tag has been successfully created. ', type: CreateTagDto})@ApiBadRequestResponse({status: 400, description: 'Tag has not been created. Bad request.', type: BadRequestException})\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:82\n                \n            \n\n\n            \n                \n                    create\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTagDto\n                                    \n                                                CreateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete\n                        \n                    \n                \n            \n            \n                \ndelete(id: string, updatedByDto: UpdatedByDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete(':id')@HttpCode(HttpStatus.OK)@ApiParam({name: 'id', type: String, required: true})@ApiOperation({summary: 'Portal: Archive a single user by its ID.'})@ApiOkResponse({status: 204, description: 'Successful', type: String})@ApiNoContentResponse({status: 204, description: 'No tag founded.', type: NoTagFoundException})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:233\n                \n            \n\n\n            \n                \n                    delete\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedByDto\n                                    \n                                                UpdatedByDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAll(getTagDto: GetTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@HttpCode(HttpStatus.OK)@ApiQuery({name: 'getTagDto', type: GetTagDto, required: true})@ApiOperation({summary: 'Get: Get a list of all tags with conditions.'})@ApiOkResponse({status: 200, description: 'Successful', type: GetTagDto})@ApiNotFoundResponse({status: 204, description: 'No tag founded.', type: NoTagFoundException})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:155\n                \n            \n\n\n            \n                \n                    getAll\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getTagDto\n                                    \n                                                GetTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getById\n                        \n                    \n                \n            \n            \n                \ngetById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@HttpCode(HttpStatus.OK)@ApiParam({name: 'id', type: String, required: true})@ApiOperation({summary: 'Get: Get a single tag by its ID.'})@ApiOkResponse({status: 200, description: 'Found tag successfully.', type: ResponseTagDto})@ApiNotFoundResponse({status: 204, description: 'No tag founded.', type: NoTagFoundException})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:121\n                \n            \n\n\n            \n                \n                    getById\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        update\n                        \n                    \n                \n            \n            \n                \nupdate(id: string, updateTagDto: UpdateTagDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Patch: Update existing tag with conditions'})@ApiOkResponse({status: 200, description: 'Successful', type: ResponseTagDto})@ApiNoContentResponse({status: 204, description: 'No tag founded.', type: NoTagFoundException})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})@Patch(':id')\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:193\n                \n            \n\n\n            \n                \n                    update\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTagDto\n                                    \n                                                UpdateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadFile\n                        \n                    \n                \n            \n            \n                \nuploadFile(file: Express.Multer.File, createdBy: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('bulk-upload')@HttpCode(HttpStatus.OK)@ApiOperation({summary: 'Post: Create tags from a csv file'})@ApiCreatedResponse({status: 201, description: 'Successful', type: Object})@ApiBadRequestResponse({status: 404, description: 'Bad request.', type: BadRequestException})@UseInterceptors(undefined)\n                \n            \n\n            \n                \n                    Defined in src/modules/tags/tag.controller.ts:270\n                \n            \n\n\n            \n                \n                    create bulk-upload\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    file\n                                    \n                                            Express.Multer.File\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createdBy\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     { message: string; }\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  BadRequestException,\n  Body,\n  Controller,\n  Delete,\n  Get,\n  HttpCode,\n  HttpStatus,\n  Param,\n  ParseUUIDPipe,\n  Patch,\n  Post,\n  Query,\n  UploadedFile,\n  UseInterceptors,\n  ValidationPipe,\n} from '@nestjs/common';\nimport * as fs from 'fs';\n\nimport { FileInterceptor } from '@nestjs/platform-express';\nimport {\n  ApiBadRequestResponse,\n  ApiCreatedResponse,\n  ApiNoContentResponse,\n  ApiNotFoundResponse,\n  ApiOkResponse,\n  ApiOperation,\n  ApiParam,\n  ApiQuery,\n  ApiTags,\n} from '@nestjs/swagger';\nimport { parse } from 'csv-parse';\nimport { diskStorage } from 'multer';\nimport { UpdatedByDto } from '../../common/dto/updatedBy.dto';\nimport { logger } from '../../config/logger';\nimport { csvFileFilter } from '../../utils/csvHelpers';\nimport { CreateTagDto } from './dto/createTag.dto';\nimport { GetTagDto } from './dto/getTag.dto';\nimport { ResponseTagDto } from './dto/responseTag.dto';\nimport { UpdateTagDto } from './dto/updateTag.dto';\nimport resourceValidation from './dto/validations/resourceValidation.validation';\nimport { TagService } from './tag.service';\nimport { NoTagFoundException } from 'src/exceptions/noTagFoundException.exception';\n\n/**\n * TagController\n * @export\n * @class TagController\n */\n@ApiTags('Tags')\n@Controller('tags')\nexport class TagController {\n  /**\n   * constructor\n   * Creates an instance of TagController.\n   * @param {TagService} tagService\n   * @memberof TagController\n   */\n  constructor(private readonly tagService: TagService) {}\n\n  /**\n   * create\n   * @param {CreateTagDto} createTagDto\n   * @return {Promise}\n   * @memberof TagController\n   */\n  @Post()\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Post: Create a new tag.',\n  })\n  @ApiCreatedResponse({\n    status: 200,\n    description: 'Tag has been successfully created. ',\n    type: CreateTagDto,\n  })\n  @ApiBadRequestResponse({\n    status: 400,\n    description: 'Tag has not been created. Bad request.',\n    type: BadRequestException,\n  })\n  public async create(\n    @Body(new ValidationPipe()) createTagDto: CreateTagDto,\n  ): Promise {\n    logger.info('Post: tags-svc/tags');\n    resourceValidation(\n      createTagDto.resourceId,\n      createTagDto.resourceType,\n      createTagDto.resource,\n    );\n    return this.tagService.create(createTagDto);\n  }\n\n  /**\n   *getById\n   * @param {string} id\n   * @return {Promise}\n   * @memberof TagController\n   */\n  @Get(':id')\n  @HttpCode(HttpStatus.OK)\n  @ApiParam({ name: 'id', type: String, required: true })\n  @ApiOperation({\n    summary: 'Get: Get a single tag by its ID.',\n  })\n  @ApiOkResponse({\n    status: 200,\n    description: 'Found tag successfully.',\n    type: ResponseTagDto,\n  })\n  @ApiNotFoundResponse({\n    status: 204,\n    description: 'No tag founded.',\n    type: NoTagFoundException,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  getById(\n    @Param('id', ParseUUIDPipe)\n    id: string,\n  ): Promise {\n    return this.tagService.getById(id);\n  }\n\n  /**\n   * getAll\n   * @param  {GetTagDto} getDto\n   * @return {Promise}\n   * @memberof TagController\n   */\n  @Get()\n  @HttpCode(HttpStatus.OK)\n  @ApiQuery({ name: 'getTagDto', type: GetTagDto, required: true })\n  @ApiOperation({\n    summary: 'Get: Get a list of all tags with conditions.',\n  })\n  @ApiOkResponse({\n    status: 200,\n    description: 'Successful',\n    type: GetTagDto,\n  })\n  @ApiNotFoundResponse({\n    status: 204,\n    description: 'No tag founded.',\n    type: NoTagFoundException,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  public async getAll(\n    @Query(new ValidationPipe()) getTagDto: GetTagDto,\n  ): Promise {\n    resourceValidation(\n      getTagDto.resourceId,\n      getTagDto.resourceType,\n      getTagDto.resource,\n    );\n    return this.tagService.getAllTags(getTagDto);\n  }\n\n  /**\n   * update\n   * @param {string} id\n   * @param {UpdateTagDto} updateTagDto\n   * @return {Promise}\n   * @memberof TagController\n   */\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Patch: Update existing tag with conditions',\n  })\n  @ApiOkResponse({\n    status: 200,\n    description: 'Successful',\n    type: ResponseTagDto,\n  })\n  @ApiNoContentResponse({\n    status: 204,\n    description: 'No tag founded.',\n    type: NoTagFoundException,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  @Patch(':id')\n  update(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body(new ValidationPipe()) updateTagDto: UpdateTagDto,\n  ): Promise {\n    console.log('Entered into controller function');\n    resourceValidation(\n      updateTagDto.resourceId,\n      updateTagDto.resourceType,\n      updateTagDto.resource,\n    );\n    return this.tagService.update(id, updateTagDto);\n  }\n\n  /**\n   * delete\n   * @param {string} id\n   * @return {HttpStatus.NO_CONTENT}\n   * @memberof TagController\n   */\n  @Delete(':id')\n  @HttpCode(HttpStatus.OK)\n  @ApiParam({ name: 'id', type: String, required: true })\n  @ApiOperation({\n    summary: 'Portal: Archive a single user by its ID.',\n  })\n  @ApiOkResponse({\n    status: 204,\n    description: 'Successful',\n    type: String,\n  })\n  @ApiNoContentResponse({\n    status: 204,\n    description: 'No tag founded.',\n    type: NoTagFoundException,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  delete(\n    @Param('id', ParseUUIDPipe) id: string,\n    @Body(new ValidationPipe()) updatedByDto: UpdatedByDto,\n  ) {\n    return this.tagService.delete(id, updatedByDto.updatedBy);\n  }\n\n  /**\n   * create bulk-upload\n   * @param {Express.Multer.File} file\n   * @param {string} createdBy\n   * @return {Object}\n   * @memberof TagController\n   */\n  @Post('bulk-upload')\n  @HttpCode(HttpStatus.OK)\n  @ApiOperation({\n    summary: 'Post: Create tags from a csv file',\n  })\n  @ApiCreatedResponse({\n    status: 201,\n    description: 'Successful',\n    type: Object,\n  })\n  @ApiBadRequestResponse({\n    status: 404,\n    description: 'Bad request.',\n    type: BadRequestException,\n  })\n  @UseInterceptors(\n    FileInterceptor('file', {\n      storage: diskStorage({\n        destination: './src/uploads',\n      }),\n      fileFilter: csvFileFilter,\n    }),\n  )\n  uploadFile(\n    @UploadedFile() file: Express.Multer.File,\n    @Body('createdBy', ParseUUIDPipe) createdBy: string,\n  ) {\n    const response = {\n      message: 'Tags created successfully!',\n    };\n    const csvFilePath = 'src/uploads/' + file.filename;\n    const fileContent = fs.readFileSync(csvFilePath, { encoding: 'utf-8' });\n\n    parse(fileContent, { delimiter: ',' }, (error, result) => {\n      if (error) {\n        logger.error(error);\n      }\n      this.tagService.uploadTags(result, createdBy);\n    });\n    return response;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TagModule.html":{"url":"modules/TagModule.html","title":"module - TagModule","body":"\n                   \n\n\n\n\n    Modules\n    TagModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_TagModule\n\n\n\ncluster_TagModule_providers\n\n\n\n\nTagService\n\nTagService\n\n\n\nTagModule\n\nTagModule\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/tags/tag.module.ts\n        \n\n\n\n        \n            Description\n        \n        \n            TagModule\n\n        \n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TagService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            TagController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TagService } from './tag.service';\nimport { TagController } from './tag.controller';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { Tag } from './tag.entity';\nimport { TagRepository } from './tag.respository';\n\n/**\n * TagModule\n * @export\n * @class TagModule\n */\n@Module({\n  controllers: [TagController],\n  providers: [TagService, TagRepository],\n  imports: [TypeOrmModule.forFeature([Tag])],\n})\nexport class TagModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TagRepository.html":{"url":"classes/TagRepository.html","title":"class - TagRepository","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TagRepository\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/tag.respository.ts\n        \n\n\n            \n                Description\n            \n            \n                TagRepository\n\n            \n\n            \n                Extends\n            \n            \n                    Repository\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/tags/tag.respository.ts:11\n                            \n                        \n\n                \n                    \n                            constructor\nCreates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { InjectRepository } from '@nestjs/typeorm';\nimport { Repository } from 'typeorm';\nimport { Tag } from './tag.entity';\n\n/**\n * TagRepository\n * @export\n * @class TagRepository\n * @extends {Repository}\n */\nexport class TagRepository extends Repository {\n  /**\n   * constructor\n   * Creates an instance of UserService.\n   * @class TagRepository\n   * @param {Repository} tagRepository\n   */\n  constructor(\n    @InjectRepository(Tag) private readonly tagRepository: Repository,\n  ) {\n    super(\n      tagRepository.target,\n      tagRepository.manager,\n      tagRepository.queryRunner,\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TagService.html":{"url":"injectables/TagService.html","title":"injectable - TagService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TagService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/tag.service.ts\n        \n\n\n            \n                Description\n            \n            \n                TagService\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                delete\n                            \n                            \n                                    Async\n                                findByFields\n                            \n                            \n                                    Async\n                                getAllTags\n                            \n                            \n                                    Public\n                                    Async\n                                getById\n                            \n                            \n                                isStaticValidation\n                            \n                            \n                                matchCoreFields\n                            \n                            \n                                mergeConditions\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                uploadTags\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(tagRepository: TagRepository)\n                    \n                \n                        \n                            \n                                Defined in src/modules/tags/tag.service.ts:24\n                            \n                        \n\n                \n                    \n                            constructor\nCreates an instance of UserService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        tagRepository\n                                                  \n                                                        \n                                                                        TagRepository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createTagDto: CreateTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:68\n                \n            \n\n\n            \n                \n                    create\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createTagDto\n                                    \n                                                CreateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        delete\n                        \n                    \n                \n            \n            \n                \n                    \n                    delete(id: string, updatedBy: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:164\n                \n            \n\n\n            \n                \n                    delete\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updatedBy\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        {Object}\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findByFields\n                        \n                    \n                \n            \n            \n                \n                    \n                    findByFields(fields: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    fields\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllTags\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllTags(getDto: GetTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:133\n                \n            \n\n\n            \n                \n                    getAllTags\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    getDto\n                                    \n                                                GetTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        getById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:115\n                \n            \n\n\n            \n                \n                    getById\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isStaticValidation\n                        \n                    \n                \n            \n            \n                \nisStaticValidation(isStatic: boolean, conditions: TagConditions[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:231\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isStatic\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    conditions\n                                    \n                                                TagConditions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        matchCoreFields\n                        \n                    \n                \n            \n            \n                \nmatchCoreFields(firstTagDto: Tag, secondTagDto: UpdateTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:218\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstTagDto\n                                    \n                                                Tag\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secondTagDto\n                                    \n                                                UpdateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        mergeConditions\n                        \n                    \n                \n            \n            \n                \nmergeConditions(firstCondition: TagConditions[], secondCondition: TagConditions[])\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    firstCondition\n                                    \n                                                TagConditions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    secondCondition\n                                    \n                                                TagConditions[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(id: string, updateTagDto: UpdateTagDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:184\n                \n            \n\n\n            \n                \n                    update\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateTagDto\n                                    \n                                                UpdateTagDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        uploadTags\n                        \n                    \n                \n            \n            \n                \nuploadTags(grid: any[][], createdBy: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/tags/tag.service.ts:247\n                \n            \n\n\n            \n                \n                    uploadTags\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    grid\n                                    \n                                            any[][]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createdBy\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpStatus, Injectable, NotFoundException } from '@nestjs/common';\nimport { InjectRepository } from '@nestjs/typeorm';\nimport { response } from 'express';\nimport { NoTagFoundException } from '../../exceptions/noTagFoundException.exception';\nimport { TagConditionsValidationException } from '../../exceptions/tagConditionsValidationException.exception';\nimport { UnmatchingTagDetailsValidationException } from '../../exceptions/unmatchingTagDetailsValidationException.exception';\nimport { CreateTagDto } from './dto/createTag.dto';\nimport { GetTagDto } from './dto/getTag.dto';\nimport { Tag } from './tag.entity';\n\nimport createCoreFieldsString from '../../utils/createCoreFieldsString';\nimport createSlug from '../../utils/createSlug';\nimport { ResponseTagDto } from './dto/responseTag.dto';\nimport { TagConditions } from './dto/tagConditions.dto';\nimport { UpdateTagDto } from './dto/updateTag.dto';\nimport { TagRepository } from './tag.respository';\n\n/**\n * TagService\n * @export\n * @class TagService\n */\n@Injectable()\nexport class TagService {\n  /**\n   * constructor\n   * Creates an instance of UserService.\n   * @param {UserRepository} userRepository\n   * @memberof UserService\n   */\n  constructor(\n    @InjectRepository(Tag)\n    private readonly tagRepository: TagRepository,\n  ) {}\n\n  mergeConditions(\n    firstCondition: TagConditions[],\n    secondCondition: TagConditions[],\n  ) {\n    if (firstCondition.length == 0) {\n      return secondCondition;\n    } else if (secondCondition.length == 0) {\n      return firstCondition;\n    }\n\n    firstCondition[0].keywords = [\n      ...new Set([\n        ...firstCondition[0].keywords,\n        ...secondCondition[0].keywords,\n      ]),\n    ];\n    return firstCondition;\n  }\n\n  async findByFields(fields: any) {\n    return await this.tagRepository.find({\n      where: { ...fields },\n    });\n  }\n\n  /**\n   * create\n   * @description Function for creating a new tag.\n   * @param {CreateTagDto} createTagDto\n   * @return {Promise}\n   * @memberof TagService\n   */\n  public async create(createTagDto: CreateTagDto): Promise {\n    const slug: string = createSlug({ ...createTagDto });\n    const createdBy = createTagDto.createdBy;\n    const createIsStatic: boolean =\n      createTagDto.conditions == null || createTagDto.conditions.length == 0;\n    const createConditions: TagConditions[] =\n      createIsStatic == true ? [] : createTagDto.conditions;\n\n    const res = await this.tagRepository.findOne({\n      where: {\n        name: createTagDto.name,\n        resource: createTagDto.resource,\n        resourceId: createTagDto.resourceId,\n        resourceType: createTagDto.resourceType,\n        type: createTagDto.type,\n      },\n    });\n\n    if (res == null) {\n      return new ResponseTagDto(\n        await this.tagRepository.save({\n          ...createTagDto,\n          updatedBy: createdBy,\n          slug: slug,\n          isStatic: createIsStatic,\n          conditions: createConditions,\n        }),\n      );\n    }\n\n    if (createIsStatic == false) {\n      res.conditions = this.mergeConditions(createConditions, res.conditions);\n    } else {\n      res.conditions = [];\n    }\n    res.updatedBy = createTagDto.createdBy;\n    res.isStatic = createIsStatic;\n    return new ResponseTagDto(await this.tagRepository.save(res));\n  }\n\n  /**\n   * getById\n   * @description Find an tag using its ID\n   * @param {string} id\n   * @return {Promise}\n   * @memberof TagService\n   */\n  public async getById(id: string): Promise {\n    const res: Tag = await this.tagRepository.findOne({\n      where: { id: id },\n    });\n    console.log(res);\n    if (res == null) {\n      throw new NoTagFoundException(id);\n    }\n    return new ResponseTagDto(res);\n  }\n\n  /**\n   * getAllTags\n   * @description Get all tags from database with query filters\n   * @param {GetTagDto} getDto\n   * @return {Promise}\n   * @memberof TagService\n   */\n  async getAllTags(getDto: GetTagDto): Promise {\n    console.log(getDto.resource);\n    const res: Tag[] = await this.tagRepository.find({\n      where: {\n        resource: getDto.resource,\n        resourceId: getDto.resourceId,\n        resourceType: getDto.resourceType,\n        type: getDto.type,\n        name: getDto.name,\n      },\n    });\n\n    if (res.length == 0) {\n      console.log('res.length==0');\n      throw new NotFoundException('No Tag found');\n    }\n    const response: ResponseTagDto[] = [];\n    res.forEach(function (r) {\n      response.push(new ResponseTagDto(r));\n    });\n    return response;\n  }\n\n  /**\n   * delete\n   * @description This function archive a tag with the passed tag id\n   * @param {string} id\n   * @param {string} updatedBy\n   * @return {Object}  {Object}\n   * @memberof TagService\n   */\n  async delete(id: string, updatedBy: string) {\n    const todo: Tag = await this.tagRepository.findOne({ where: { id: id } });\n    if (todo) {\n      todo.updatedBy = updatedBy;\n      await this.tagRepository.save(todo);\n    } else {\n      throw new NoTagFoundException(id);\n    }\n    await this.tagRepository.softDelete(id);\n    return response.status(HttpStatus.NO_CONTENT);\n  }\n\n  /**\n   * update\n   * @description Update an user entity with new data.\n   * @param {string} id\n   * @param {UpdateTagDto} updateTagDto\n   * @return {Promise}\n   * @memberof TagService\n   */\n  async update(\n    id: string,\n    updateTagDto: UpdateTagDto,\n  ): Promise {\n    const updateIsStatic: boolean =\n      updateTagDto.conditions == null || updateTagDto.conditions.length == 0;\n    const updateConditions: TagConditions[] =\n      updateIsStatic == true ? [] : updateTagDto.conditions;\n\n    const todoTag: Tag = await this.tagRepository.findOne({\n      where: { id: id },\n    });\n    if (!todoTag) {\n      throw new NoTagFoundException(id);\n    }\n    this.matchCoreFields(todoTag, updateTagDto);\n\n    const { isStatic: todoIsStatic, conditions: todoConditions } = todoTag;\n\n    if (todoIsStatic && !updateIsStatic) {\n      todoTag.conditions = updateConditions;\n    } else if (!todoIsStatic && updateIsStatic) {\n      todoTag.conditions = [];\n    } else if (!todoIsStatic && !updateIsStatic) {\n      todoTag.conditions = await this.mergeConditions(\n        todoConditions,\n        updateConditions,\n      );\n    }\n\n    todoTag.isStatic = updateIsStatic;\n    todoTag.updatedBy = updateTagDto.updatedBy;\n    return new ResponseTagDto(await this.tagRepository.save(todoTag));\n  }\n  matchCoreFields(firstTagDto: Tag, secondTagDto: UpdateTagDto) {\n    if (\n      createCoreFieldsString(firstTagDto) !=\n      createCoreFieldsString(secondTagDto)\n    ) {\n      console.log(createSlug(firstTagDto));\n      console.log(createSlug(secondTagDto));\n      throw new UnmatchingTagDetailsValidationException(\n        'resourceId, resourceType, resource, name or type of tag are unmatching with existing tag',\n      );\n    }\n  }\n\n  isStaticValidation(isStatic: boolean, conditions: TagConditions[]) {\n    if (conditions == null && isStatic == false) {\n      throw new TagConditionsValidationException(\n        'isStatic and conditions are inconsistent',\n      );\n    }\n  }\n\n  /**\n   * uploadTags\n   * @description Function for creating a new tag.\n   * @param {any[][]} grid\n   * @param {string} createdBy\n   * @return {void}\n   * @memberof TagService\n   */\n  uploadTags(grid: any[][], createdBy: string): void {\n    const numberOfCols = grid[0].length;\n    const numberOfRows = grid.length;\n\n    for (let col = 1; col ();\n\n      for (let row = 2; row \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UnmatchingTagDetailsValidationException.html":{"url":"classes/UnmatchingTagDetailsValidationException.html","title":"class - UnmatchingTagDetailsValidationException","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UnmatchingTagDetailsValidationException\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/exceptions/unmatchingTagDetailsValidationException.exception.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    HttpException\n            \n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(message: string)\n                    \n                \n                        \n                            \n                                Defined in src/exceptions/unmatchingTagDetailsValidationException.exception.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        message\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { HttpException, HttpStatus } from '@nestjs/common';\n\nexport class UnmatchingTagDetailsValidationException extends HttpException {\n  constructor(message: string) {\n    super(message, HttpStatus.BAD_REQUEST);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateTagDto.html":{"url":"classes/UpdateTagDto.html","title":"class - UpdateTagDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateTagDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/tags/dto/updateTag.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                conditions\n                            \n                            \n                                name\n                            \n                            \n                                    Optional\n                                resource\n                            \n                            \n                                    Optional\n                                resourceId\n                            \n                            \n                                    Optional\n                                resourceType\n                            \n                            \n                                type\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        conditions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TagConditions[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsOptional()@ApiPropertyOptional({description: 'tag conditions', type: Array, isArray: true, required: false})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:119\n                        \n                    \n\n            \n                \n                    conditions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@IsNotEmpty()@ApiProperty({description: 'name of tag', type: String, required: true, example: 'revenue'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:29\n                        \n                    \n\n            \n                \n                    name\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resource\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resource', type: String, required: false, example: 'bank'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:75\n                        \n                    \n\n            \n                \n                    resource\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceId', type: String, required: false, example: 'T001'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:90\n                        \n                    \n\n            \n                \n                    resourceId\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        resourceType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@ApiPropertyOptional({description: 'name of resourceType', type: String, required: false, example: 'GST'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:105\n                        \n                    \n\n            \n                \n                    resourceType\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        type\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsDefined()@IsNotEmpty()@ApiProperty({description: 'type of tag', type: String, required: true, example: 'category'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:45\n                        \n                    \n\n            \n                \n                    type\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsUUID()@ApiProperty({description: 'identifier of tag updator', type: UUID, required: true, example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/tags/dto/updateTag.dto.ts:60\n                        \n                    \n\n            \n                \n                    updatedBy\n\n                \n            \n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from '@nestjs/mapped-types';\nimport {\n  IsDefined,\n  IsNotEmpty,\n  IsOptional,\n  IsString,\n  IsUUID,\n} from 'class-validator';\nimport { CreateTagDto } from './createTag.dto';\nimport { TagConditions } from './tagConditions.dto';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\nimport { UUID } from 'typeorm/driver/mongodb/bson.typings';\n\nexport class UpdateTagDto extends PartialType(CreateTagDto) {\n  /**\n   * name\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsDefined()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'name of tag',\n    type: String,\n    required: true,\n    example: 'revenue',\n  })\n  name: string;\n\n  /**\n   * type\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsDefined()\n  @IsNotEmpty()\n  @ApiProperty({\n    description: 'type of tag',\n    type: String,\n    required: true,\n    example: 'category',\n  })\n  type: string;\n\n  /**\n   * updatedBy\n   * @type {UUID}\n   * @memberof UpdateTagDto\n   */\n  @IsDefined()\n  @IsUUID()\n  @ApiProperty({\n    description: 'identifier of tag updator',\n    type: UUID,\n    required: true,\n    example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9',\n  })\n  updatedBy: string;\n\n  /**\n   * resource\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resource',\n    type: String,\n    required: false,\n    example: 'bank',\n  })\n  resource?: string;\n\n  /**\n   * resourceId\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceId',\n    type: String,\n    required: false,\n    example: 'T001',\n  })\n  resourceId?: string;\n\n  /**\n   * resourceType\n   * @type {string}\n   * @memberof UpdateTagDto\n   */\n  @IsString()\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'name of resourceType',\n    type: String,\n    required: false,\n    example: 'GST',\n  })\n  resourceType?: string;\n\n  /**\n   * conditions\n   * @type {TagConditions[]}\n   * @memberof UpdateTagDto\n   */\n  @IsOptional()\n  @ApiPropertyOptional({\n    description: 'tag conditions',\n    type: Array,\n    isArray: true,\n    required: false,\n  })\n  conditions?: TagConditions[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdatedByDto.html":{"url":"classes/UpdatedByDto.html","title":"class - UpdatedByDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdatedByDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/dto/updatedBy.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsDefined()@IsString()@ApiProperty({description: 'identifier of tag updator', type: UUID, required: true, example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/common/dto/updatedBy.dto.ts:14\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from '@nestjs/swagger';\nimport { IsDefined, IsString } from 'class-validator';\nimport { UUID } from 'typeorm/driver/mongodb/bson.typings';\n\nexport class UpdatedByDto {\n  @IsDefined()\n  @IsString()\n  @ApiProperty({\n    description: 'identifier of tag updator',\n    type: UUID,\n    required: true,\n    example: '6ebb0c45-f709-44a6-9fd9-476d1c9484e9',\n  })\n  updatedBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/constants/strings/index.ts\n            \n            variable\n            INTERNAL_API_SECURITY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/constants/strings/index.ts\n            \n            variable\n            INTERNAL_AUTH0_API_SECURITY\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/common/dto/createdBy.dto.ts\n            \n            class\n            CreatedByDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/dto/updatedBy.dto.ts\n            \n            class\n            UpdatedByDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/cli-rdbms.ts\n            \n            variable\n            dataSource\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            interface\n            IErrorObject\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            devFormat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            fmt\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            formatError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            formatMessage\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            logger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            prodFormat\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            replaceError\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/logger.ts\n            \n            variable\n            replacer\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/rdbms.ts\n            \n            variable\n            config\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/rdbms.ts\n            \n            variable\n            getRDBMSConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/rdbms.ts\n            \n            variable\n            rdbmsConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/config/rdbms.ts\n            \n            variable\n            SCHEMA\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/exceptions/csvFileValidationError.ts\n            \n            class\n            CsvFileValidationError\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/noTagFoundException.exception.ts\n            \n            class\n            NoTagFoundException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/resourceValidationException.exception.ts\n            \n            class\n            ResourceValidationException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/tagConditionsValidationException.exception.ts\n            \n            class\n            TagConditionsValidationException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/exceptions/unmatchingTagDetailsValidationException.exception.ts\n            \n            class\n            UnmatchingTagDetailsValidationException\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/migrations/1683551307003-migrations.ts\n            \n            class\n            Migrations1683551307003\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/health/__tests__/health.controller.requests.ts\n            \n            variable\n            endpoint\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/health/__tests__/health.controller.requests.ts\n            \n            variable\n            getServerHealth\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/health/health.controller.ts\n            \n            controller\n            HealthController\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/__tests__/tag.controller.request.ts\n            \n            variable\n            deleteTenantByTenantCode\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/__tests__/tag.controller.request.ts\n            \n            variable\n            endpoint\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/__tests__/tag.controller.request.ts\n            \n            variable\n            postTag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/__tests__/tag.controller.request.ts\n            \n            variable\n            putTenant\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/createTag.dto.ts\n            \n            class\n            CreateTagDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/getTag.dto.ts\n            \n            class\n            GetTagDto\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/responseTag.dto.ts\n            \n            class\n            ResponseTagDto\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/tagConditions.dto.ts\n            \n            class\n            TagConditions\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/updateTag.dto.ts\n            \n            class\n            UpdateTagDto\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/modules/tags/dto/validations/resourceValidation.validation.ts\n            \n            variable\n            resourceValidation\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/tag.controller.ts\n            \n            controller\n            TagController\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/modules/tags/tag.entity.ts\n            \n            entity\n            Tag\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/tags/tag.respository.ts\n            \n            class\n            TagRepository\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/modules/tags/tag.service.ts\n            \n            injectable\n            TagService\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                src/shared/services/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                src/shared/shared.module.ts\n            \n            variable\n            providers\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/createCoreFieldsString.ts\n            \n            variable\n            createCoreFieldsString\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/createSlug.ts\n            \n            variable\n            createSlug\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/csvHelpers.ts\n            \n            variable\n            csvFileFilter\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger-doc-generator.ts\n            \n            variable\n            main\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            function\n            setupSwagger\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            variable\n            INTERNAL_API_SECURITY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/swagger.ts\n            \n            variable\n            INTERNAL_AUTH0_API_SECURITY\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/utils/validate-env.ts\n            \n            variable\n            validateEnv\n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/axios : ^2.0.0\n        \n            @nestjs/common : ^9.4.0\n        \n            @nestjs/config : ^2.3.1\n        \n            @nestjs/core : ^9.4.0\n        \n            @nestjs/jwt : ^10.0.3\n        \n            @nestjs/mapped-types : *\n        \n            @nestjs/platform-express : ^9.4.0\n        \n            @nestjs/swagger : ^6.3.0\n        \n            @nestjs/terminus : ^9.2.2\n        \n            @nestjs/typeorm : ^9.0.1\n        \n            axios : ^1.4.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            compression : ^1.7.4\n        \n            cross-env : ^7.0.3\n        \n            cross-var : ^1.1.0\n        \n            csv-parse : ^5.3.10\n        \n            dotenv : ^16.0.3\n        \n            envalid : ^7.3.1\n        \n            fs : ^0.0.1-security\n        \n            install : ^0.13.0\n        \n            morgan : ^1.10.0\n        \n            multer : ^1.4.5-lts.1\n        \n            nodemon : ^2.0.22\n        \n            npm : ^9.6.6\n        \n            papaparse : ^5.4.1\n        \n            path : ^0.12.7\n        \n            pg : ^8.10.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.2.0\n        \n            typeorm : ^0.3.15\n        \n            typeorm-naming-strategies : ^4.1.0\n        \n            url : ^0.11.0\n        \n            winston : ^3.8.2\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                        \n                            setupSwagger   (src/.../swagger.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n    src/utils/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        setupSwagger\n                        \n                    \n                \n            \n            \n                \nsetupSwagger(app: INestApplication)\n                \n            \n\n\n\n\n            \n                \n                    setupSwagger\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    app\n                                    \n                                            INestApplication\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SharedModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TagModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_SharedModule\n\n\n\ncluster_SharedModule_exports\n\n\n\ncluster_SharedModule_providers\n\n\n\ncluster_TagModule\n\n\n\ncluster_TagModule_providers\n\n\n\n\nTagModule\n\nTagModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nTagModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nConfigService \n\nConfigService \n\n\n\nSharedModule\n\nSharedModule\n\nConfigService  -->\n\nSharedModule->ConfigService \n\n\n\n\n\nConfigService\n\nConfigService\n\nSharedModule -->\n\nConfigService->SharedModule\n\n\n\n\n\nTagService\n\nTagService\n\nTagModule -->\n\nTagService->TagModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    3 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    1 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Interface\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            config   (src/.../rdbms.ts)\n                        \n                        \n                            createCoreFieldsString   (src/.../createCoreFieldsString.ts)\n                        \n                        \n                            createSlug   (src/.../createSlug.ts)\n                        \n                        \n                            csvFileFilter   (src/.../csvHelpers.ts)\n                        \n                        \n                            dataSource   (src/.../cli-rdbms.ts)\n                        \n                        \n                            deleteTenantByTenantCode   (src/.../tag.controller.request.ts)\n                        \n                        \n                            devFormat   (src/.../logger.ts)\n                        \n                        \n                            endpoint   (src/.../health.controller.requests.ts)\n                        \n                        \n                            endpoint   (src/.../tag.controller.request.ts)\n                        \n                        \n                            fmt   (src/.../logger.ts)\n                        \n                        \n                            formatError   (src/.../logger.ts)\n                        \n                        \n                            formatMessage   (src/.../logger.ts)\n                        \n                        \n                            getRDBMSConfig   (src/.../rdbms.ts)\n                        \n                        \n                            getServerHealth   (src/.../health.controller.requests.ts)\n                        \n                        \n                            INTERNAL_API_SECURITY   (src/.../swagger.ts)\n                        \n                        \n                            INTERNAL_API_SECURITY   (src/.../index.ts)\n                        \n                        \n                            INTERNAL_AUTH0_API_SECURITY   (src/.../swagger.ts)\n                        \n                        \n                            INTERNAL_AUTH0_API_SECURITY   (src/.../index.ts)\n                        \n                        \n                            logger   (src/.../logger.ts)\n                        \n                        \n                            main   (src/.../swagger-doc-generator.ts)\n                        \n                        \n                            postTag   (src/.../tag.controller.request.ts)\n                        \n                        \n                            prodFormat   (src/.../logger.ts)\n                        \n                        \n                            providers   (src/.../shared.module.ts)\n                        \n                        \n                            putTenant   (src/.../tag.controller.request.ts)\n                        \n                        \n                            rdbmsConfig   (src/.../rdbms.ts)\n                        \n                        \n                            replaceError   (src/.../logger.ts)\n                        \n                        \n                            replacer   (src/.../logger.ts)\n                        \n                        \n                            resourceValidation   (src/.../resourceValidation.validation.ts)\n                        \n                        \n                            SCHEMA   (src/.../rdbms.ts)\n                        \n                        \n                            validateEnv   (src/.../validate-env.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/config/rdbms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        config\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Record\n\n                    \n                \n                \n                    \n                        Default value : {\n  test: {\n    // hard-coding test database as klub_test_db to prevent misuse\n    database: 'tags',\n    entities: ['dist/modules/**/*.entity{.ts,.js}'],\n    extra: {\n      max: 5,\n      min: 2,\n      cli: {\n        migrationsDir: 'src/migrations',\n      },\n    }, // connection pool\n    host: 'localhost',\n    password: '',\n    port: 5432,\n    synchronize: false,\n    logging: false,\n    type: 'postgres',\n    username: 'admin',\n    namingStrategy: new SnakeNamingStrategy(),\n    migrations: ['dist/migrations/*{.ts,.js}'],\n    schema: SCHEMA,\n    migrationsRun: true,\n  },\n  development: {\n    database: process.env.POSTGRES_DB,\n    entities: ['src/modules/**/*.entity{.ts,.js}'],\n    extra: {\n      max: 5,\n      min: 2,\n      cli: {\n        migrationsDir: 'src/migrations',\n      },\n\n      //Cannot find name 'process'. Do you need to install type definitions for node? Try `npm i --save-dev @types/node`.\n    }, // connection pool\n    host: process.env.POSTGRES_HOST,\n    password: process.env.POSTGRES_PASSWORD,\n    port: +process.env.POSTGRES_PORT!,\n    synchronize: false,\n    logging: true,\n    type: 'postgres',\n    username: process.env.POSTGRES_USER,\n    namingStrategy: new SnakeNamingStrategy(),\n    migrations: ['dist/migrations/*{.ts,.js}'],\n    schema: SCHEMA,\n  },\n  production: {\n    database: process.env.POSTGRES_DB,\n    entities: ['dist/modules/**/*.entity{.ts,.js}'],\n    extra: {\n      max: 5,\n      min: 2,\n      cli: {\n        migrationsDir: 'src/migrations',\n      },\n    }, // connection pool\n    host: process.env.POSTGRES_HOST,\n    password: process.env.POSTGRES_PASSWORD,\n    port: +process.env.POSTGRES_PORT!,\n    synchronize: false,\n    logging: true,\n    type: 'postgres',\n    username: process.env.POSTGRES_USER,\n    namingStrategy: new SnakeNamingStrategy(),\n    migrations: ['dist/migrations/*{.ts,.js}'],\n    schema: SCHEMA,\n  },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getRDBMSConfig\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (env: string | undefined): PostgresConnectionOptions => {\n  if (!env) {\n    // Setting default database to development\n    env = 'development';\n    logger.info(`Getting dbms config for ${env} environment`);\n\n    return config.development;\n  } else {\n    const configuration: PostgresConnectionOptions = config[env];\n    logger.info(\n      `Connecting to database:${configuration.database} ********* schema:${configuration.schema}`,\n    );\n\n    return configuration;\n  }\n}\n                    \n                \n\n            \n                \n                    getRDBMSConfig\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rdbmsConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     PostgresConnectionOptions\n\n                    \n                \n                \n                    \n                        Default value : getRDBMSConfig(\n  process.env.NODE_ENV,\n)\n                    \n                \n\n            \n                \n                    rdbmsConfig\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        SCHEMA\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'tag'\n                    \n                \n\n\n        \n    \n\n    src/utils/createCoreFieldsString.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createCoreFieldsString\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (dto: any) => {\n  const name: string = dto.name != null ? dto.name + '-' : '';\n  const type: string = dto.type != null ? dto.type + '-' : '';\n  const resourceId: string = dto.resourceId != null ? dto.resourceId + '-' : '';\n  const resourceType: string =\n    dto.resourceType != null ? dto.resourceType + '-' : '';\n  const resource: string = dto.resource != null ? dto.resource : '';\n  return name + type + resource + resourceType + resourceId;\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/createSlug.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createSlug\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (dto: any) => {\n  const name: string = dto.name != null ? dto.name + '-' : '';\n  const type: string = dto.type != null ? dto.type + '-' : '';\n  const resourceId: string = dto.resourceId != null ? dto.resourceId + '-' : '';\n  const resourceType: string =\n    dto.resourceType != null ? dto.resourceType + '-' : '';\n  const resource: string = dto.resource != null ? dto.resource + '-' : '';\n  return name + type + resource + resourceType + resourceId + uuidv4();\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/csvHelpers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        csvFileFilter\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (req, file, callback) => {\n  if (!file.originalname.match(/\\.(csv)$/)) {\n    return callback(\n      new CsvFileValidationError('Only CSV files are allowed.'),\n      false,\n    );\n  }\n  callback(null, true);\n}\n                    \n                \n\n\n        \n    \n\n    src/config/cli-rdbms.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new DataSource(rdbmsConfig)\n                    \n                \n\n\n        \n    \n\n    src/modules/tags/dto/__tests__/tag.controller.request.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        deleteTenantByTenantCode\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  tenantCode: string,\n  app: INestApplication,\n) =>\n  request(app.getHttpServer())\n    .delete(`${endpoint}/${tenantCode}`)\n    .set('Accept', 'application/json')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : '/tags-svc/tags'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        postTag\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (data: any, app: INestApplication) =>\n  request(app.getHttpServer())\n    .post(`${endpoint}`)\n    .send(data)\n    .set('Accept', 'application/json')\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        putTenant\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  tenantCode: string,\n  data: any,\n  app: INestApplication,\n) =>\n  request(app.getHttpServer())\n    .put(`${endpoint}/${tenantCode}`)\n    .send(data)\n    .set('Accept', 'application/json')\n                    \n                \n\n\n        \n    \n\n    src/config/logger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        devFormat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => format.combine(format.colorize(), format.printf(fmt))\n                    \n                \n\n            \n                \n                    devFormat\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        fmt\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (info: IErrorObject) =>\n  info instanceof Error ? formatError(info) : formatMessage(info)\n                    \n                \n\n            \n                \n                    fmt\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (info: Record) =>\n  `${info.level} ${info.message}\\n\\n${info.stack}\\n`\n                    \n                \n\n            \n                \n                    formatError\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (info: Record) =>\n  `${info.level} ${info.message}`\n                    \n                \n\n            \n                \n                    formatMessage\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : createLogger({\n  exitOnError: false,\n  format: process.env.NODE_ENV === 'production' ? prodFormat() : devFormat(),\n  level: 'debug',\n  transports: [\n    new transports.Console(),\n    // new winston.transports.File({ filename: \"errors.log\" }),\n  ],\n})\n                    \n                \n\n            \n                \n                    logger\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prodFormat\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => format.combine(format.json({ replacer }))\n                    \n                \n\n            \n                \n                    prodFormat\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replaceError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : ({ label, level, message, stack }: any) => ({\n  label,\n  level,\n  message,\n  stack,\n})\n                    \n                \n\n            \n                \n                    replaceError\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        replacer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (key: string, value: any) =>\n  value instanceof Error ? replaceError(value) : value\n                    \n                \n\n            \n                \n                    replacer\n\n                \n            \n\n        \n    \n\n    src/modules/health/__tests__/health.controller.requests.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        endpoint\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'health'\n                    \n                \n\n            \n                \n                    endpoint\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getServerHealth\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async (\n  app: INestApplication,\n): Promise =>\n  request(app.getHttpServer())\n    .get(`/${endpoint}`)\n    .set('Accept', 'application/json')\n                    \n                \n\n            \n                \n                    getServerHealth\n\n                \n            \n\n        \n    \n\n    src/utils/swagger.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INTERNAL_API_SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal API'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INTERNAL_AUTH0_API_SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal Auth0 API'\n                    \n                \n\n\n        \n    \n\n    src/common/constants/strings/index.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        INTERNAL_API_SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal API'\n                    \n                \n\n            \n                \n                    INTERNAL_API_SECURITY\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        INTERNAL_AUTH0_API_SECURITY\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'Internal Auth0 API'\n                    \n                \n\n            \n                \n                    INTERNAL_AUTH0_API_SECURITY\n\n                \n            \n\n        \n    \n\n    src/utils/swagger-doc-generator.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        main\n                        \n                    \n                \n            \n                \n                    \n                        Default value : async () => {\n  const app = await NestFactory.create(\n    AppModule,\n    new ExpressAdapter(),\n    {\n      cors: true,\n      logger: ['error', 'warn', 'log'],\n    },\n  );\n  setupSwagger(app);\n  await app.close();\n}\n                    \n                \n\n\n        \n    \n\n    src/shared/shared.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        providers\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [ConfigService]\n                    \n                \n\n            \n                \n                    providers\n\n                \n            \n\n        \n    \n\n    src/modules/tags/dto/validations/resourceValidation.validation.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        resourceValidation\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (\n  resourceId: string,\n  resourceType: string,\n  resource: string,\n) => {\n  if (\n    (resourceId == null && resourceType == null && resource == null) ||\n    (resourceId != null && resourceType != null && resource != null)\n  ) {\n    return;\n  }\n\n  throw new ResourceValidationException(\n    'resourceId, resourceType, resource are inconsistent',\n  );\n}\n                    \n                \n\n\n        \n    \n\n    src/utils/validate-env.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        validateEnv\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  cleanEnv(process.env, {\n    PORT: port(),\n    // AUTH0_DOMAIN: str(),\n    // AUTH0_AUDIENCE: str(),\n    POSTGRES_DB: str(),\n    POSTGRES_HOST: str(),\n    POSTGRES_PASSWORD: str(),\n    POSTGRES_PORT: port(),\n    POSTGRES_USER: str(),\n    // AUDIT_SQS_URL: str(),\n    // AUTH0_RULE_KEY: str(),\n    // AWS_REGION: str(),\n    // INTERNAL_API_KEY: str(),\n  });\n}\n                    \n                \n\n            \n                \n                    validateEnv\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
